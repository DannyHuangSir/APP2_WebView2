{"ast":null,"code":"import _objectWithoutProperties from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"disabled\",\"isEditAction\",\"immdlySubmit\",\"setShowTip\",\"label\",\"checkedArray\",\"actKey\",\"changeCallback\"];/* eslint-disable */import React from'react';import{BlockSelectedIcon}from'assets/images/icons';import FavoriteBlockButtonStyle from'components/FavoriteBlockButton/favoriteBlockButton.style';import{useController}from'react-hook-form';import{iconGenerator}from'../favoriteGenerator';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var CustomCheckBoxField=function CustomCheckBoxField(_ref){var disabled=_ref.disabled,isEditAction=_ref.isEditAction,immdlySubmit=_ref.immdlySubmit,setShowTip=_ref.setShowTip,label=_ref.label,checkedArray=_ref.checkedArray,actKey=_ref.actKey,changeCallback=_ref.changeCallback,props=_objectWithoutProperties(_ref,_excluded);var _useController=useController(props),field=_useController.field;var onChange=field.onChange,name=field.name,value=field.value;var onChangeHandler=function onChangeHandler(event){var changedActKey=event.target.getAttribute('data-actkey');// 若 checkedArray 裡已存有勾選項目, 就先刪除掉 以方便後續處理\nvar changedIndex=checkedArray.indexOf(changedActKey);if(changedIndex!==-1){checkedArray.splice(changedIndex,1);}// 把已勾選的項目存進 checkedArray\nvar ele=document.getElementById(\"favoriteBlockButton.\".concat(changedActKey));if(ele.getAttribute('class').indexOf('selected')===-1){if(checkedArray.length<10){checkedArray.push(changedActKey);ele.setAttribute('class',ele.getAttribute('class')+' selected');event.target.checked=true;}else{event.target.checked=false;}}else{var classRemoveSelected=ele.getAttribute('class').replace(' selected',' ');ele.setAttribute('class',classRemoveSelected);}if(checkedArray.length>=10){// 假如已選滿 10個, 停用未選項目的按鈕功能 並 顯示已滿提示\nvar index;var list=document.getElementsByClassName('favorite_btn');for(index=0;index<list.length;++index){if(list[index].getAttribute('class').indexOf('selected')===-1){list[index].setAttribute('disabled','disabled');}}setShowTip(true);}else{// 假如未選滿, 啟用全部停用項目的按鈕功能 並 取消已滿提示\nvar _index;var _list=document.getElementsByClassName('favorite_btn');for(_index=0;_index<_list.length;++_index){if(_list[_index].getAttribute('disabled')==='disabled'){_list[_index].removeAttribute('disabled');}}setShowTip(false);}// 觸發下方欄 \"編輯完成(數字)\" 的改變\nchangeCallback(checkedArray.length);/* for debug\r\n    console.log('========= checkbox changed ============');\r\n    console.log(changedActKey);\r\n    console.log(checkedArray);\r\n    console.log('=======================================');\r\n    */};// let fSize = checkedArray.length;\n// console.log('fSize');\n// console.log(fSize);\n// 針對已存在於 checkedArray 的項目, 做項目按鈕的反紫處理,\n// class參數: selected = 反紫, disabled = 反白\nvar classValue=checkedArray.indexOf(actKey)!==-1?'selected':'';classValue+=' favorite_btn';return/*#__PURE__*/_jsx(FavoriteBlockButtonStyle,{id:\"favoriteBlockButton.\".concat(actKey),\"data-actkey\":actKey,className:classValue,disabled:checkedArray.indexOf(actKey)===-1&&checkedArray.length==10?'disabled':'',children:/*#__PURE__*/_jsxs(\"label\",{htmlFor:name,style:{width:'100%',height:'100%',cursor:'pointer',userSelect:'none'},children:[iconGenerator(name.split('.')[1]),/*#__PURE__*/_jsx(\"p\",{children:label}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:name,style:{display:'none'},\"data-actkey\":actKey,onChange:onChangeHandler,checked:!!value}),/*#__PURE__*/_jsx(BlockSelectedIcon,{className:\"selectedIcon\"})]})});};","map":{"version":3,"names":["React","BlockSelectedIcon","FavoriteBlockButtonStyle","useController","iconGenerator","CustomCheckBoxField","disabled","isEditAction","immdlySubmit","setShowTip","label","checkedArray","actKey","changeCallback","props","field","onChange","name","value","onChangeHandler","event","changedActKey","target","getAttribute","changedIndex","indexOf","splice","ele","document","getElementById","length","push","setAttribute","checked","classRemoveSelected","replace","index","list","getElementsByClassName","removeAttribute","classValue","width","height","cursor","userSelect","split","display"],"sources":["C:/Users/allen/git/app2-webview/src/pages/S00100_Favorite/fields/customCheckboxField.js"],"sourcesContent":["/* eslint-disable */\r\nimport React from 'react';\r\nimport { BlockSelectedIcon } from 'assets/images/icons';\r\nimport FavoriteBlockButtonStyle from 'components/FavoriteBlockButton/favoriteBlockButton.style';\r\nimport { useController } from 'react-hook-form';\r\nimport { iconGenerator } from '../favoriteGenerator';\r\n\r\nexport const CustomCheckBoxField = ({\r\n  disabled,\r\n  isEditAction,\r\n  immdlySubmit,\r\n  setShowTip,\r\n  label,\r\n  checkedArray,\r\n  actKey,\r\n  changeCallback,\r\n  ...props\r\n}) => {\r\n  const { field } = useController(props);\r\n  const { onChange, name, value } = field;\r\n  const onChangeHandler = (event) => {\r\n    const changedActKey = event.target.getAttribute('data-actkey');\r\n\r\n    // 若 checkedArray 裡已存有勾選項目, 就先刪除掉 以方便後續處理\r\n    const changedIndex = checkedArray.indexOf(changedActKey);\r\n    if (changedIndex !== -1) {\r\n      checkedArray.splice(changedIndex, 1);\r\n    }\r\n\r\n    // 把已勾選的項目存進 checkedArray\r\n    const ele = document.getElementById(`favoriteBlockButton.${changedActKey}`);\r\n\r\n    if ( ele.getAttribute('class').indexOf('selected') === -1 ) {\r\n\r\n        if (checkedArray.length < 10) { \r\n            \r\n          checkedArray.push(changedActKey);\r\n\r\n          ele.setAttribute('class', ele.getAttribute('class') + ' selected' );\r\n\r\n          event.target.checked = true;\r\n\r\n        }else{\r\n\r\n          event.target.checked = false;\r\n        }\r\n      \r\n    }else{\r\n\r\n        const classRemoveSelected = ele.getAttribute('class').replace(' selected', ' ');\r\n\r\n        ele.setAttribute('class', classRemoveSelected);\r\n    }\r\n   \r\n    if (checkedArray.length >= 10) {// 假如已選滿 10個, 停用未選項目的按鈕功能 並 顯示已滿提示\r\n      let index;\r\n      const list = document.getElementsByClassName('favorite_btn');\r\n\r\n      for (index = 0; index < list.length; ++index) {\r\n        if ( list[index].getAttribute('class').indexOf('selected') === -1 ) {\r\n\r\n          list[index].setAttribute('disabled', 'disabled');\r\n        }\r\n      }\r\n      setShowTip(true);\r\n\r\n    } else {// 假如未選滿, 啟用全部停用項目的按鈕功能 並 取消已滿提示\r\n      let index;\r\n      const list = document.getElementsByClassName('favorite_btn');\r\n\r\n      for (index = 0; index < list.length; ++index) {\r\n        if ( list[index].getAttribute('disabled') === 'disabled' ) {\r\n\r\n          list[index].removeAttribute('disabled');\r\n        }\r\n      }\r\n      setShowTip(false);\r\n    }\r\n\r\n    // 觸發下方欄 \"編輯完成(數字)\" 的改變\r\n    changeCallback(checkedArray.length);\r\n\r\n    /* for debug\r\n    console.log('========= checkbox changed ============');\r\n    console.log(changedActKey);\r\n    console.log(checkedArray);\r\n    console.log('=======================================');\r\n    */\r\n  };\r\n\r\n  // let fSize = checkedArray.length;\r\n  // console.log('fSize');\r\n  // console.log(fSize);\r\n\r\n  // 針對已存在於 checkedArray 的項目, 做項目按鈕的反紫處理,\r\n  // class參數: selected = 反紫, disabled = 反白\r\n  let classValue = checkedArray.indexOf(actKey) !== -1 ? 'selected' : '';\r\n  classValue += ' favorite_btn';\r\n\r\n  return (\r\n    <FavoriteBlockButtonStyle\r\n      id={`favoriteBlockButton.${actKey}`}\r\n      data-actkey={actKey}\r\n      className={classValue}\r\n      disabled={(checkedArray.indexOf(actKey) === -1 && checkedArray.length == 10) ? 'disabled' : ''}\r\n    >\r\n      <label\r\n        htmlFor={name}\r\n        style={{\r\n          width: '100%', height: '100%', cursor: 'pointer', userSelect: 'none',\r\n        }}\r\n      >\r\n        {iconGenerator(name.split('.')[1])}\r\n        <p>{label}</p>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={name}\r\n          style={{display: 'none'}}\r\n          data-actkey={actKey}\r\n          onChange={onChangeHandler}\r\n          checked={!!value}\r\n        />\r\n        <BlockSelectedIcon className=\"selectedIcon\" />\r\n      </label>\r\n    </FavoriteBlockButtonStyle>\r\n\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}