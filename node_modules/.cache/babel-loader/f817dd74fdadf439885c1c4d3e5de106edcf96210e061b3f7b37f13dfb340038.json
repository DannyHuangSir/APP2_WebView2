{"ast":null,"code":"import _objectSpread from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"slides\",\"children\",\"hasDivider\",\"onSlideChange\"];/* eslint no-underscore-dangle: [\"error\", {\"allow\": [\"_slides\", \"_children\"] }] */import React,{useState,forwardRef}from'react';import SwiperCore,{Pagination}from'swiper/core';import{Swiper,SwiperSlide}from'swiper/react';import uuid from'react-uuid';import SwiperLayoutWrapper from'./SwiperLayout.style';import{templateSlides,templateContents}from'./templates';/*\r\n* ==================== SwiperLayout 組件說明 ====================\r\n* 適用於上方Swiper，下方內容之版型，如「存錢計畫」。\r\n* 有兩種使用情境：\r\n*   1、如果參數 slides 和 children 皆為 array，且 length 一致，\r\n*      本元件會自動切換對應的 children。\r\n*    或\r\n*   2、如果單一 children，便需自行管理其內容。可用 onSlideChange hook。\r\n* ==================== SwiperLayput 可傳參數 ====================\r\n* 1. slides: (array | React.Fragment) -> 上方 swiper 的 slides。\r\n* 2. children: (array | React.Fragment) -> 下方內容。\r\n* 3. hasDivider: boolean -> 顯示中間分隔線。\r\n* 4. onSlideChange: function -> 當切換 slide 時會呼叫。\r\n* 5. swiperParameters: any -> 其餘的參數會傳給 Swiper，請參考 Swiper API。\r\n* */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";SwiperCore.use([Pagination]);var SwiperLayout=function SwiperLayout(_ref,ref){var slides=_ref.slides,children=_ref.children,_ref$hasDivider=_ref.hasDivider,hasDivider=_ref$hasDivider===void 0?true:_ref$hasDivider,onSlideChange=_ref.onSlideChange,swiperParameters=_objectWithoutProperties(_ref,_excluded);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),activeIndex=_useState2[0],setActiveIndex=_useState2[1];var _slides=slides!==null&&slides!==void 0?slides:templateSlides;var _children=children!==null&&children!==void 0?children:templateContents;if(!Array.isArray(_slides)){_slides=[_slides];}if(!Array.isArray(_children)){_children=React.Children.toArray(_children);}var shouldHandelSlideChange=_children.length>1&&_children.length===_slides.length;var handleSlideChange=function handleSlideChange(swiper){if(shouldHandelSlideChange){setActiveIndex(swiper.realIndex);}if(onSlideChange){onSlideChange(swiper);}};return/*#__PURE__*/_jsxs(SwiperLayoutWrapper,{children:[/*#__PURE__*/_jsx(Swiper,_objectSpread(_objectSpread({pagination:true,ref:ref,onSlideChange:handleSlideChange},swiperParameters),{},{children:_slides.map(function(slide){return/*#__PURE__*/_jsx(SwiperSlide,{children:slide},uuid());})})),hasDivider&&/*#__PURE__*/_jsx(\"hr\",{}),shouldHandelSlideChange?_children[activeIndex]:children]});};export default/*#__PURE__*/forwardRef(SwiperLayout);","map":{"version":3,"names":["React","useState","forwardRef","SwiperCore","Pagination","Swiper","SwiperSlide","uuid","SwiperLayoutWrapper","templateSlides","templateContents","use","SwiperLayout","ref","slides","children","hasDivider","onSlideChange","swiperParameters","activeIndex","setActiveIndex","_slides","_children","Array","isArray","Children","toArray","shouldHandelSlideChange","length","handleSlideChange","swiper","realIndex","map","slide"],"sources":["C:/Users/allen/git/app2-webview/src/components/SwiperLayout/index.jsx"],"sourcesContent":["/* eslint no-underscore-dangle: [\"error\", {\"allow\": [\"_slides\", \"_children\"] }] */\r\n\r\nimport React, { useState, forwardRef } from 'react';\r\nimport SwiperCore, { Pagination } from 'swiper/core';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport uuid from 'react-uuid';\r\n\r\nimport SwiperLayoutWrapper from './SwiperLayout.style';\r\nimport { templateSlides, templateContents } from './templates';\r\n\r\n/*\r\n* ==================== SwiperLayout 組件說明 ====================\r\n* 適用於上方Swiper，下方內容之版型，如「存錢計畫」。\r\n* 有兩種使用情境：\r\n*   1、如果參數 slides 和 children 皆為 array，且 length 一致，\r\n*      本元件會自動切換對應的 children。\r\n*    或\r\n*   2、如果單一 children，便需自行管理其內容。可用 onSlideChange hook。\r\n* ==================== SwiperLayput 可傳參數 ====================\r\n* 1. slides: (array | React.Fragment) -> 上方 swiper 的 slides。\r\n* 2. children: (array | React.Fragment) -> 下方內容。\r\n* 3. hasDivider: boolean -> 顯示中間分隔線。\r\n* 4. onSlideChange: function -> 當切換 slide 時會呼叫。\r\n* 5. swiperParameters: any -> 其餘的參數會傳給 Swiper，請參考 Swiper API。\r\n* */\r\n\r\nSwiperCore.use([Pagination]);\r\n\r\nconst SwiperLayout = ({\r\n  slides,\r\n  children,\r\n  hasDivider = true,\r\n  onSlideChange,\r\n  ...swiperParameters\r\n}, ref) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  let _slides = slides ?? templateSlides;\r\n  let _children = children ?? templateContents;\r\n\r\n  if (!Array.isArray(_slides)) {\r\n    _slides = [_slides];\r\n  }\r\n\r\n  if (!Array.isArray(_children)) {\r\n    _children = React.Children.toArray(_children);\r\n  }\r\n\r\n  const shouldHandelSlideChange = _children.length > 1\r\n    && _children.length === _slides.length;\r\n\r\n  const handleSlideChange = (swiper) => {\r\n    if (shouldHandelSlideChange) {\r\n      setActiveIndex(swiper.realIndex);\r\n    }\r\n    if (onSlideChange) {\r\n      onSlideChange(swiper);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SwiperLayoutWrapper>\r\n      <Swiper\r\n        pagination\r\n        ref={ref}\r\n        onSlideChange={handleSlideChange}\r\n        {...swiperParameters}\r\n      >\r\n        { _slides.map((slide) => (\r\n          <SwiperSlide key={uuid()}>{slide}</SwiperSlide>\r\n        )) }\r\n      </Swiper>\r\n      { hasDivider && <hr /> }\r\n      { shouldHandelSlideChange ? _children[activeIndex] : children }\r\n    </SwiperLayoutWrapper>\r\n  );\r\n};\r\n\r\nexport default forwardRef(SwiperLayout);\r\n"],"mappings":"mbAAA,kFAEA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CACnD,MAAOC,WAAU,EAAIC,UAAU,KAAQ,aAAa,CACpD,OAASC,MAAM,CAAEC,WAAW,KAAQ,cAAc,CAClD,MAAOC,KAAI,KAAM,YAAY,CAE7B,MAAOC,oBAAmB,KAAM,sBAAsB,CACtD,OAASC,cAAc,CAAEC,gBAAgB,KAAQ,aAAa,CAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAdA,wFAgBAP,UAAU,CAACQ,GAAG,CAAC,CAACP,UAAU,CAAC,CAAC,CAE5B,GAAMQ,aAAY,CAAG,QAAfA,aAAY,MAMfC,GAAG,CAAK,IALTC,OAAM,MAANA,MAAM,CACNC,QAAQ,MAARA,QAAQ,sBACRC,UAAU,CAAVA,UAAU,0BAAG,IAAI,iBACjBC,aAAa,MAAbA,aAAa,CACVC,gBAAgB,0CAEnB,cAAsCjB,QAAQ,CAAC,CAAC,CAAC,wCAA1CkB,WAAW,eAAEC,cAAc,eAElC,GAAIC,QAAO,CAAGP,MAAM,SAANA,MAAM,UAANA,MAAM,CAAIL,cAAc,CACtC,GAAIa,UAAS,CAAGP,QAAQ,SAARA,QAAQ,UAARA,QAAQ,CAAIL,gBAAgB,CAE5C,GAAI,CAACa,KAAK,CAACC,OAAO,CAACH,OAAO,CAAC,CAAE,CAC3BA,OAAO,CAAG,CAACA,OAAO,CAAC,CACrB,CAEA,GAAI,CAACE,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,CAAE,CAC7BA,SAAS,CAAGtB,KAAK,CAACyB,QAAQ,CAACC,OAAO,CAACJ,SAAS,CAAC,CAC/C,CAEA,GAAMK,wBAAuB,CAAGL,SAAS,CAACM,MAAM,CAAG,CAAC,EAC/CN,SAAS,CAACM,MAAM,GAAKP,OAAO,CAACO,MAAM,CAExC,GAAMC,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIC,MAAM,CAAK,CACpC,GAAIH,uBAAuB,CAAE,CAC3BP,cAAc,CAACU,MAAM,CAACC,SAAS,CAAC,CAClC,CACA,GAAId,aAAa,CAAE,CACjBA,aAAa,CAACa,MAAM,CAAC,CACvB,CACF,CAAC,CAED,mBACE,MAAC,mBAAmB,yBAClB,KAAC,MAAM,8BACL,UAAU,MACV,GAAG,CAAEjB,GAAI,CACT,aAAa,CAAEgB,iBAAkB,EAC7BX,gBAAgB,eAElBG,OAAO,CAACW,GAAG,CAAC,SAACC,KAAK,qBAClB,KAAC,WAAW,WAAeA,KAAK,EAAd1B,IAAI,EAAE,CAAuB,EAChD,CAAC,GACK,CACPS,UAAU,eAAI,aAAM,CACpBW,uBAAuB,CAAGL,SAAS,CAACH,WAAW,CAAC,CAAGJ,QAAQ,GACzC,CAE1B,CAAC,CAED,2BAAeb,UAAU,CAACU,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}