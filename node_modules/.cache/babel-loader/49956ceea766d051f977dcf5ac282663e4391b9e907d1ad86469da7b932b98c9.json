{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect,useReducer}from'react';import{useDispatch}from'react-redux';import uuid from'react-uuid';import Main from'components/Layout';import Layout from'components/Layout/Layout';import MemberAccountCard from'components/MemberAccountCard';import{showDrawer}from'utilities/MessageModal';import{loadFuncParams,closeFunc}from'utilities/AppScriptProxy';import{setDrawerVisible,setWaittingVisible}from'stores/reducers/ModalReducer';import{getAgreedAccount,updateAgreedAccount}from'./api';import AccountEditor from'./D00600_AccountEditor';import PageWrapper from'./D00600.style';/**\r\n * D00600 約定帳號管理頁\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";var Page=function Page(){var dispatch=useDispatch();var _useReducer=useReducer(function(x){return x+1;},0),_useReducer2=_slicedToArray(_useReducer,2),forceUpdate=_useReducer2[1];var _useState=useState(),_useState2=_slicedToArray(_useState,2),selectorMode=_useState2[0],setSelectorMode=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),bindAccount=_useState4[0],setBindAccount=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),accounts=_useState6[0],setAccounts=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),selectedAccount=_useState8[0],setSelectedAccount=_useState8[1];/**\r\n   *- 初始化\r\n   */useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var startParams,bindAcct;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(setWaittingVisible(true));// Function Controller 提供的參數\n// startParams = {\n//   selectorMode: true, 表示選取帳號模式，啟用時要隱藏 Home 圖示。\n//   defaultAccount: 指定的帳號將設為已選取狀態\n//   bindAccount: 只列出此帳號設定的約轉帳號清單。\n// };\n_context2.next=3;return loadFuncParams();case 3:startParams=_context2.sent;bindAcct=startParams===null||startParams===void 0?void 0:startParams.bindAccount;// 若有指定帳號，則只取單一帳號的約定帳號清單。\n// TODO 未指定帳號時，應改用頁韱分類。\ngetAgreedAccount(bindAcct).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(accts){var _startParams$selector;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// TODO 還要加上同ID互轉的帳號, 必需 同幣別。\nsetAccounts(accts);if(startParams){setBindAccount(bindAcct);setSelectorMode((_startParams$selector=startParams.selectorMode)!==null&&_startParams$selector!==void 0?_startParams$selector:false);setSelectedAccount(startParams===null||startParams===void 0?void 0:startParams.defaultAccount);}dispatch(setWaittingVisible(false));case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());case 6:case\"end\":return _context2.stop();}}},_callee2);})),[]);/**\r\n   * 將選取的帳號傳回給叫用的單元功能，已知[轉帳]有使用。\r\n   * @param {*} acct 選取的帳號。\r\n   */var onAccountSelected=function onAccountSelected(acct){if(selectorMode){var response={memberId:acct.headshot,accountName:acct.nickName,bankName:acct.bankName,bankId:acct.bankId,accountNo:acct.acctId};closeFunc(response);}};/**\r\n   * 處理UI流程：編輯帳戶\r\n   * @param {*} acct 變更前資料。\r\n   */var editAccount=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(acct){var onFinished;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:onFinished=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(newAcct){var newAccounts;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch(setDrawerVisible(false));_context3.next=3;return updateAgreedAccount(bindAccount,newAcct);case 3:newAccounts=_context3.sent;setAccounts(newAccounts);forceUpdate();case 6:case\"end\":return _context3.stop();}}},_callee3);}));return function onFinished(_x3){return _ref4.apply(this,arguments);};}();_context4.next=3;return showDrawer('編輯約定帳號',/*#__PURE__*/_jsx(AccountEditor,{initData:acct,onFinished:onFinished}));case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function editAccount(_x2){return _ref3.apply(this,arguments);};}();/**\r\n   * 顯示帳戶列表\r\n   */return/*#__PURE__*/_jsx(Layout,{title:\"\\u7D04\\u5B9A\\u5E33\\u865F\\u7BA1\\u7406\",children:/*#__PURE__*/_jsx(Main,{small:true,children:/*#__PURE__*/_jsx(PageWrapper,{children:accounts===null||accounts===void 0?void 0:accounts.filter(function(acct){return acct.selectorMode||!acct.isSelf;}).map(function(acct){return/*#__PURE__*/_jsx(MemberAccountCard,{// key值每次編輯後皆改變，以觸發react重新渲染\nname:acct.nickName,bankNo:acct.bankId,bankName:acct.bankName,account:acct.acctId,memberId:acct.headshot,isSelected:acct.acctId===selectedAccount,onClick:function onClick(){return onAccountSelected(acct);}// 傳回值：選取的帳號。\n,moreActions:acct.isSelf?null:[// 不可編輯自己的帳號。（因為是由同ID互轉建立的）\n{lable:'編輯',type:'edit',onClick:function onClick(){return editAccount(acct);}}]},uuid());})})})});};export default Page;","map":{"version":3,"names":["useState","useEffect","useReducer","useDispatch","uuid","Main","Layout","MemberAccountCard","showDrawer","loadFuncParams","closeFunc","setDrawerVisible","setWaittingVisible","getAgreedAccount","updateAgreedAccount","AccountEditor","PageWrapper","Page","dispatch","x","forceUpdate","selectorMode","setSelectorMode","bindAccount","setBindAccount","accounts","setAccounts","selectedAccount","setSelectedAccount","startParams","bindAcct","then","accts","defaultAccount","onAccountSelected","acct","response","memberId","headshot","accountName","nickName","bankName","bankId","accountNo","acctId","editAccount","onFinished","newAcct","newAccounts","filter","isSelf","map","lable","type","onClick"],"sources":["C:/Users/allen/git/app2-webview/src/pages/D00600_RegisteredContacts/D00600.jsx"],"sourcesContent":["import { useState, useEffect, useReducer } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport uuid from 'react-uuid';\r\nimport Main from 'components/Layout';\r\nimport Layout from 'components/Layout/Layout';\r\nimport MemberAccountCard from 'components/MemberAccountCard';\r\nimport { showDrawer } from 'utilities/MessageModal';\r\nimport { loadFuncParams, closeFunc } from 'utilities/AppScriptProxy';\r\nimport { setDrawerVisible, setWaittingVisible } from 'stores/reducers/ModalReducer';\r\nimport {\r\n  getAgreedAccount,\r\n  updateAgreedAccount,\r\n} from './api';\r\nimport AccountEditor from './D00600_AccountEditor';\r\nimport PageWrapper from './D00600.style';\r\n\r\n/**\r\n * D00600 約定帳號管理頁\r\n */\r\nconst Page = () => {\r\n  const dispatch = useDispatch();\r\n  const [, forceUpdate] = useReducer((x) => x + 1, 0);\r\n\r\n  const [selectorMode, setSelectorMode] = useState();\r\n  const [bindAccount, setBindAccount] = useState();\r\n  const [accounts, setAccounts] = useState();\r\n  const [selectedAccount, setSelectedAccount] = useState();\r\n\r\n  /**\r\n   *- 初始化\r\n   */\r\n  useEffect(async () => {\r\n    dispatch(setWaittingVisible(true));\r\n\r\n    // Function Controller 提供的參數\r\n    // startParams = {\r\n    //   selectorMode: true, 表示選取帳號模式，啟用時要隱藏 Home 圖示。\r\n    //   defaultAccount: 指定的帳號將設為已選取狀態\r\n    //   bindAccount: 只列出此帳號設定的約轉帳號清單。\r\n    // };\r\n    const startParams = await loadFuncParams();\r\n    const bindAcct = startParams?.bindAccount;\r\n\r\n    // 若有指定帳號，則只取單一帳號的約定帳號清單。\r\n    // TODO 未指定帳號時，應改用頁韱分類。\r\n    getAgreedAccount(bindAcct).then(async (accts) => {\r\n      // TODO 還要加上同ID互轉的帳號, 必需 同幣別。\r\n      setAccounts(accts);\r\n\r\n      if (startParams) {\r\n        setBindAccount(bindAcct);\r\n        setSelectorMode(startParams.selectorMode ?? false);\r\n        setSelectedAccount(startParams?.defaultAccount);\r\n      }\r\n\r\n      dispatch(setWaittingVisible(false));\r\n    });\r\n  }, []);\r\n\r\n  /**\r\n   * 將選取的帳號傳回給叫用的單元功能，已知[轉帳]有使用。\r\n   * @param {*} acct 選取的帳號。\r\n   */\r\n  const onAccountSelected = (acct) => {\r\n    if (selectorMode) {\r\n      const response = {\r\n        memberId: acct.headshot,\r\n        accountName: acct.nickName,\r\n        bankName: acct.bankName,\r\n        bankId: acct.bankId,\r\n        accountNo: acct.acctId,\r\n      };\r\n      closeFunc(response);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 處理UI流程：編輯帳戶\r\n   * @param {*} acct 變更前資料。\r\n   */\r\n  const editAccount = async (acct) => {\r\n    const onFinished = async (newAcct) => {\r\n      dispatch(setDrawerVisible(false));\r\n\r\n      const newAccounts = await updateAgreedAccount(bindAccount, newAcct);\r\n      setAccounts(newAccounts);\r\n      forceUpdate();\r\n    };\r\n\r\n    await showDrawer('編輯約定帳號', (<AccountEditor initData={acct} onFinished={onFinished} />));\r\n  };\r\n\r\n  /**\r\n   * 顯示帳戶列表\r\n   */\r\n  return (\r\n    <Layout title=\"約定帳號管理\">\r\n      <Main small>\r\n        <PageWrapper>\r\n          {/* 非選取模式時，不需要列出同ID互轉的帳號 */}\r\n          {accounts?.filter((acct) => (acct.selectorMode || !acct.isSelf)).map((acct) => (\r\n            <MemberAccountCard\r\n              key={uuid()} // key值每次編輯後皆改變，以觸發react重新渲染\r\n              name={acct.nickName}\r\n              bankNo={acct.bankId}\r\n              bankName={acct.bankName}\r\n              account={acct.acctId}\r\n              memberId={acct.headshot}\r\n              isSelected={(acct.acctId === selectedAccount)}\r\n              onClick={() => onAccountSelected(acct)} // 傳回值：選取的帳號。\r\n              moreActions={acct.isSelf ? null : [ // 不可編輯自己的帳號。（因為是由同ID互轉建立的）\r\n                { lable: '編輯', type: 'edit', onClick: () => editAccount(acct) },\r\n              ]}\r\n            />\r\n          )) }\r\n        </PageWrapper>\r\n      </Main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}