{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{callAPI}from'utilities/axios';import{showCustomPrompt}from'utilities/MessageModal';/**\r\n * 查詢客戶信用卡帳單資訊\r\n *\r\n * @author danny\r\n * @Date 2022/09/27\r\n * @param token\r\n * @param period 期別 (ex: 202212)\r\n * }\r\n * @return {\r\n *    NewBalance,\r\n *    Details [\r\n *      {\r\n *        txDate,   交易日期時間 (yyyymmddhhmmss)\r\n *        cardNo,   卡號\r\n *        desc,     消費項目說明\r\n *        amount,   消費金額\r\n *      },\r\n *      ...\r\n *    ]\r\n * }\r\n */export var getBillSummary=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(request){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return callAPI('/api/card/v1/getBillSummary',request);case 2:response=_context.sent;return _context.abrupt(\"return\",response.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getBillSummary(_x){return _ref.apply(this,arguments);};}();/**\r\n * 信用卡帳單交易資訊\r\n * (信用卡子首頁_帳單_更多)\r\n *\r\n * @param token\r\n * @param period 期別 (ex: 202212)\r\n * }\r\n * @return {\r\n *    newBalance              本期應繳總額      ORDS.stmt_amt\r\n *    minDueAmount            最低應繳總額      ORDS.min_amt\r\n *    billClosingDate         帳單結帳日        ORDS.stmt_date\r\n *    payDueDate              繳款截止日        ORDS.pymt_due_date\r\n *    prevBalance             上期應繳金額      ORDS.pre_pymt_due_amt\r\n *    paidRefundAmount        已繳款/退款金額    ORDS.paid_amt\r\n *    newPurchaseAmount       本期新增款項      ORDS.new_stmt_amt\r\n *    interestFee             利息              ORDS.interest\r\n *    cardPenalty             違約金            ORDS.fine\r\n *    revCreditLimit          循環信用額度       ORDS.cycle_credit_limit\r\n *    revgCreditPrinBalance   循環信用本金餘額    ORDS.revolving_principal\r\n *    autoPayAccount          自動扣繳帳號       ORDS.autopay_account\r\n *    paidAmountOnDueDate     繳款截止日扣繳金額  ORDS.autopay_amt\r\n * }\r\n */export var getBillDetail=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return callAPI('/api/card/v1/getBillDetail',request);case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function getBillDetail(_x2){return _ref2.apply(this,arguments);};}();/**\r\n * 查詢會員自扣狀態，決定帳單提示內容與下方Button種類\r\n * 透過 queryCardInfo 查詢本期繳款截止日\r\n *\r\n * @param token\r\n * @return {\r\n *    autoDeductStatus:       0:尚未設定自扣，1:已設定自扣\r\n *    hintToPay:              繳費提醒\r\n * }\r\n * @throws ParseException\r\n *\r\n * TODO: 尚未有完整的測資，所以個電文先帶有測資的 id/帳號\r\n */export var getBillDeducStatus=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request){var response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return callAPI('/api/card/v1/getBillDeducStatus',request);case 2:response=_context3.sent;return _context3.abrupt(\"return\",response.data);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function getBillDeducStatus(_x3){return _ref3.apply(this,arguments);};}();/**\r\n * 下載帳單\r\n   TODO 不確定是否需要其他query條件，是否回傳檔案網址\r\n   @param {\r\n      \"fileType\": 1 = pdf 或 2 = excel\r\n   }\r\n   @returns {\r\n     \"url\": 檔案URL。\r\n   }\r\n */export var getInvoice=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(format){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return showCustomPrompt({title:'待串接API',message:\"\".concat(format===1?'下載PDF':'下載EXCEL'),noDismiss:true});case 2:case\"end\":return _context4.stop();}}},_callee4);}));return function getInvoice(_x4){return _ref4.apply(this,arguments);};}();","map":{"version":3,"names":["callAPI","showCustomPrompt","getBillSummary","request","response","data","getBillDetail","getBillDeducStatus","getInvoice","format","title","message","noDismiss"],"sources":["C:/Users/allen/git/app2-webview/src/pages/R00300_CCBill/api.js"],"sourcesContent":["import { callAPI } from 'utilities/axios';\r\nimport { showCustomPrompt } from 'utilities/MessageModal';\r\n\r\n/**\r\n * 查詢客戶信用卡帳單資訊\r\n *\r\n * @author danny\r\n * @Date 2022/09/27\r\n * @param token\r\n * @param period 期別 (ex: 202212)\r\n * }\r\n * @return {\r\n *    NewBalance,\r\n *    Details [\r\n *      {\r\n *        txDate,   交易日期時間 (yyyymmddhhmmss)\r\n *        cardNo,   卡號\r\n *        desc,     消費項目說明\r\n *        amount,   消費金額\r\n *      },\r\n *      ...\r\n *    ]\r\n * }\r\n */\r\nexport const getBillSummary = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getBillSummary', request);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 信用卡帳單交易資訊\r\n * (信用卡子首頁_帳單_更多)\r\n *\r\n * @param token\r\n * @param period 期別 (ex: 202212)\r\n * }\r\n * @return {\r\n *    newBalance              本期應繳總額      ORDS.stmt_amt\r\n *    minDueAmount            最低應繳總額      ORDS.min_amt\r\n *    billClosingDate         帳單結帳日        ORDS.stmt_date\r\n *    payDueDate              繳款截止日        ORDS.pymt_due_date\r\n *    prevBalance             上期應繳金額      ORDS.pre_pymt_due_amt\r\n *    paidRefundAmount        已繳款/退款金額    ORDS.paid_amt\r\n *    newPurchaseAmount       本期新增款項      ORDS.new_stmt_amt\r\n *    interestFee             利息              ORDS.interest\r\n *    cardPenalty             違約金            ORDS.fine\r\n *    revCreditLimit          循環信用額度       ORDS.cycle_credit_limit\r\n *    revgCreditPrinBalance   循環信用本金餘額    ORDS.revolving_principal\r\n *    autoPayAccount          自動扣繳帳號       ORDS.autopay_account\r\n *    paidAmountOnDueDate     繳款截止日扣繳金額  ORDS.autopay_amt\r\n * }\r\n */\r\nexport const getBillDetail = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getBillDetail', request);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 查詢會員自扣狀態，決定帳單提示內容與下方Button種類\r\n * 透過 queryCardInfo 查詢本期繳款截止日\r\n *\r\n * @param token\r\n * @return {\r\n *    autoDeductStatus:       0:尚未設定自扣，1:已設定自扣\r\n *    hintToPay:              繳費提醒\r\n * }\r\n * @throws ParseException\r\n *\r\n * TODO: 尚未有完整的測資，所以個電文先帶有測資的 id/帳號\r\n */\r\nexport const getBillDeducStatus = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getBillDeducStatus', request);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 下載帳單\r\n   TODO 不確定是否需要其他query條件，是否回傳檔案網址\r\n   @param {\r\n      \"fileType\": 1 = pdf 或 2 = excel\r\n   }\r\n   @returns {\r\n     \"url\": 檔案URL。\r\n   }\r\n */\r\nexport const getInvoice = async (format) => {\r\n  /* TODO\r\n  if (fileType === 1) {\r\n    await downloadPDF('/api/deposit/v1/getDepositBook', request, `${filename}.pdf`);\r\n  } else if (fileType === 2) {\r\n    await downloadCSV('/api/deposit/v1/getDepositBook', request, `${filename}.csv`);\r\n  }\r\n  */\r\n  await showCustomPrompt({\r\n    title: '待串接API',\r\n    message: `${format === 1 ? '下載PDF' : '下載EXCEL'}`,\r\n    noDismiss: true,\r\n  });\r\n};\r\n"],"mappings":"0PAAA,OAASA,OAAO,KAAQ,iBAAiB,CACzC,OAASC,gBAAgB,KAAQ,wBAAwB,CAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,eAAc,4FAAG,iBAAOC,OAAO,uJACnBH,QAAO,CAAC,6BAA6B,CAAEG,OAAO,CAAC,QAAhEC,QAAQ,+CACPA,QAAQ,CAACC,IAAI,wDACrB,kBAHYH,eAAc,4CAG1B,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMI,cAAa,6FAAG,kBAAOH,OAAO,4JAClBH,QAAO,CAAC,4BAA4B,CAAEG,OAAO,CAAC,QAA/DC,QAAQ,iDACPA,QAAQ,CAACC,IAAI,0DACrB,kBAHYC,cAAa,8CAGzB,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,mBAAkB,6FAAG,kBAAOJ,OAAO,4JACvBH,QAAO,CAAC,iCAAiC,CAAEG,OAAO,CAAC,QAApEC,QAAQ,iDACPA,QAAQ,CAACC,IAAI,0DACrB,kBAHYE,mBAAkB,8CAG9B,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,WAAU,6FAAG,kBAAOC,MAAM,+IAQ/BR,iBAAgB,CAAC,CACrBS,KAAK,CAAE,QAAQ,CACfC,OAAO,WAAKF,MAAM,GAAK,CAAC,CAAG,OAAO,CAAG,SAAS,CAAE,CAChDG,SAAS,CAAE,IACb,CAAC,CAAC,yDACH,kBAbYJ,WAAU,8CAatB"},"metadata":{},"sourceType":"module","externalDependencies":[]}