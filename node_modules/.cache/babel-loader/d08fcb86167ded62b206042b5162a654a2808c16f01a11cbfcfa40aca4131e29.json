{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{callAPI}from'utilities/axios';/**\r\n * 查詢客戶信用卡自動扣繳資訊\r\n * (畫面_信用卡子首頁_自動扣繳 - 1)\r\n *\r\n * @param token\r\n * @return {\r\n *    bank      銀行別                                     IVR9019.DEDUCT-BANK\r\n *    account   扣繳帳號                                   IVR9019.DEDUCT-ACCOUNT-NO\r\n *    isFullPay 是否指定應繳總額 Y/N                        IVR9019.DEDUCT-AUTOPAY-RATE=100 ? \"Y\":\"N\"\r\n *    status    狀態 1 申請 2 生效 3 取消 4 退件 5 待生效   IVR9019.DEDUCT-STATUS\r\n * }\r\n *\r\n * TODO: 尚未有完整的測資，accountId 先固定帶 A123014281\r\n */export var getAutoDebits=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(request){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return callAPI('/api/card/v1/getAutoDebits',request);case 2:response=_context.sent;return _context.abrupt(\"return\",response.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getAutoDebits(_x){return _ref.apply(this,arguments);};}();/**\r\n * 申請信用卡自動扣繳\r\n *\r\n * @param token\r\n * @param {\r\n *    bank:       指定銀行代碼\r\n *    account:    扣繳帳號\r\n *    isFullPay:  是否指定應繳總額 Y/N\r\n * }\r\n * @return {\r\n *    result:     true/false\r\n *    message:    回傳結果\r\n * }\r\n *\r\n */export var setAutoDebit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return callAPI('/api/card/v1/setAutoDebit',request);case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function setAutoDebit(_x2){return _ref2.apply(this,arguments);};}();/**\r\n * 取得帳號列表\r\n * @param {*} acctTypes 帳戶類型 M:母帳戶, S:證券戶, F:外幣帳戶, C:子帳戶\r\n * @return [{\r\n *   account: 帳號,\r\n *   name: 帳戶名稱，若有暱稱則會優先用暱稱,\r\n *   transable: 已設約轉 或 同ID互轉(true/false)\r\n *   details: [{ // 外幣多幣別時有多筆\r\n *        balance: 帳戶餘額(非即時資訊), // TODO 依G0002的效能決定是否開放。\r\n *        currency: 幣別代碼,\r\n *   }, ...]\r\n * }, ...]\r\n */export var getAccountsList=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return callAPI('/api/deposit/v1/getAccounts','M');case 2:response=_context3.sent;return _context3.abrupt(\"return\",response.data);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function getAccountsList(){return _ref3.apply(this,arguments);};}();/**\r\n * 查詢客戶的信用卡清單\r\n * (信用卡子首頁 - 1)\r\n * (信用卡子首頁_即時消費明細 - 1)\r\n *\r\n * @param token\r\n * @return {\r\n * usedCardLimit, // 已使用額度\r\n * memberLevel, // 會員等級\r\n * rewardsRateDomestic, // 國內回饋\r\n * rewardsRateOverseas, // 國外回饋\r\n * rewardsAmount, // 回饋試算\r\n * cards [\r\n *      {\r\n *        cardNo, // 卡號\r\n *        isBankeeCard, // 專案代號\r\n *      },\r\n *      ...\r\n *    ]\r\n * }\r\n *\r\n * TODO: 尚未有完整的測資，所以個電文先帶有測資的 id/帳號\r\n */export var getCards=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request){var response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return callAPI('/api/card/v1/getCards',request);case 2:response=_context4.sent;return _context4.abrupt(\"return\",response.data);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function getCards(_x3){return _ref4.apply(this,arguments);};}();","map":{"version":3,"names":["callAPI","getAutoDebits","request","response","data","setAutoDebit","getAccountsList","getCards"],"sources":["C:/Users/allen/git/app2-webview/src/pages/R00500_AutomaticBillPayment/api.js"],"sourcesContent":["import { callAPI } from 'utilities/axios';\r\n\r\n/**\r\n * 查詢客戶信用卡自動扣繳資訊\r\n * (畫面_信用卡子首頁_自動扣繳 - 1)\r\n *\r\n * @param token\r\n * @return {\r\n *    bank      銀行別                                     IVR9019.DEDUCT-BANK\r\n *    account   扣繳帳號                                   IVR9019.DEDUCT-ACCOUNT-NO\r\n *    isFullPay 是否指定應繳總額 Y/N                        IVR9019.DEDUCT-AUTOPAY-RATE=100 ? \"Y\":\"N\"\r\n *    status    狀態 1 申請 2 生效 3 取消 4 退件 5 待生效   IVR9019.DEDUCT-STATUS\r\n * }\r\n *\r\n * TODO: 尚未有完整的測資，accountId 先固定帶 A123014281\r\n */\r\nexport const getAutoDebits = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getAutoDebits', request);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 申請信用卡自動扣繳\r\n *\r\n * @param token\r\n * @param {\r\n *    bank:       指定銀行代碼\r\n *    account:    扣繳帳號\r\n *    isFullPay:  是否指定應繳總額 Y/N\r\n * }\r\n * @return {\r\n *    result:     true/false\r\n *    message:    回傳結果\r\n * }\r\n *\r\n */\r\nexport const setAutoDebit = async (request) => {\r\n  const response = await callAPI('/api/card/v1/setAutoDebit', request);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 取得帳號列表\r\n * @param {*} acctTypes 帳戶類型 M:母帳戶, S:證券戶, F:外幣帳戶, C:子帳戶\r\n * @return [{\r\n *   account: 帳號,\r\n *   name: 帳戶名稱，若有暱稱則會優先用暱稱,\r\n *   transable: 已設約轉 或 同ID互轉(true/false)\r\n *   details: [{ // 外幣多幣別時有多筆\r\n *        balance: 帳戶餘額(非即時資訊), // TODO 依G0002的效能決定是否開放。\r\n *        currency: 幣別代碼,\r\n *   }, ...]\r\n * }, ...]\r\n */\r\nexport const getAccountsList = async () => {\r\n  const response = await callAPI('/api/deposit/v1/getAccounts', 'M');\r\n  // return response.data.map((acct) => ({ acctNo: acct.account }));\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 查詢客戶的信用卡清單\r\n * (信用卡子首頁 - 1)\r\n * (信用卡子首頁_即時消費明細 - 1)\r\n *\r\n * @param token\r\n * @return {\r\n * usedCardLimit, // 已使用額度\r\n * memberLevel, // 會員等級\r\n * rewardsRateDomestic, // 國內回饋\r\n * rewardsRateOverseas, // 國外回饋\r\n * rewardsAmount, // 回饋試算\r\n * cards [\r\n *      {\r\n *        cardNo, // 卡號\r\n *        isBankeeCard, // 專案代號\r\n *      },\r\n *      ...\r\n *    ]\r\n * }\r\n *\r\n * TODO: 尚未有完整的測資，所以個電文先帶有測資的 id/帳號\r\n */\r\nexport const getCards = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getCards', request);\r\n  return response.data;\r\n};\r\n"],"mappings":"0PAAA,OAASA,OAAO,KAAQ,iBAAiB,CAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,cAAa,4FAAG,iBAAOC,OAAO,uJAClBF,QAAO,CAAC,4BAA4B,CAAEE,OAAO,CAAC,QAA/DC,QAAQ,+CACPA,QAAQ,CAACC,IAAI,wDACrB,kBAHYH,cAAa,4CAGzB,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMI,aAAY,6FAAG,kBAAOH,OAAO,4JACjBF,QAAO,CAAC,2BAA2B,CAAEE,OAAO,CAAC,QAA9DC,QAAQ,iDACPA,QAAQ,CAACC,IAAI,0DACrB,kBAHYC,aAAY,8CAGxB,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,gBAAe,6FAAG,8KACNN,QAAO,CAAC,6BAA6B,CAAE,GAAG,CAAC,QAA5DG,QAAQ,iDAEPA,QAAQ,CAACC,IAAI,0DACrB,kBAJYE,gBAAe,2CAI3B,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,SAAQ,6FAAG,kBAAOL,OAAO,4JACbF,QAAO,CAAC,uBAAuB,CAAEE,OAAO,CAAC,QAA1DC,QAAQ,iDACPA,QAAQ,CAACC,IAAI,0DACrB,kBAHYG,SAAQ,8CAGpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}