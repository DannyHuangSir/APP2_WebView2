import TWCA4E2EELib from './TWCA4E2EELib';

/**
 * e2ee加密
 * @param value
 * @returns {string}
 */
const e2ee = (value) => {
  // const response = await getE2EEFlag();
  const response = {
    e2ee_flag: 'Y',
    exponent: '8C9B',
    modulus: 'B6CA16477CA1E33065A73E6F6724A811BA84BB1A539E2DC5C48608ADDE8562A586413CD631D875F9960AC0D0C0B9657F2D1E1F4CEDA2CFF8CD63B3E636297869E674EA24DD73B2B7EED745580B140513232FD4D6C0C4E2A6A7BA081FF99395FFDEAF22C8F8A5D6CEBA13A40D9E3A27ADC64566B2AA8815964780F3F60511A18448690B428E217252FB425D00B774B7B74E58AE0AFCE693AA86F6FB176949FA34F25100919158131859E9BE9A80B6239D5B9DC67F3722D7B495F85CF39E0253587A516E3A734CF6AE82E1767578B7C9AD5780B5DACB9F26365FF5640B3EDE0582FD81A70CCEA29AC0753C6DF77641134F472DC7B8EF085E7E9118CA0D2B969021',
  };
  const e2eeFlag = response.e2ee_flag;
  const PUBLIC_EXPONENT = response.exponent;
  const MODULUS = response.modulus;
  let inputData;
  if (e2eeFlag === 'Y') {
    const errorCode = TWCA4E2EELib.EncryptSecret(value, PUBLIC_EXPONENT, MODULUS);
    if (errorCode === 0) {
      inputData = TWCA4E2EELib.getSecret();
    }
  }
  return inputData;
};

export default e2ee;
