{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{callAPI}from'utilities/axios';/**\r\n * 取得帳戶清單\r\n * @param {*} acctTypes 帳戶類型 M:母帳戶, S:證券戶, F:外幣帳戶, C:子帳戶\r\n * @returns [{\r\n *   account: 帳號,\r\n *   name:      帳戶名稱，若有暱稱則會優先用暱稱,\r\n *   transable: 已設約轉 或 同ID互轉(true/false)\r\n *   details: [{ // 外幣多幣別時有多筆\r\n *        balance: 帳戶餘額(非即時資訊)\r\n *        currency: 幣別代碼,\r\n *   }, ...]\r\n * }, ...]\r\n */export var getAccountsList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(acctTypes){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return callAPI('/api/deposit/v1/getAccounts',acctTypes);case 2:response=_context.sent;return _context.abrupt(\"return\",response.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getAccountsList(_x){return _ref.apply(this,arguments);};}();/**\r\n * 查詢約定轉入帳號清單。\r\n * @param {*} accountNo 要查詢的帳號。\r\n * @returns {Promise<[{\r\n *   bankId: 約定轉入帳戶銀行代碼\r\n *   acctId: 約定轉入帳戶帳號\r\n * }]>}\r\n */export var getAgreedAccounts=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(accountNo){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return callAPI('/api/transfer/agreedAccount/v1/get',{accountNo:accountNo});case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function getAgreedAccounts(_x2){return _ref2.apply(this,arguments);};}();/**\r\n * 取得外幣交易性質別清單。\r\n * WebView：E00100換匯\r\n * @param request {\r\n *   trnsType, // 交易類別 - 空白:全查 1:不區分 2:台外互轉 3:同幣別互轉\r\n * }\r\n * @returns [{\r\n *   leglCode: 性質別代碼,\r\n *   leglDesc: 性質別說明,\r\n * }, ...]\r\n */export var getExchangePropertyList=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(param){var response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return callAPI('/api/foreign/v1/getTransactionType',param);case 2:response=_context3.sent;return _context3.abrupt(\"return\",response.data);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function getExchangePropertyList(_x3){return _ref3.apply(this,arguments);};}();/**\r\n * 外幣轉帳。（限定約轉，未設有約定轉入帳號者，將無法使用）\r\n * @param {*} param {\r\n *   ...(很多)\r\n * }\r\n * @returns {\r\n *   ...(很多)\r\n * }\r\n */export var transferFtoF=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(param){var response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return callAPI('/api/foreign/v1/transfer',param);case 2:response=_context4.sent;return _context4.abrupt(\"return\",response.data);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function transferFtoF(_x4){return _ref4.apply(this,arguments);};}();/**\r\n * 建立外幣轉帳。（限定約轉，未設有約定轉入帳號者，將無法使用）\r\n * @param {*} param {\r\n *   ...(很多)\r\n * }\r\n * @returns {\r\n *   ...(很多)\r\n * }\r\n */export var createTransfer=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(param){var response;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return callAPI('/api/foreign/transfer/v1/create',param);case 2:response=_context5.sent;return _context5.abrupt(\"return\",response.data);case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function createTransfer(_x5){return _ref5.apply(this,arguments);};}();/**\r\n * 執行外幣轉帳。（限定約轉，未設有約定轉入帳號者，將無法使用）\r\n * @param {*} param {\r\n *   ...(很多)\r\n * }\r\n * @returns {\r\n *   ...(很多)\r\n * }\r\n */export var executeTransfer=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(param){var response;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return callAPI('/api/foreign/transfer/v1/execute',param);case 2:response=_context6.sent;return _context6.abrupt(\"return\",response.data);case 4:case\"end\":return _context6.stop();}}},_callee6);}));return function executeTransfer(_x6){return _ref6.apply(this,arguments);};}();","map":{"version":3,"names":["callAPI","getAccountsList","acctTypes","response","data","getAgreedAccounts","accountNo","getExchangePropertyList","param","transferFtoF","createTransfer","executeTransfer"],"sources":["C:/Users/allen/git/app2-webview/src/pages/D00700_ForeignCurrencyTransfer/api.js"],"sourcesContent":["import { callAPI } from 'utilities/axios';\r\n\r\n/**\r\n * 取得帳戶清單\r\n * @param {*} acctTypes 帳戶類型 M:母帳戶, S:證券戶, F:外幣帳戶, C:子帳戶\r\n * @returns [{\r\n *   account: 帳號,\r\n *   name:      帳戶名稱，若有暱稱則會優先用暱稱,\r\n *   transable: 已設約轉 或 同ID互轉(true/false)\r\n *   details: [{ // 外幣多幣別時有多筆\r\n *        balance: 帳戶餘額(非即時資訊)\r\n *        currency: 幣別代碼,\r\n *   }, ...]\r\n * }, ...]\r\n */\r\nexport const getAccountsList = async (acctTypes) => {\r\n  const response = await callAPI('/api/deposit/v1/getAccounts', acctTypes);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 查詢約定轉入帳號清單。\r\n * @param {*} accountNo 要查詢的帳號。\r\n * @returns {Promise<[{\r\n *   bankId: 約定轉入帳戶銀行代碼\r\n *   acctId: 約定轉入帳戶帳號\r\n * }]>}\r\n */\r\nexport const getAgreedAccounts = async (accountNo) => {\r\n  const response = await callAPI('/api/transfer/agreedAccount/v1/get', { accountNo });\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 取得外幣交易性質別清單。\r\n * WebView：E00100換匯\r\n * @param request {\r\n *   trnsType, // 交易類別 - 空白:全查 1:不區分 2:台外互轉 3:同幣別互轉\r\n * }\r\n * @returns [{\r\n *   leglCode: 性質別代碼,\r\n *   leglDesc: 性質別說明,\r\n * }, ...]\r\n */\r\nexport const getExchangePropertyList = async (param) => {\r\n  const response = await callAPI('/api/foreign/v1/getTransactionType', param);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 外幣轉帳。（限定約轉，未設有約定轉入帳號者，將無法使用）\r\n * @param {*} param {\r\n *   ...(很多)\r\n * }\r\n * @returns {\r\n *   ...(很多)\r\n * }\r\n */\r\nexport const transferFtoF = async (param) => {\r\n  const response = await callAPI('/api/foreign/v1/transfer', param);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 建立外幣轉帳。（限定約轉，未設有約定轉入帳號者，將無法使用）\r\n * @param {*} param {\r\n *   ...(很多)\r\n * }\r\n * @returns {\r\n *   ...(很多)\r\n * }\r\n */\r\nexport const createTransfer = async (param) => {\r\n  const response = await callAPI('/api/foreign/transfer/v1/create', param);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 執行外幣轉帳。（限定約轉，未設有約定轉入帳號者，將無法使用）\r\n * @param {*} param {\r\n *   ...(很多)\r\n * }\r\n * @returns {\r\n *   ...(很多)\r\n * }\r\n */\r\nexport const executeTransfer = async (param) => {\r\n  const response = await callAPI('/api/foreign/transfer/v1/execute', param);\r\n  return response.data;\r\n};\r\n"],"mappings":"0PAAA,OAASA,OAAO,KAAQ,iBAAiB,CAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,gBAAe,4FAAG,iBAAOC,SAAS,uJACtBF,QAAO,CAAC,6BAA6B,CAAEE,SAAS,CAAC,QAAlEC,QAAQ,+CACPA,QAAQ,CAACC,IAAI,wDACrB,kBAHYH,gBAAe,4CAG3B,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMI,kBAAiB,6FAAG,kBAAOC,SAAS,4JACxBN,QAAO,CAAC,oCAAoC,CAAE,CAAEM,SAAS,CAATA,SAAU,CAAC,CAAC,QAA7EH,QAAQ,iDACPA,QAAQ,CAACC,IAAI,0DACrB,kBAHYC,kBAAiB,8CAG7B,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAME,wBAAuB,6FAAG,kBAAOC,KAAK,4JAC1BR,QAAO,CAAC,oCAAoC,CAAEQ,KAAK,CAAC,QAArEL,QAAQ,iDACPA,QAAQ,CAACC,IAAI,0DACrB,kBAHYG,wBAAuB,8CAGnC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAME,aAAY,6FAAG,kBAAOD,KAAK,4JACfR,QAAO,CAAC,0BAA0B,CAAEQ,KAAK,CAAC,QAA3DL,QAAQ,iDACPA,QAAQ,CAACC,IAAI,0DACrB,kBAHYK,aAAY,8CAGxB,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,eAAc,6FAAG,kBAAOF,KAAK,4JACjBR,QAAO,CAAC,iCAAiC,CAAEQ,KAAK,CAAC,QAAlEL,QAAQ,iDACPA,QAAQ,CAACC,IAAI,0DACrB,kBAHYM,eAAc,8CAG1B,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,gBAAe,6FAAG,kBAAOH,KAAK,4JAClBR,QAAO,CAAC,kCAAkC,CAAEQ,KAAK,CAAC,QAAnEL,QAAQ,iDACPA,QAAQ,CAACC,IAAI,0DACrB,kBAHYO,gBAAe,8CAG3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}