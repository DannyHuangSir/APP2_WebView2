{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";/* eslint-disable no-unused-vars */ /* eslint-disable no-bitwise */ /* eslint-disable object-curly-newline */ /* eslint-disable no-use-before-define */ /* eslint-disable brace-style */import forge from'node-forge';import{Buffer}from'buffer';import PasswordDrawer from'components/PasswordDrawer';import{getTransactionAuthMode,createTransactionAuth,transactionAuthVerify}from'components/PasswordDrawer/api';import{customPopup,showDrawer,showError}from'./MessageModal';import e2ee from'./E2ee';import{jsx as _jsx}from\"react/jsx-runtime\";var device={ios:function ios(){return!(sessionStorage.getItem('webMode')==='true')&&/iPhone|iPad|iPod/i.test(navigator.userAgent);},android:function android(){return!(sessionStorage.getItem('webMode')==='true')&&/Android/i.test(navigator.userAgent);}};/**\r\n * 取得目前運行的作業系統代碼。\r\n * @returns {Number} 1.iOS, 2.Android, 3.其他\r\n */function getOsType(){if(device.ios)return 1;if(device.android)return 2;return 3;}/**\r\n * 取得系統執行的硬體設備名稱。\r\n * @returns \"MacIntel\", \"Win32\", \"Linux x86_64\", \"Linux x86_64\"...\r\n */function getPlatform(){return navigator.platform;}/**\r\n * 篩掉不要顯示的 APP JS Script log\r\n * @param {*} appJsName APP提供的JavaScript funciton名稱。\r\n */function showLog(appJsName){switch(appJsName){case'onLoading':case'setAuthdata':return false;default:return true;}}/**\r\n * 執行 APP 提供的 JavaScript（ jstoapp ）\r\n * @param {*} appJsName APP提供的JavaScript funciton名稱。\r\n * @param {*} jsParams JavaScript的執行參數。\r\n * @param {*} needCallback 表示需要從 APP 取得傳回值，所以需要等待 Callback\r\n * @param {*} webDevTest Web開發測試時的執行方法。(Option)\r\n * @returns\r\n */function callAppJavaScript(_x,_x2,_x3,_x4){return _callAppJavaScript.apply(this,arguments);}/**\r\n * Web版 Function Controller\r\n */function _callAppJavaScript(){_callAppJavaScript=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(appJsName,jsParams,needCallback,webDevTest){var jsToken,CallbackFunc,promise,result;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:jsToken=\"A\".concat(Math.floor(Math.random()*100000000).toString().padStart(8,'0'));// 有千萬分之一的機率重覆。\nif(showLog(appJsName))console.log(\"\\x1B[33mAPP-JS://\".concat(appJsName,\"[\").concat(jsToken,\"] \\x1B[37m - Params = \"),jsParams);if(!window.AppJavaScriptCallback){window.AppJavaScriptCallback={};window.AppJavaScriptCallbackPromiseResolves={};}/**\r\n   * 負責接收 APP JavaScript API callback 的共用方法。\r\n   * @param {*} value APP JavaScript API的傳回值。\r\n   */CallbackFunc=function CallbackFunc(token,value){var result;try{// 若是 JSON 格式，則以物件型態傳回。\nresult=JSON.parse(value);}catch(ex){result=value;}window.AppJavaScriptCallbackPromiseResolves[token](result);delete window.AppJavaScriptCallbackPromiseResolves[token];delete window.AppJavaScriptCallback[token];};promise=new Promise(function(resolve){window.AppJavaScriptCallback[jsToken]=function(value){return CallbackFunc(jsToken,value);};window.AppJavaScriptCallbackPromiseResolves[jsToken]=resolve;var request=_objectSpread(_objectSpread({},jsParams),{},{callback:needCallback?\"AppJavaScriptCallback['\".concat(jsToken,\"']\"):null// 此方法可提供所有WebView共用。\n});if(device.ios()){var msg=JSON.stringify({name:appJsName,data:JSON.stringify(request)});window.webkit.messageHandlers.jstoapp.postMessage(msg);}else if(device.android()){window.jstoapp[appJsName](JSON.stringify(request));}else if(needCallback||webDevTest){window.AppJavaScriptCallback[jsToken](webDevTest?webDevTest():null);return;}// else throw new Error('使用 Web 版未支援的 APP JavaScript 模擬方法(' + appJsName + ')');\n// 若不需要從 APP 取得傳回值，就直接結束。\nif(!needCallback)resolve(null);});// result 是由 AppJavaScriptCallback 接收，並嘗試用 JSON Parse 轉為物件，轉不成功則以原資料內容傳回。\n_context.next=7;return promise;case 7:result=_context.sent;if(showLog(appJsName))console.log(\"\\x1B[33mAPP-JS://\".concat(appJsName,\"[\").concat(jsToken,\"] \\x1B[37m - Result = \"),result);return _context.abrupt(\"return\",result);case 10:case\"end\":return _context.stop();}}},_callee);}));return _callAppJavaScript.apply(this,arguments);}var funcStack={/**\r\n   * 從 localStorage 取出功能執行堆疊，並轉為 Array 物件後傳回。\r\n   * @returns {Array} 功能執行堆疊\r\n   */getStack:function getStack(){var _localStorage$getItem;return JSON.parse((_localStorage$getItem=localStorage.getItem('funcStack'))!==null&&_localStorage$getItem!==void 0?_localStorage$getItem:'[]');},update:function update(stack){return localStorage.setItem('funcStack',JSON.stringify(stack));},/** 清空 功能執行堆疊，適用於 goHome 功能。 */clear:function clear(){return funcStack.update([]);},/**\r\n   * 將指定功能置入 功能執行堆疊 最後一個項目。\r\n   * @param {{\r\n   *   funcID: '單元功能代碼。',\r\n   *   funcParams: '提共給啟動的單元功能的參數，被啟動的單元功能是透過 loadFuncParams() 取回。',\r\n   *   keepData: '當啟動的單元功能結束後，返回原功能啟動時取回的資料。',\r\n   * }} startItem 要執行的功能。\r\n   */push:function push(startItem){console.log('Start Function : ',startItem);var stack=funcStack.getStack();stack.push(startItem);funcStack.update(stack);// 寫入 Function 啟動參數，提供元功能在啟動後，可以透過 loadFuncParams() 取得。\n// NOTE keepData 必需是 null，才不會在 loadFuncParams() 誤判，因為 keepData 有值時優先當啟動參數。\nvar params=startItem.funcParams?JSON.stringify({funcParams:startItem.funcParams,keepData:null}):null;localStorage.setItem('funcParams',params);},/**\r\n   * 取出 功能執行堆疊 的最後一個項目，並從堆疊中移出。\r\n   * @returns {{\r\n   *   funcID: '單元功能代碼。',\r\n   *   funcParams: '提共給啟動的單元功能的參數，被啟動的單元功能是透過 loadFuncParams() 取回。',\r\n   *   keepData: '當啟動的單元功能結束後，返回原功能啟動時取回的資料。',\r\n   * }} 目前正在執行中的功能啟動資訊。\r\n   */pop:function pop(){localStorage.removeItem('funcParams');var stack=funcStack.getStack();if(stack.length===0)return null;var closedItem=stack[stack.length-1];stack.pop();funcStack.update(stack);// 寫入 Function 啟動參數。\nvar startItem=stack[stack.length-1];if(closedItem){var _startItem$funcID;var params={funcParams:startItem===null||startItem===void 0?void 0:startItem.funcParams,keepData:closedItem.keepData};localStorage.setItem('funcParams',JSON.stringify(params));console.log('Close Function and Back to (',(_startItem$funcID=startItem===null||startItem===void 0?void 0:startItem.funcID)!==null&&_startItem$funcID!==void 0?_startItem$funcID:'Home',')',params);}return startItem;},/**\r\n   * 取得 功能執行堆疊 最後一個項目，但不會從堆疊中移出。\r\n   * @returns {{\r\n   *   funcID: '單元功能代碼。',\r\n   *   funcParams: '提共給啟動的單元功能的參數，被啟動的單元功能是透過 loadFuncParams() 取回。',\r\n   *   keepData: '當啟動的單元功能結束後，返回原功能啟動時取回的資料。',\r\n   * }} 目前正在執行中的功能啟動資訊。\r\n   */peek:function peek(){var stack=funcStack.getStack();var lastItem=stack[stack.length-1];return lastItem;}};/**\r\n * 取得啟動目前單元功能的功能代碼。\r\n * @returns {String} 功能代碼。\r\n */function getCallerFunc(){var stack=funcStack.getStack();if(stack.length<=1)return null;return stack[stack.length-2].funcID;}/**\r\n * 網頁通知APP跳轉至首頁\r\n */function goHome(){return _goHome.apply(this,arguments);}/**\r\n * 網頁通知APP跳轉指定功能\r\n * @param {*} funcID 單元功能代碼。\r\n * @param {*} funcParams 提共給啟動的單元功能的參數，被啟動的單元功能是透過 loadFuncParams() 取回。\r\n * @param {*} keepData 當啟動的單元功能結束後，返回原功能啟動時取回的資料。\r\n */function _goHome(){_goHome=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:funcStack.clear();_context2.next=3;return callAppJavaScript('goHome',null,false,function(){startFunc('/');});case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _goHome.apply(this,arguments);}function startFunc(_x5,_x6,_x7){return _startFunc.apply(this,arguments);}/**\r\n * 觸發APP返回上一頁功能，並將指定的資料透過 loadFuncParams() 傳回給啟動目前功能的單元功能。\r\n * @param {*} response 傳回值，會暫存在 SessionStorate(\"funcResp\") 中。\r\n */function _startFunc(){_startFunc=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(funcID,funcParams,keepData){var data,isFunction;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(funcID){_context3.next=4;break;}_context3.next=3;return showError('此功能尚未完成！');case 3:return _context3.abrupt(\"return\");case 4:funcID=funcID.replace(/^\\/*/,'');// 移掉前置的 '/' 符號,\ndata={funcID:funcID,funcParams:funcParams?JSON.stringify(funcParams):null,// 要先轉 JSON 字串是為了配合 APP JavaScript\nkeepData:keepData?JSON.stringify(keepData):null// 要先轉 JSON 字串是為了配合 APP JavaScript\n};funcStack.push(data);// 只要不是 A00100 這種格式的頁面，一律視為 WebPage 而不透過 APP 的 Function Controller 轉導。\nisFunction=/^[A-Z]\\d{5}$/.test(funcID);if(!isFunction){_context3.next=13;break;}_context3.next=11;return callAppJavaScript('startFunc',data,false,function(){window.location.pathname=\"\".concat(process.env.REACT_APP_ROUTER_BASE,\"/\").concat(funcID);});case 11:_context3.next=14;break;case 13:window.location.pathname=\"\".concat(process.env.REACT_APP_ROUTER_BASE,\"/\").concat(funcID);case 14:case\"end\":return _context3.stop();}}},_callee3);}));return _startFunc.apply(this,arguments);}function closeFunc(_x8){return _closeFunc.apply(this,arguments);}/**\r\n * 取得 APP Function Controller 提供的功能啟動參數。\r\n * @returns {Promise<{\r\n *   params: '被啟動時的 funcParams 或是啟動下一個功能時，要求 startFunc 暫存的 keepData。 這裡的 params 並不是一個物件',\r\n *   response: '前一功能的傳回的資料',\r\n * }>} 若參數當時是以 JSON 物件儲存，則同樣會轉成物件傳回。\r\n */function _closeFunc(){_closeFunc=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(response){var closeItem,isFunction,startItem,webCloseFunc;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:// 將要傳回給前一功能（啟動目前功能的單元功能）的資料 存入 sessionStorage[funcResp]\n// 再由 loadFuncParams() 取出，放在啟動參數的 response 參數中。\nif(response&&!response.target&&!response.type){// NOTE event物件會被誤判為傳回值，所以必需排除。\nsessionStorage.setItem('funcResp',JSON.stringify(response));}closeItem=funcStack.peek();// 因為 funcStack 還沒 pop，所以用 peek 還以取得正在執行中的 單元功能(例：A00100) 或是 頁面(例：moreTransactions)\nisFunction=!closeItem||/^[A-Z]\\d{5}$/.test(closeItem.funcID);// 表示 funcID 是由 Function Controller 控制的單元功能。\nstartItem=funcStack.pop();webCloseFunc=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var appJsRs;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!startItem){_context4.next=4;break;}// 表示返回由 WebView 啟動的單元功能或頁面，例：從「更多」啟動了某項單元功能，當此單元功能關閉時，就會進到這裡。\nwindow.location.pathname=\"\".concat(process.env.REACT_APP_ROUTER_BASE,\"/\").concat(startItem.funcID);// keepData 存入 localStorage 'funcParams'\n_context4.next=11;break;case 4:if(!(sessionStorage.getItem('isLogin')!=='1')){_context4.next=7;break;}window.location.pathname=\"\".concat(process.env.REACT_APP_ROUTER_BASE,\"/login\");return _context4.abrupt(\"return\");case 7:_context4.next=9;return callAppJavaScript('getActiveFuncID',null,true);case 9:appJsRs=_context4.sent;// 取得 APP 目前的 FuncID\nif(appJsRs){// 例：首頁卡片 啟動 存錢計劃，當 存錢計劃 選擇返回前一功能時，就會進到這裡。（因為此時的 funcStack 是空的）\nwindow.location.pathname=\"\".concat(process.env.REACT_APP_ROUTER_BASE,\"/\").concat(appJsRs.funcID);}else window.location.pathname=\"\".concat(process.env.REACT_APP_ROUTER_BASE,\"/\");case 11:case\"end\":return _context4.stop();}}},_callee4);}));return function webCloseFunc(){return _ref.apply(this,arguments);};}();if(!isFunction){_context5.next=10;break;}_context5.next=8;return callAppJavaScript('closeFunc',null,false,webCloseFunc);case 8:_context5.next=12;break;case 10:_context5.next=12;return webCloseFunc();case 12:case\"end\":return _context5.stop();}}},_callee5);}));return _closeFunc.apply(this,arguments);}function loadFuncParams(){return _loadFuncParams.apply(this,arguments);}/**\r\n * 開啟/關閉APP Loading等待畫面\r\n * @param {Promise<boolean>} visible\r\n */function _loadFuncParams(){_loadFuncParams=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(){var funcItem,isFunction,webGetFuncParams,data,params,keepData,dataStr,response;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;funcItem=funcStack.peek();// 因為功能已經啟動，所以用 peek 取得正在執行中的 單元功能(例：A00100) 或是 頁面(例：moreTransactions)\n// 表示 funcID 不是一般頁面，而是由 Function Controller 控制的單元功能。\n// NOTE 這種判斷方式，非常容易誤判！只有「一個大寫字母＋5個數字」的功能代碼才算是單元功能。\nisFunction=!funcItem||/^[A-Z]\\d{5}$/.test(funcItem.funcID);/**\r\n     * 取得儲存於 localStorage 的啟動參數。此功能是為了提供一般頁面或Web版Function Contoller用。\r\n     * @returns {{ funcParams, keepData }}\r\n     */webGetFuncParams=function webGetFuncParams(){var params=localStorage.getItem('funcParams');if(!params||params==='null')return null;if(params.startsWith('{'))return JSON.parse(params);return params;};// 一般頁面 則不可向 APP 的 Function Controller 取資料。\nif(!isFunction){_context6.next=10;break;}_context6.next=7;return callAppJavaScript('getPagedata',null,true,webGetFuncParams);case 7:_context6.t0=_context6.sent;_context6.next=11;break;case 10:_context6.t0=webGetFuncParams();case 11:data=_context6.t0;params=null;if(data&&data!=='undefined'){// 解析由 APP 傳回的資料, 只要有 keepData 就表示是由叫用的功能結束返回\n// 因此，要以 keepData 為單元功能的啟動參數。\n// 反之，表示是單元功能被啟動，此時才是以 funcParams 為單元功能的啟動參數。\nkeepData=data.keepData&&data.keepData!==''?data.keepData:null;dataStr=keepData!==null&&keepData!==void 0?keepData:data.funcParams;params=dataStr&&dataStr.startsWith('{')?JSON.parse(dataStr):null;// NOTE 只支援APP JS傳回JSON格式資料！\n}// 取得 Function 在 closeFunc 時提供的傳回值。\nresponse=sessionStorage.getItem('funcResp');sessionStorage.removeItem('funcResp');if(response){console.log('>> 前一單元功能的 傳回值 : ',response);if(!params)params={};params.response=JSON.parse(response);}// await showAlert(`>> Function 啟動參數 : ${JSON.stringify(params)}`);\nconsole.log('>> Function 啟動參數 : ',params);return _context6.abrupt(\"return\",params);case 21:_context6.prev=21;_context6.t1=_context6[\"catch\"](0);console.log('>> Function 啟動參數 ** ERROR ** : ',_context6.t1);_context6.next=26;return showAlert(JSON.stringify(_context6.t1));case 26:return _context6.abrupt(\"return\",_context6.t1);case 27:case\"end\":return _context6.stop();}}},_callee6,null,[[0,21]]);}));return _loadFuncParams.apply(this,arguments);}function switchLoading(_x9){return _switchLoading.apply(this,arguments);}/**\r\n * 啟動APP OCR畫面及識別流程, APP在處理結束後會呼叫callback Web JS將傳給網頁\r\n * @param {*} imageType 影像類型。1.身份證正面, 2.身份證反面\r\n * @returns 辨識結果。例：{\"rtcode\":\"\", \"rtmsg\":\"\",\"data\":[{\"type\":\"name\",\"data\":\"林宜美\"},{\"type\":\"birthday\",\"data\":\"69/5/20\"},{\"type\":\"sex\",\"data\":\"女\"}]}\r\n */function _switchLoading(){_switchLoading=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(visible){var data;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:data={open:visible?'Y':'N'};_context7.next=3;return callAppJavaScript('onLoading',data,false);case 3:case\"end\":return _context7.stop();}}},_callee7);}));return _switchLoading.apply(this,arguments);}function doOCR(_x10){return _doOCR.apply(this,arguments);}/**\r\n * 以 Popup 模式開啟 APP 原生的 WebView，不會影響到目前運做中的 WebView。\r\n * 注意：Page間的資料傳遞與傳回值的取得，需由 Page 自行處理。\r\n * @param {*} url 要開啟的畫面連結\r\n */function _doOCR(){_doOCR=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(imageType){var data;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:data={ocrType:imageType};_context8.next=3;return callAppJavaScript('onOCR',data,true);case 3:return _context8.abrupt(\"return\",_context8.sent);case 4:case\"end\":return _context8.stop();}}},_callee8);}));return _doOCR.apply(this,arguments);}function showPopup(_x11){return _showPopup.apply(this,arguments);}/**\r\n * 開啟原生的 Alert 視窗。\r\n * @param {*} message 要顯示的訊息。\r\n */function _showPopup(){_showPopup=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(url){var data;return _regeneratorRuntime().wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:data={url:url};_context9.next=3;return callAppJavaScript('openPopWebView',data,false,function(){// TODO 用 MessageModal 的 customPopup 模擬。\n});case 3:case\"end\":return _context9.stop();}}},_callee9);}));return _showPopup.apply(this,arguments);}function showAlert(_x12){return _showAlert.apply(this,arguments);}/**\r\n * 開啟 APP 分享功能。\r\n * @param {*} message 要分享的訊息內容，內容為 HTML 格式。\r\n */function _showAlert(){_showAlert=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(message){var data;return _regeneratorRuntime().wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:data={message:message};_context10.next=3;return callAppJavaScript('showAlert',data,false,function(){alert(message);});case 3:case\"end\":return _context10.stop();}}},_callee10);}));return _showAlert.apply(this,arguments);}function shareMessage(_x13){return _shareMessage.apply(this,arguments);}// Note setWebLogdata 用不到\n// TODO 提供 Exception 資訊給 APP 寫入回報，就有需要了。\n/**\r\n * 取得 JWT Payload 加密用的 AES Key 及 IV\r\n * @returns\r\n */function _shareMessage(){_shareMessage=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(message){var data;return _regeneratorRuntime().wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:data={webtext:message};_context11.next=3;return callAppJavaScript('setShareText',data,false,function(){// 測試版的分享功能。\ncustomPopup('分享功能 (測試版)',message);});case 3:case\"end\":return _context11.stop();}}},_callee11);}));return _shareMessage.apply(this,arguments);}function getAesKey(){return _getAesKey.apply(this,arguments);}/**\r\n * 通知 APP 同步 WebView 的 JwtToken\r\n * @param {*} jwtToken WebView 最新取得的 JwtToken\r\n */function _getAesKey(){_getAesKey=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(){var aesKey,rs;return _regeneratorRuntime().wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:aesKey=sessionStorage.getItem('aesKey');if(!aesKey){_context12.next=3;break;}return _context12.abrupt(\"return\",{aesKey:aesKey,iv:sessionStorage.getItem('iv')});case 3:_context12.next=5;return callAppJavaScript('getEnCrydata',null,true);case 5:rs=_context12.sent;return _context12.abrupt(\"return\",{aesKey:forge.util.decode64(rs.Crydata).substring(7),iv:forge.util.decode64(rs.Enivec).substring(7)});case 7:case\"end\":return _context12.stop();}}},_callee12);}));return _getAesKey.apply(this,arguments);}function syncJwtToken(_x14){return _syncJwtToken.apply(this,arguments);}/**\r\n * 取得 JwtToken。\r\n * 為保持 Token 的連續性，因此必須優先使用 Web 端的 Token；因為 APP 端有可能因為背景功能發動API而更新了 Token。\r\n * @param {boolean} force 表示強制使用 APP 端的 JwtToken\r\n * @returns 最新的 JwtToken\r\n */function _syncJwtToken(){_syncJwtToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(jwtToken){var data;return _regeneratorRuntime().wrap(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:if(jwtToken){sessionStorage.setItem('jwtToken',jwtToken);}else{sessionStorage.removeItem('jwtToken');console.log('\\x1b[31m*** WARNING *** syncJwtToken 將 JWT Token 設為空值！');}data={auth:jwtToken};_context13.next=4;return callAppJavaScript('setAuthdata',data,false);case 4:case\"end\":return _context13.stop();}}},_callee13);}));return _syncJwtToken.apply(this,arguments);}function getJwtToken(_x15){return _getJwtToken.apply(this,arguments);}// NOTE onVerification 不符合需求\n/**\r\n * 由 APP 發起交易驗證功能，包含輸入網銀帳密、生物辨識、OTP...。\r\n * @param {Number} authCode 要求進行的驗證模式的代碼。\r\n * @param {String?} otpMobile 簡訊識別碼發送的手機門號。當綁定或變更門號時，因為需要確認手機號碼的正確性，所以要再驗OTP\r\n * @returns {Promise<{\r\n *  result: 驗證結果。\r\n *  message: 驗證失敗狀況描述。\r\n *  netbankPwd: 因為之後叫用交易相關 API 時可能會需要用到，所以傳回 E2EE 加密後的密碼。\r\n * }>}\r\n */function _getJwtToken(){_getJwtToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(force){var jwtToken,result;return _regeneratorRuntime().wrap(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:jwtToken=sessionStorage.getItem('jwtToken');// 每次收到 Response 時，就會寫入 sessionStorage\nif(!(!jwtToken||force)){_context14.next=7;break;}_context14.next=4;return callAppJavaScript('getAPPAuthdata',null,true,function(){return null;});case 4:result=_context14.sent;// 傳回值： {\"auth\":\"\"}\njwtToken=result===null||result===void 0?void 0:result.auth;// NOTE 不應該為 null, 不論是 result 或 auth。\nif(jwtToken){sessionStorage.setItem('jwtToken',jwtToken);}else{sessionStorage.removeItem('jwtToken');console.log('\\x1b[31m*** WARNING *** getJwtToken 取得的 JWT Token 為空值！');}case 7:return _context14.abrupt(\"return\",jwtToken);case 8:case\"end\":return _context14.stop();}}},_callee14);}));return _getJwtToken.apply(this,arguments);}function transactionAuth(_x16,_x17){return _transactionAuth.apply(this,arguments);}/**\r\n * 進行雙因子驗證，最多進行三次；若都失敗 或是 使用者取消，則傳回 false。\r\n * @param {*} authKey 建立授權驗證時傳回的金鑰，用來檢核使用者輸入。\r\n * @returns {\r\n *   result: 驗證結果(true/false)。\r\n *   message: 驗證失敗狀況描述。\r\n *   netbankPwd: 因為之後叫用交易相關 API 時可能會需要用到，所以傳回 E2EE 加密後的密碼。\r\n * }\r\n */function _transactionAuth(){_transactionAuth=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(authCode,otpMobile){var data,result;return _regeneratorRuntime().wrap(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:data={authCode:authCode,otpMobile:otpMobile};// return await callAppJavaScript('transactionAuth', data, true, appTransactionAuth);\n// DEBUG 在 APP 還沒完成交易驗證之前，先用 Web版進行測試。\n_context15.next=3;return appTransactionAuth(data);case 3:result=_context15.sent;return _context15.abrupt(\"return\",result);case 5:case\"end\":return _context15.stop();}}},_callee15);}));return _transactionAuth.apply(this,arguments);}function verifyBio(_x18){return _verifyBio.apply(this,arguments);}/**\r\n * 查詢快速登入綁定狀態\r\n * @returns {\r\n *  result: 驗證結果(true/false)。\r\n *  message: 駿證失敗狀況描述。\r\n *  QLStatus: 本裝置快速登入綁定狀態：(result為true時有值) 0：未綁定 1：已正常綁定 2：綁定但已鎖定 3：已在其它裝置綁定 4：本裝置已綁定其他帳號\r\n *  QLType: 快登裝置綁定所使用驗證方式(正常綁定狀態有值) (type->1:生物辨識/2:圖形辨識)\r\n * }\r\n */function _verifyBio(){_verifyBio=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(authCode){var data;return _regeneratorRuntime().wrap(function _callee16$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:data={authCode:authCode};_context16.next=3;return callAppJavaScript('chkQLfeature',data,true,function(){return{result:true};});case 3:return _context16.abrupt(\"return\",_context16.sent);case 4:case\"end\":return _context16.stop();}}},_callee16);}));return _verifyBio.apply(this,arguments);}function getQLStatus(){return _getQLStatus.apply(this,arguments);}/**\r\n * 設定快登認證資料\r\n * @param {*} QLtype 快登裝置綁定所使用驗證方式(type->1:生物辨識/2:圖形辨識)\r\n * @returns {\r\n *  result: 驗證結果(true/false)。\r\n *  message: 駿證失敗狀況描述。\r\n * }\r\n */function _getQLStatus(){_getQLStatus=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(){return _regeneratorRuntime().wrap(function _callee17$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:_context17.next=2;return callAppJavaScript('getQLStatus',null,true,function(){var testData=getJwtTokenTestData();return{result:'true',QLStatus:testData.mid?'1':'0'};});case 2:return _context17.abrupt(\"return\",_context17.sent);case 3:case\"end\":return _context17.stop();}}},_callee17);}));return _getQLStatus.apply(this,arguments);}function regQLfeature(_x19){return _regQLfeature.apply(this,arguments);}/**\r\n * 綁定快登裝置\r\n * @param {*} QLtype 快登裝置綁定所使用驗證方式(type->1:生物辨識/2:圖形辨識)\r\n * @param {*} pwdE2ee E2EE加密後的密碼\r\n * @param {*} midToken 由 Controller 提供的 MID Login 取得的 Auth Token\r\n * @returns {\r\n *  result: 驗證結果(true/false)。\r\n *  message: 駿證失敗狀況描述。\r\n * }\r\n */function _regQLfeature(){_regQLfeature=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18(QLtype){var data;return _regeneratorRuntime().wrap(function _callee18$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:data={QLtype:QLtype};_context18.next=3;return callAppJavaScript('regQLfeature',data,true,function(){console.log('web 通知 APP 設定快登資料');return{result:'true'};});case 3:return _context18.abrupt(\"return\",_context18.sent);case 4:case\"end\":return _context18.stop();}}},_callee18);}));return _regQLfeature.apply(this,arguments);}function regQL(_x20,_x21){return _regQL.apply(this,arguments);}/**\r\n * 解除快登綁定\r\n * @param {*} delQL 快登裝置綁定所使用驗證方式(type->1:生物辨識/2:圖形辨識)\r\n * @returns {\r\n *  result: 驗證結果(true/false)。\r\n *  message: 駿證失敗狀況描述。\r\n * }\r\n */function _regQL(){_regQL=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee19(QLtype,pwdE2ee){var data;return _regeneratorRuntime().wrap(function _callee19$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:data={QLtype:QLtype,pwdE2ee:pwdE2ee};_context19.next=3;return callAppJavaScript('regQL',data,true,function(){console.log('web 通知 APP 綁定快登資料');return{result:'true'};});case 3:return _context19.abrupt(\"return\",_context19.sent);case 4:case\"end\":return _context19.stop();}}},_callee19);}));return _regQL.apply(this,arguments);}function delQL(){return _delQL.apply(this,arguments);}/**\r\n * 模擬 APP 要求使用者進行交易授權驗證。\r\n * @param request {\r\n *   authCode: 要求進行的驗證模式的代碼。\r\n *   otpMobile: 簡訊識別碼發送的手機門號。當綁定或變更門號時，因為需要確認手機號碼的正確性，所以要再驗OTP\r\n * }\r\n * @returns { 要求進行驗證的來源 JavaScript 提供的 Callback JavaScript\r\n *     result: 驗證結果(true/false)\r\n *     message: 驗證失敗狀況描述。\r\n *     netbankPwd: 因為之後叫用交易相關 API 時可能會需要用到，所以傳回 E2EE 加密後的密碼。\r\n *   }\r\n */ // eslint-disable-next-line no-unused-vars\nfunction _delQL(){_delQL=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee20(){return _regeneratorRuntime().wrap(function _callee20$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:_context20.next=2;return callAppJavaScript('delQL',null,true,function(){console.log('web 通知 APP 解除快登綁定');return{result:'true'};});case 2:return _context20.abrupt(\"return\",_context20.sent);case 3:case\"end\":return _context20.stop();}}},_callee20);}));return _delQL.apply(this,arguments);}function appTransactionAuth(_x22){return _appTransactionAuth.apply(this,arguments);}/**\r\n * 查詢訊息通知綁定狀態\r\n * @returns {{PushBindStatus: boolean}} 狀態布林值\r\n */function _appTransactionAuth(){_appTransactionAuth=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee21(request){var _funcStack$peek$funcI,_funcStack$peek;var authCode,otpMobile,funcCode,authMode,allowed2FA,allowedPWD,allowedOTP,failResult,txnAuth,otpCode,netbankPwd,verifyRs,rs,result,onFinished,body;return _regeneratorRuntime().wrap(function _callee21$(_context21){while(1){switch(_context21.prev=_context21.next){case 0:authCode=request.authCode,otpMobile=request.otpMobile;// 取得目前執行中的單元功能代碼，要求 Controller 發送或驗出時，皆需提供此參數。\nfuncCode=(_funcStack$peek$funcI=(_funcStack$peek=funcStack.peek())===null||_funcStack$peek===void 0?void 0:_funcStack$peek.funcID)!==null&&_funcStack$peek$funcI!==void 0?_funcStack$peek$funcI:'/';// 首頁因為沒有功能代碼，所以用'/'表示。\n// 取得需要使用者輸入驗證的項目。\n_context21.next=4;return getTransactionAuthMode(authCode);case 4:authMode=_context21.sent;// 要驗 2FA 還是密碼，要以 create 時的為準。\nallowed2FA=(authMode&0x01)!==0;// 表示需要通過 生物辨識或圖形鎖 驗證。\nallowedPWD=(authMode&0x02)!==0;// 表示需要通過 網銀密碼 驗證。\nallowedOTP=(authMode&0x04)!==0;// 表示需要通過 OTP 驗證。\nfailResult=function failResult(message){return{result:false,message:message};};// NOTE 沒有 boundMID，但又限定只能使用 2FA 時；傳回 false 尚未進行行動裝置綁定，無法使用此功能！\nif(!(!authMode||authMode===0x00)){_context21.next=11;break;}return _context21.abrupt(\"return\",failResult('尚未完成行動裝置綁定，無法使用此功能！'));case 11:_context21.next=13;return createTransactionAuth({// 傳回值包含發送簡訊的手機門號及簡訊識別碼。\nfuncCode:funcCode,authCode:authCode+0x96c1fc6b98e00,// TODO 這個 HashCode 要由 Controller 在 Login 的 Response 傳回。\notpMobile:otpMobile});case 13:txnAuth=_context21.sent;if(txnAuth){_context21.next=16;break;}return _context21.abrupt(\"return\",failResult('無法建立交易授權驗證。'));case 16:if(!request){_context21.next=24;break;}otpCode=allowedOTP?'123456':null;netbankPwd=allowedPWD?e2ee('feib1688'):null;_context21.next=21;return transactionAuthVerify({authKey:txnAuth.key,funcCode:funcCode,netbankPwd:netbankPwd,otpCode:otpCode});case 21:verifyRs=_context21.sent;console.log(verifyRs);return _context21.abrupt(\"return\",{result:true,message:null,netbankPwd:netbankPwd});case 24:if(!allowed2FA){_context21.next=31;break;}_context21.next=27;return verifyBio(txnAuth.key);case 27:rs=_context21.sent;// 若生物辨識三次不通過 或是 使用者取消，才會傳回 false！\n// 因為已綁MID，所以 密碼 也可以當第二因子；因此改用密碼驗證。\nif(rs.result===false)allowedPWD=true;// NOTE 驗證成功(allowedPWD一定是false)但不用驗OTP，就直接傳回成功。\n//      若是驗證失敗或是還要驗OTP，就要開 Drawer 進行密碼或OTP驗證。\nif(!(!allowedPWD&&!allowedOTP)){_context21.next=31;break;}return _context21.abrupt(\"return\",rs);case 31:result=null;onFinished=function onFinished(value){result=value;};body=/*#__PURE__*/_jsx(PasswordDrawer,{funcCode:funcCode,authData:txnAuth,inputPWD:allowedPWD,onFinished:onFinished});_context21.next=36;return showDrawer('交易授權驗證 (Web版)',body,null,function(){result=failResult('使用者取消驗證。');});case 36:return _context21.abrupt(\"return\",result);case 37:case\"end\":return _context21.stop();}}},_callee21);}));return _appTransactionAuth.apply(this,arguments);}function queryPushBind(){return _queryPushBind.apply(this,arguments);}/**\r\n * 通知 APP 強制登出。\r\n * @param {String} reasonCode 登出原因代碼。\r\n * @param {String} message 登出原因。\r\n * 通常只有在 Timeout 或嚴重錯誤時才會發生。\r\n */function _queryPushBind(){_queryPushBind=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee22(){return _regeneratorRuntime().wrap(function _callee22$(_context22){while(1){switch(_context22.prev=_context22.next){case 0:_context22.next=2;return callAppJavaScript('queryPushBind',null,true,function(){console.log('web 執行取得綁定狀態');return{PushBindStatus:true};});case 2:return _context22.abrupt(\"return\",_context22.sent);case 3:case\"end\":return _context22.stop();}}},_callee22);}));return _queryPushBind.apply(this,arguments);}function forceLogout(reasonCode,message){callAppJavaScript('forceLogout',{reason:reasonCode,message:message},false,function(){document.location.href='/login';});}/**\r\n * 更新訊息通知設定綁定狀態\r\n * @param {}\r\n */function updatePushBind(){return _updatePushBind.apply(this,arguments);}/**\r\n * // DEBUG 取出 jwtToken payload 的內容。\r\n */function _updatePushBind(){_updatePushBind=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee23(){return _regeneratorRuntime().wrap(function _callee23$(_context23){while(1){switch(_context23.prev=_context23.next){case 0:_context23.next=2;return callAppJavaScript('updatePushBind',null,false);case 2:case\"end\":return _context23.stop();}}},_callee23);}));return _updatePushBind.apply(this,arguments);}var getJwtTokenTestData=function getJwtTokenTestData(){var jwtToken=sessionStorage.getItem('jwtToken');if(jwtToken){var jwtClaimJson=Buffer.from(jwtToken.split('.')[1],'base64');var _JSON$parse=JSON.parse(String.fromCharCode.apply(String,_toConsumableArray(jwtClaimJson))),webData=_JSON$parse.webData;console.log('** JWT Token Test Data ：',webData);return webData;}return null;};export{getCallerFunc,getOsType,getPlatform,goHome,startFunc,closeFunc,loadFuncParams,switchLoading,doOCR,showPopup,showAlert,getAesKey,syncJwtToken,getJwtToken,transactionAuth,shareMessage,getQLStatus,regQLfeature,regQL,delQL,queryPushBind,updatePushBind,forceLogout};","map":{"version":3,"names":["forge","Buffer","PasswordDrawer","getTransactionAuthMode","createTransactionAuth","transactionAuthVerify","customPopup","showDrawer","showError","e2ee","device","ios","sessionStorage","getItem","test","navigator","userAgent","android","getOsType","getPlatform","platform","showLog","appJsName","callAppJavaScript","jsParams","needCallback","webDevTest","jsToken","Math","floor","random","toString","padStart","console","log","window","AppJavaScriptCallback","AppJavaScriptCallbackPromiseResolves","CallbackFunc","token","value","result","JSON","parse","ex","promise","Promise","resolve","request","callback","msg","stringify","name","data","webkit","messageHandlers","jstoapp","postMessage","funcStack","getStack","localStorage","update","stack","setItem","clear","push","startItem","params","funcParams","keepData","pop","removeItem","length","closedItem","funcID","peek","lastItem","getCallerFunc","goHome","startFunc","replace","isFunction","location","pathname","process","env","REACT_APP_ROUTER_BASE","closeFunc","response","target","type","closeItem","webCloseFunc","appJsRs","loadFuncParams","funcItem","webGetFuncParams","startsWith","dataStr","showAlert","switchLoading","visible","open","doOCR","imageType","ocrType","showPopup","url","message","alert","shareMessage","webtext","getAesKey","aesKey","iv","rs","util","decode64","Crydata","substring","Enivec","syncJwtToken","jwtToken","auth","getJwtToken","force","transactionAuth","authCode","otpMobile","appTransactionAuth","verifyBio","getQLStatus","testData","getJwtTokenTestData","QLStatus","mid","regQLfeature","QLtype","regQL","pwdE2ee","delQL","funcCode","authMode","allowed2FA","allowedPWD","allowedOTP","failResult","txnAuth","otpCode","netbankPwd","authKey","key","verifyRs","onFinished","body","queryPushBind","PushBindStatus","forceLogout","reasonCode","reason","document","href","updatePushBind","jwtClaimJson","from","split","String","fromCharCode","webData"],"sources":["C:/Users/allen/git/app2-webview/src/utilities/AppScriptProxy.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-bitwise */\r\n/* eslint-disable object-curly-newline */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable brace-style */\r\nimport forge from 'node-forge';\r\nimport { Buffer } from 'buffer';\r\nimport PasswordDrawer from 'components/PasswordDrawer';\r\nimport { getTransactionAuthMode, createTransactionAuth, transactionAuthVerify } from 'components/PasswordDrawer/api';\r\nimport { customPopup, showDrawer, showError } from './MessageModal';\r\nimport e2ee from './E2ee';\r\n\r\nconst device = {\r\n  ios: () => !(sessionStorage.getItem('webMode') === 'true') && /iPhone|iPad|iPod/i.test(navigator.userAgent),\r\n  android: () => !(sessionStorage.getItem('webMode') === 'true') && /Android/i.test(navigator.userAgent),\r\n};\r\n\r\n/**\r\n * 取得目前運行的作業系統代碼。\r\n * @returns {Number} 1.iOS, 2.Android, 3.其他\r\n */\r\nfunction getOsType() {\r\n  if (device.ios) return 1;\r\n  if (device.android) return 2;\r\n  return 3;\r\n}\r\n\r\n/**\r\n * 取得系統執行的硬體設備名稱。\r\n * @returns \"MacIntel\", \"Win32\", \"Linux x86_64\", \"Linux x86_64\"...\r\n */\r\nfunction getPlatform() {\r\n  return navigator.platform;\r\n}\r\n\r\n/**\r\n * 篩掉不要顯示的 APP JS Script log\r\n * @param {*} appJsName APP提供的JavaScript funciton名稱。\r\n */\r\nfunction showLog(appJsName) {\r\n  switch (appJsName) {\r\n    case 'onLoading':\r\n    case 'setAuthdata':\r\n      return false;\r\n\r\n    default: return true;\r\n  }\r\n}\r\n\r\n/**\r\n * 執行 APP 提供的 JavaScript（ jstoapp ）\r\n * @param {*} appJsName APP提供的JavaScript funciton名稱。\r\n * @param {*} jsParams JavaScript的執行參數。\r\n * @param {*} needCallback 表示需要從 APP 取得傳回值，所以需要等待 Callback\r\n * @param {*} webDevTest Web開發測試時的執行方法。(Option)\r\n * @returns\r\n */\r\nasync function callAppJavaScript(appJsName, jsParams, needCallback, webDevTest) {\r\n  const jsToken = `A${Math.floor(Math.random() * 100000000).toString().padStart(8, '0')}`; // 有千萬分之一的機率重覆。\r\n  if (showLog(appJsName)) console.log(`\\x1b[33mAPP-JS://${appJsName}[${jsToken}] \\x1b[37m - Params = `, jsParams);\r\n\r\n  if (!window.AppJavaScriptCallback) {\r\n    window.AppJavaScriptCallback = {};\r\n    window.AppJavaScriptCallbackPromiseResolves = {};\r\n  }\r\n\r\n  /**\r\n   * 負責接收 APP JavaScript API callback 的共用方法。\r\n   * @param {*} value APP JavaScript API的傳回值。\r\n   */\r\n  const CallbackFunc = (token, value) => {\r\n    let result;\r\n    try {\r\n      // 若是 JSON 格式，則以物件型態傳回。\r\n      result = JSON.parse(value);\r\n    } catch (ex) {\r\n      result = value;\r\n    }\r\n    window.AppJavaScriptCallbackPromiseResolves[token](result);\r\n\r\n    delete window.AppJavaScriptCallbackPromiseResolves[token];\r\n    delete window.AppJavaScriptCallback[token];\r\n  };\r\n\r\n  const promise = new Promise((resolve) => {\r\n    window.AppJavaScriptCallback[jsToken] = (value) => CallbackFunc(jsToken, value);\r\n    window.AppJavaScriptCallbackPromiseResolves[jsToken] = resolve;\r\n\r\n    const request = {\r\n      ...jsParams,\r\n      callback: (needCallback ? `AppJavaScriptCallback['${jsToken}']` : null), // 此方法可提供所有WebView共用。\r\n    };\r\n\r\n    if (device.ios()) {\r\n      const msg = JSON.stringify({ name: appJsName, data: JSON.stringify(request) });\r\n      window.webkit.messageHandlers.jstoapp.postMessage(msg);\r\n    }\r\n    else if (device.android()) {\r\n      window.jstoapp[appJsName](JSON.stringify(request));\r\n    }\r\n    else if (needCallback || webDevTest) {\r\n      window.AppJavaScriptCallback[jsToken](webDevTest ? webDevTest() : null);\r\n      return;\r\n    }\r\n    // else throw new Error('使用 Web 版未支援的 APP JavaScript 模擬方法(' + appJsName + ')');\r\n\r\n    // 若不需要從 APP 取得傳回值，就直接結束。\r\n    if (!needCallback) resolve(null);\r\n  });\r\n\r\n  // result 是由 AppJavaScriptCallback 接收，並嘗試用 JSON Parse 轉為物件，轉不成功則以原資料內容傳回。\r\n  const result = await promise;\r\n  if (showLog(appJsName)) console.log(`\\x1b[33mAPP-JS://${appJsName}[${jsToken}] \\x1b[37m - Result = `, result);\r\n  return result;\r\n}\r\n\r\n/**\r\n * Web版 Function Controller\r\n */\r\nconst funcStack = {\r\n  /**\r\n   * 從 localStorage 取出功能執行堆疊，並轉為 Array 物件後傳回。\r\n   * @returns {Array} 功能執行堆疊\r\n   */\r\n  getStack: () => JSON.parse(localStorage.getItem('funcStack') ?? '[]'),\r\n\r\n  update: (stack) => localStorage.setItem('funcStack', JSON.stringify(stack)),\r\n  /** 清空 功能執行堆疊，適用於 goHome 功能。 */\r\n  clear: () => funcStack.update([]),\r\n\r\n  /**\r\n   * 將指定功能置入 功能執行堆疊 最後一個項目。\r\n   * @param {{\r\n   *   funcID: '單元功能代碼。',\r\n   *   funcParams: '提共給啟動的單元功能的參數，被啟動的單元功能是透過 loadFuncParams() 取回。',\r\n   *   keepData: '當啟動的單元功能結束後，返回原功能啟動時取回的資料。',\r\n   * }} startItem 要執行的功能。\r\n   */\r\n  push: (startItem) => {\r\n    console.log('Start Function : ', startItem);\r\n    const stack = funcStack.getStack();\r\n    stack.push(startItem);\r\n    funcStack.update(stack);\r\n\r\n    // 寫入 Function 啟動參數，提供元功能在啟動後，可以透過 loadFuncParams() 取得。\r\n    // NOTE keepData 必需是 null，才不會在 loadFuncParams() 誤判，因為 keepData 有值時優先當啟動參數。\r\n    const params = startItem.funcParams ? JSON.stringify({ funcParams: startItem.funcParams, keepData: null }) : null;\r\n    localStorage.setItem('funcParams', params);\r\n  },\r\n\r\n  /**\r\n   * 取出 功能執行堆疊 的最後一個項目，並從堆疊中移出。\r\n   * @returns {{\r\n   *   funcID: '單元功能代碼。',\r\n   *   funcParams: '提共給啟動的單元功能的參數，被啟動的單元功能是透過 loadFuncParams() 取回。',\r\n   *   keepData: '當啟動的單元功能結束後，返回原功能啟動時取回的資料。',\r\n   * }} 目前正在執行中的功能啟動資訊。\r\n   */\r\n  pop: () => {\r\n    localStorage.removeItem('funcParams');\r\n\r\n    const stack = funcStack.getStack();\r\n    if (stack.length === 0) return null;\r\n\r\n    const closedItem = stack[stack.length - 1];\r\n    stack.pop();\r\n    funcStack.update(stack);\r\n\r\n    // 寫入 Function 啟動參數。\r\n    const startItem = stack[stack.length - 1];\r\n    if (closedItem) {\r\n      const params = {\r\n        funcParams: startItem?.funcParams,\r\n        keepData: closedItem.keepData,\r\n      };\r\n      localStorage.setItem('funcParams', JSON.stringify(params));\r\n      console.log('Close Function and Back to (', startItem?.funcID ?? 'Home', ')', params);\r\n    }\r\n\r\n    return startItem;\r\n  },\r\n\r\n  /**\r\n   * 取得 功能執行堆疊 最後一個項目，但不會從堆疊中移出。\r\n   * @returns {{\r\n   *   funcID: '單元功能代碼。',\r\n   *   funcParams: '提共給啟動的單元功能的參數，被啟動的單元功能是透過 loadFuncParams() 取回。',\r\n   *   keepData: '當啟動的單元功能結束後，返回原功能啟動時取回的資料。',\r\n   * }} 目前正在執行中的功能啟動資訊。\r\n   */\r\n  peek: () => {\r\n    const stack = funcStack.getStack();\r\n    const lastItem = stack[stack.length - 1];\r\n    return lastItem;\r\n  },\r\n};\r\n\r\n/**\r\n * 取得啟動目前單元功能的功能代碼。\r\n * @returns {String} 功能代碼。\r\n */\r\nfunction getCallerFunc() {\r\n  const stack = funcStack.getStack();\r\n  if (stack.length <= 1) return null;\r\n\r\n  return stack[stack.length - 2].funcID;\r\n}\r\n\r\n/**\r\n * 網頁通知APP跳轉至首頁\r\n */\r\nasync function goHome() {\r\n  funcStack.clear();\r\n  await callAppJavaScript('goHome', null, false, () => {\r\n    startFunc('/');\r\n  });\r\n}\r\n\r\n/**\r\n * 網頁通知APP跳轉指定功能\r\n * @param {*} funcID 單元功能代碼。\r\n * @param {*} funcParams 提共給啟動的單元功能的參數，被啟動的單元功能是透過 loadFuncParams() 取回。\r\n * @param {*} keepData 當啟動的單元功能結束後，返回原功能啟動時取回的資料。\r\n */\r\nasync function startFunc(funcID, funcParams, keepData) {\r\n  if (!funcID) {\r\n    await showError('此功能尚未完成！');\r\n    return;\r\n  }\r\n\r\n  funcID = funcID.replace(/^\\/*/, ''); // 移掉前置的 '/' 符號,\r\n  const data = {\r\n    funcID,\r\n    funcParams: funcParams ? JSON.stringify(funcParams) : null, // 要先轉 JSON 字串是為了配合 APP JavaScript\r\n    keepData: keepData ? JSON.stringify(keepData) : null, // 要先轉 JSON 字串是為了配合 APP JavaScript\r\n  };\r\n  funcStack.push(data);\r\n\r\n  // 只要不是 A00100 這種格式的頁面，一律視為 WebPage 而不透過 APP 的 Function Controller 轉導。\r\n  const isFunction = (/^[A-Z]\\d{5}$/.test(funcID));\r\n  if (isFunction) {\r\n    await callAppJavaScript('startFunc', data, false, () => {\r\n      window.location.pathname = `${process.env.REACT_APP_ROUTER_BASE}/${funcID}`;\r\n    });\r\n  } else {\r\n    window.location.pathname = `${process.env.REACT_APP_ROUTER_BASE}/${funcID}`;\r\n  }\r\n}\r\n\r\n/**\r\n * 觸發APP返回上一頁功能，並將指定的資料透過 loadFuncParams() 傳回給啟動目前功能的單元功能。\r\n * @param {*} response 傳回值，會暫存在 SessionStorate(\"funcResp\") 中。\r\n */\r\nasync function closeFunc(response) {\r\n  // 將要傳回給前一功能（啟動目前功能的單元功能）的資料 存入 sessionStorage[funcResp]\r\n  // 再由 loadFuncParams() 取出，放在啟動參數的 response 參數中。\r\n  if (response && (!response.target && !response.type)) { // NOTE event物件會被誤判為傳回值，所以必需排除。\r\n    sessionStorage.setItem('funcResp', JSON.stringify(response));\r\n  }\r\n\r\n  const closeItem = funcStack.peek(); // 因為 funcStack 還沒 pop，所以用 peek 還以取得正在執行中的 單元功能(例：A00100) 或是 頁面(例：moreTransactions)\r\n  const isFunction = !closeItem || (/^[A-Z]\\d{5}$/.test(closeItem.funcID)); // 表示 funcID 是由 Function Controller 控制的單元功能。\r\n\r\n  const startItem = funcStack.pop();\r\n  const webCloseFunc = async () => {\r\n    // 當 funcStack.pop 不出項目時，表示可能是由 APP 先啟動了某項功能（例：首頁卡片或是下方MenuBar）\r\n    if (startItem) {\r\n      // 表示返回由 WebView 啟動的單元功能或頁面，例：從「更多」啟動了某項單元功能，當此單元功能關閉時，就會進到這裡。\r\n      window.location.pathname = `${process.env.REACT_APP_ROUTER_BASE}/${startItem.funcID}`; // keepData 存入 localStorage 'funcParams'\r\n    } else {\r\n      // 若是在登入前，無前一頁可以返回時，則一律回到 Login 頁。\r\n      if (sessionStorage.getItem('isLogin') !== '1') {\r\n        window.location.pathname = `${process.env.REACT_APP_ROUTER_BASE}/login`;\r\n        return;\r\n      }\r\n\r\n      // 雖然 Web端的 funcStack 已經空了，但有可能要返回的功能是由 APP 啟動的；所以，要先詢問 APP 是否有正在執行中的單元功能。\r\n      const appJsRs = await callAppJavaScript('getActiveFuncID', null, true); // 取得 APP 目前的 FuncID\r\n      if (appJsRs) {\r\n        // 例：首頁卡片 啟動 存錢計劃，當 存錢計劃 選擇返回前一功能時，就會進到這裡。（因為此時的 funcStack 是空的）\r\n        window.location.pathname = `${process.env.REACT_APP_ROUTER_BASE}/${appJsRs.funcID}`;\r\n      } else window.location.pathname = `${process.env.REACT_APP_ROUTER_BASE}/`;\r\n    }\r\n  };\r\n\r\n  if (isFunction) {\r\n    await callAppJavaScript('closeFunc', null, false, webCloseFunc);\r\n  } else {\r\n    await webCloseFunc();\r\n  }\r\n}\r\n\r\n/**\r\n * 取得 APP Function Controller 提供的功能啟動參數。\r\n * @returns {Promise<{\r\n *   params: '被啟動時的 funcParams 或是啟動下一個功能時，要求 startFunc 暫存的 keepData。 這裡的 params 並不是一個物件',\r\n *   response: '前一功能的傳回的資料',\r\n * }>} 若參數當時是以 JSON 物件儲存，則同樣會轉成物件傳回。\r\n */\r\nasync function loadFuncParams() {\r\n  try {\r\n    const funcItem = funcStack.peek(); // 因為功能已經啟動，所以用 peek 取得正在執行中的 單元功能(例：A00100) 或是 頁面(例：moreTransactions)\r\n\r\n    // 表示 funcID 不是一般頁面，而是由 Function Controller 控制的單元功能。\r\n    // NOTE 這種判斷方式，非常容易誤判！只有「一個大寫字母＋5個數字」的功能代碼才算是單元功能。\r\n    const isFunction = !funcItem || (/^[A-Z]\\d{5}$/.test(funcItem.funcID));\r\n\r\n    /**\r\n     * 取得儲存於 localStorage 的啟動參數。此功能是為了提供一般頁面或Web版Function Contoller用。\r\n     * @returns {{ funcParams, keepData }}\r\n     */\r\n    const webGetFuncParams = () => {\r\n      const params = localStorage.getItem('funcParams');\r\n      if (!params || params === 'null') return null;\r\n      if (params.startsWith('{')) return JSON.parse(params);\r\n      return params;\r\n    };\r\n\r\n    // 一般頁面 則不可向 APP 的 Function Controller 取資料。\r\n    const data = isFunction ? (await callAppJavaScript('getPagedata', null, true, webGetFuncParams)) : webGetFuncParams();\r\n    let params = null;\r\n    if (data && data !== 'undefined') {\r\n      // 解析由 APP 傳回的資料, 只要有 keepData 就表示是由叫用的功能結束返回\r\n      // 因此，要以 keepData 為單元功能的啟動參數。\r\n      // 反之，表示是單元功能被啟動，此時才是以 funcParams 為單元功能的啟動參數。\r\n      const keepData = (data.keepData && data.keepData !== '') ? data.keepData : null;\r\n      const dataStr = (keepData ?? data.funcParams);\r\n      params = (dataStr && dataStr.startsWith('{')) ? JSON.parse(dataStr) : null; // NOTE 只支援APP JS傳回JSON格式資料！\r\n    }\r\n\r\n    // 取得 Function 在 closeFunc 時提供的傳回值。\r\n    const response = sessionStorage.getItem('funcResp');\r\n    sessionStorage.removeItem('funcResp');\r\n    if (response) {\r\n      console.log('>> 前一單元功能的 傳回值 : ', response);\r\n      if (!params) params = {};\r\n      params.response = JSON.parse(response);\r\n    }\r\n\r\n    // await showAlert(`>> Function 啟動參數 : ${JSON.stringify(params)}`);\r\n    console.log('>> Function 啟動參數 : ', params);\r\n    return params;\r\n  } catch (error) {\r\n    console.log('>> Function 啟動參數 ** ERROR ** : ', error);\r\n    await showAlert(JSON.stringify(error));\r\n    return error;\r\n  }\r\n}\r\n\r\n/**\r\n * 開啟/關閉APP Loading等待畫面\r\n * @param {Promise<boolean>} visible\r\n */\r\nasync function switchLoading(visible) {\r\n  const data = { open: visible ? 'Y' : 'N' };\r\n  await callAppJavaScript('onLoading', data, false);\r\n}\r\n\r\n/**\r\n * 啟動APP OCR畫面及識別流程, APP在處理結束後會呼叫callback Web JS將傳給網頁\r\n * @param {*} imageType 影像類型。1.身份證正面, 2.身份證反面\r\n * @returns 辨識結果。例：{\"rtcode\":\"\", \"rtmsg\":\"\",\"data\":[{\"type\":\"name\",\"data\":\"林宜美\"},{\"type\":\"birthday\",\"data\":\"69/5/20\"},{\"type\":\"sex\",\"data\":\"女\"}]}\r\n */\r\nasync function doOCR(imageType) {\r\n  const data = { ocrType: imageType };\r\n  return await callAppJavaScript('onOCR', data, true);\r\n}\r\n\r\n/**\r\n * 以 Popup 模式開啟 APP 原生的 WebView，不會影響到目前運做中的 WebView。\r\n * 注意：Page間的資料傳遞與傳回值的取得，需由 Page 自行處理。\r\n * @param {*} url 要開啟的畫面連結\r\n */\r\nasync function showPopup(url) {\r\n  const data = { url };\r\n  await callAppJavaScript('openPopWebView', data, false, () => {\r\n    // TODO 用 MessageModal 的 customPopup 模擬。\r\n  });\r\n}\r\n\r\n/**\r\n * 開啟原生的 Alert 視窗。\r\n * @param {*} message 要顯示的訊息。\r\n */\r\nasync function showAlert(message) {\r\n  const data = { message };\r\n  await callAppJavaScript('showAlert', data, false, () => {\r\n    alert(message);\r\n  });\r\n}\r\n\r\n/**\r\n * 開啟 APP 分享功能。\r\n * @param {*} message 要分享的訊息內容，內容為 HTML 格式。\r\n */\r\nasync function shareMessage(message) {\r\n  const data = { webtext: message };\r\n  await callAppJavaScript('setShareText', data, false, () => {\r\n    // 測試版的分享功能。\r\n    customPopup('分享功能 (測試版)', message);\r\n  });\r\n}\r\n\r\n// Note setWebLogdata 用不到\r\n\r\n// TODO 提供 Exception 資訊給 APP 寫入回報，就有需要了。\r\n\r\n/**\r\n * 取得 JWT Payload 加密用的 AES Key 及 IV\r\n * @returns\r\n */\r\nasync function getAesKey() {\r\n  const aesKey = sessionStorage.getItem('aesKey');\r\n  if (aesKey) {\r\n    return {\r\n      aesKey,\r\n      iv: sessionStorage.getItem('iv'),\r\n    };\r\n  }\r\n  const rs = await callAppJavaScript('getEnCrydata', null, true);\r\n  return {\r\n    aesKey: forge.util.decode64(rs.Crydata).substring(7),\r\n    iv: forge.util.decode64(rs.Enivec).substring(7),\r\n  };\r\n}\r\n\r\n/**\r\n * 通知 APP 同步 WebView 的 JwtToken\r\n * @param {*} jwtToken WebView 最新取得的 JwtToken\r\n */\r\nasync function syncJwtToken(jwtToken) {\r\n  if (jwtToken) {\r\n    sessionStorage.setItem('jwtToken', jwtToken);\r\n  } else {\r\n    sessionStorage.removeItem('jwtToken');\r\n    console.log('\\x1b[31m*** WARNING *** syncJwtToken 將 JWT Token 設為空值！');\r\n  }\r\n\r\n  const data = { auth: jwtToken };\r\n  await callAppJavaScript('setAuthdata', data, false);\r\n}\r\n\r\n/**\r\n * 取得 JwtToken。\r\n * 為保持 Token 的連續性，因此必須優先使用 Web 端的 Token；因為 APP 端有可能因為背景功能發動API而更新了 Token。\r\n * @param {boolean} force 表示強制使用 APP 端的 JwtToken\r\n * @returns 最新的 JwtToken\r\n */\r\nasync function getJwtToken(force) {\r\n  let jwtToken = sessionStorage.getItem('jwtToken'); // 每次收到 Response 時，就會寫入 sessionStorage\r\n  if (!jwtToken || force) {\r\n    // 從 APP 取得 JWT Token，並存入 sessionStorage 給之後的 WebView 功能使用。\r\n    const result = await callAppJavaScript('getAPPAuthdata', null, true, () => null); // 傳回值： {\"auth\":\"\"}\r\n    jwtToken = result?.auth; // NOTE 不應該為 null, 不論是 result 或 auth。\r\n    if (jwtToken) {\r\n      sessionStorage.setItem('jwtToken', jwtToken);\r\n    } else {\r\n      sessionStorage.removeItem('jwtToken');\r\n      console.log('\\x1b[31m*** WARNING *** getJwtToken 取得的 JWT Token 為空值！');\r\n    }\r\n  }\r\n  // console.log(`\\x1b[32m[JWT] \\x1b[92m${jwtToken}`);\r\n  return jwtToken;\r\n}\r\n\r\n// NOTE onVerification 不符合需求\r\n\r\n/**\r\n * 由 APP 發起交易驗證功能，包含輸入網銀帳密、生物辨識、OTP...。\r\n * @param {Number} authCode 要求進行的驗證模式的代碼。\r\n * @param {String?} otpMobile 簡訊識別碼發送的手機門號。當綁定或變更門號時，因為需要確認手機號碼的正確性，所以要再驗OTP\r\n * @returns {Promise<{\r\n *  result: 驗證結果。\r\n *  message: 驗證失敗狀況描述。\r\n *  netbankPwd: 因為之後叫用交易相關 API 時可能會需要用到，所以傳回 E2EE 加密後的密碼。\r\n * }>}\r\n */\r\nasync function transactionAuth(authCode, otpMobile) {\r\n  const data = {\r\n    authCode,\r\n    otpMobile,\r\n  };\r\n  // return await callAppJavaScript('transactionAuth', data, true, appTransactionAuth);\r\n\r\n  // DEBUG 在 APP 還沒完成交易驗證之前，先用 Web版進行測試。\r\n\r\n  const result = await appTransactionAuth(data);\r\n  return result;\r\n}\r\n\r\n/**\r\n * 進行雙因子驗證，最多進行三次；若都失敗 或是 使用者取消，則傳回 false。\r\n * @param {*} authKey 建立授權驗證時傳回的金鑰，用來檢核使用者輸入。\r\n * @returns {\r\n *   result: 驗證結果(true/false)。\r\n *   message: 驗證失敗狀況描述。\r\n *   netbankPwd: 因為之後叫用交易相關 API 時可能會需要用到，所以傳回 E2EE 加密後的密碼。\r\n * }\r\n */\r\nasync function verifyBio(authCode) {\r\n  const data = {\r\n    authCode,\r\n  };\r\n  return await callAppJavaScript('chkQLfeature', data, true, () => ({ result: true })); // Call /v1/setBioResult\r\n}\r\n\r\n/**\r\n * 查詢快速登入綁定狀態\r\n * @returns {\r\n *  result: 驗證結果(true/false)。\r\n *  message: 駿證失敗狀況描述。\r\n *  QLStatus: 本裝置快速登入綁定狀態：(result為true時有值) 0：未綁定 1：已正常綁定 2：綁定但已鎖定 3：已在其它裝置綁定 4：本裝置已綁定其他帳號\r\n *  QLType: 快登裝置綁定所使用驗證方式(正常綁定狀態有值) (type->1:生物辨識/2:圖形辨識)\r\n * }\r\n */\r\nasync function getQLStatus() {\r\n  return await callAppJavaScript('getQLStatus', null, true, () => {\r\n    const testData = getJwtTokenTestData();\r\n    return {\r\n      result: 'true',\r\n      QLStatus: testData.mid ? '1' : '0',\r\n    };\r\n  });\r\n}\r\n\r\n/**\r\n * 設定快登認證資料\r\n * @param {*} QLtype 快登裝置綁定所使用驗證方式(type->1:生物辨識/2:圖形辨識)\r\n * @returns {\r\n *  result: 驗證結果(true/false)。\r\n *  message: 駿證失敗狀況描述。\r\n * }\r\n */\r\nasync function regQLfeature(QLtype) {\r\n  const data = {\r\n    QLtype,\r\n  };\r\n  return await callAppJavaScript('regQLfeature', data, true, () => {\r\n    console.log('web 通知 APP 設定快登資料');\r\n    return {\r\n      result: 'true',\r\n    };\r\n  });\r\n}\r\n\r\n/**\r\n * 綁定快登裝置\r\n * @param {*} QLtype 快登裝置綁定所使用驗證方式(type->1:生物辨識/2:圖形辨識)\r\n * @param {*} pwdE2ee E2EE加密後的密碼\r\n * @param {*} midToken 由 Controller 提供的 MID Login 取得的 Auth Token\r\n * @returns {\r\n *  result: 驗證結果(true/false)。\r\n *  message: 駿證失敗狀況描述。\r\n * }\r\n */\r\nasync function regQL(QLtype, pwdE2ee) {\r\n  const data = {\r\n    QLtype,\r\n    pwdE2ee,\r\n  };\r\n  return await callAppJavaScript('regQL', data, true, () => {\r\n    console.log('web 通知 APP 綁定快登資料');\r\n    return {\r\n      result: 'true',\r\n    };\r\n  });\r\n}\r\n\r\n/**\r\n * 解除快登綁定\r\n * @param {*} delQL 快登裝置綁定所使用驗證方式(type->1:生物辨識/2:圖形辨識)\r\n * @returns {\r\n *  result: 驗證結果(true/false)。\r\n *  message: 駿證失敗狀況描述。\r\n * }\r\n */\r\nasync function delQL() {\r\n  return await callAppJavaScript('delQL', null, true, () => {\r\n    console.log('web 通知 APP 解除快登綁定');\r\n    return {\r\n      result: 'true',\r\n    };\r\n  });\r\n}\r\n\r\n/**\r\n * 模擬 APP 要求使用者進行交易授權驗證。\r\n * @param request {\r\n *   authCode: 要求進行的驗證模式的代碼。\r\n *   otpMobile: 簡訊識別碼發送的手機門號。當綁定或變更門號時，因為需要確認手機號碼的正確性，所以要再驗OTP\r\n * }\r\n * @returns { 要求進行驗證的來源 JavaScript 提供的 Callback JavaScript\r\n *     result: 驗證結果(true/false)\r\n *     message: 驗證失敗狀況描述。\r\n *     netbankPwd: 因為之後叫用交易相關 API 時可能會需要用到，所以傳回 E2EE 加密後的密碼。\r\n *   }\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nasync function appTransactionAuth(request) {\r\n  const { authCode, otpMobile } = request;\r\n\r\n  // 取得目前執行中的單元功能代碼，要求 Controller 發送或驗出時，皆需提供此參數。\r\n  const funcCode = funcStack.peek()?.funcID ?? '/'; // 首頁因為沒有功能代碼，所以用'/'表示。\r\n  // 取得需要使用者輸入驗證的項目。\r\n  const authMode = await getTransactionAuthMode(authCode); // 要驗 2FA 還是密碼，要以 create 時的為準。\r\n  const allowed2FA = (authMode & 0x01) !== 0; // 表示需要通過 生物辨識或圖形鎖 驗證。\r\n  let allowedPWD = (authMode & 0x02) !== 0; // 表示需要通過 網銀密碼 驗證。\r\n  const allowedOTP = (authMode & 0x04) !== 0; // 表示需要通過 OTP 驗證。\r\n\r\n  const failResult = (message) => ({ result: false, message });\r\n\r\n  // NOTE 沒有 boundMID，但又限定只能使用 2FA 時；傳回 false 尚未進行行動裝置綁定，無法使用此功能！\r\n  if (!authMode || authMode === 0x00) { // 當 authMode 為 null 時，表示有例外發生。\r\n    return failResult('尚未完成行動裝置綁定，無法使用此功能！');\r\n  }\r\n\r\n  // 建立交易授權驗證。\r\n  const txnAuth = await createTransactionAuth({ // 傳回值包含發送簡訊的手機門號及簡訊識別碼。\r\n    funcCode,\r\n    authCode: authCode + 0x96c1fc6b98e00, // TODO 這個 HashCode 要由 Controller 在 Login 的 Response 傳回。\r\n    otpMobile,\r\n  });\r\n  if (!txnAuth) { // createTransactionAuth 發生異常就結束。\r\n    return failResult('無法建立交易授權驗證。');\r\n  }\r\n\r\n  // DEBUG ByPass交易驗證\r\n  if (request) {\r\n    const otpCode = allowedOTP ? '123456' : null;\r\n    const netbankPwd = allowedPWD ? e2ee('feib1688') : null;\r\n    const verifyRs = await transactionAuthVerify({ authKey: txnAuth.key, funcCode, netbankPwd, otpCode });\r\n    console.log(verifyRs);\r\n    return { result: true, message: null, netbankPwd };\r\n  }\r\n\r\n  // 進行雙因子驗證，呼叫 APP 進行驗證。\r\n  if (allowed2FA) {\r\n    const rs = await verifyBio(txnAuth.key); // 若生物辨識三次不通過 或是 使用者取消，才會傳回 false！\r\n    // 因為已綁MID，所以 密碼 也可以當第二因子；因此改用密碼驗證。\r\n    if (rs.result === false) allowedPWD = true;\r\n\r\n    // NOTE 驗證成功(allowedPWD一定是false)但不用驗OTP，就直接傳回成功。\r\n    //      若是驗證失敗或是還要驗OTP，就要開 Drawer 進行密碼或OTP驗證。\r\n    if (!allowedPWD && !allowedOTP) return rs;\r\n  }\r\n\r\n  let result = null;\r\n  const onFinished = (value) => { result = value; };\r\n\r\n  const body = (\r\n    <PasswordDrawer funcCode={funcCode} authData={txnAuth} inputPWD={allowedPWD} onFinished={onFinished} />\r\n  );\r\n\r\n  await showDrawer('交易授權驗證 (Web版)', body, null, () => { result = failResult('使用者取消驗證。'); });\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * 查詢訊息通知綁定狀態\r\n * @returns {{PushBindStatus: boolean}} 狀態布林值\r\n */\r\nasync function queryPushBind() {\r\n  return await callAppJavaScript('queryPushBind', null, true, () => {\r\n    console.log('web 執行取得綁定狀態');\r\n    return {\r\n      PushBindStatus: true,\r\n    };\r\n  });\r\n}\r\n\r\n/**\r\n * 通知 APP 強制登出。\r\n * @param {String} reasonCode 登出原因代碼。\r\n * @param {String} message 登出原因。\r\n * 通常只有在 Timeout 或嚴重錯誤時才會發生。\r\n */\r\nfunction forceLogout(reasonCode, message) {\r\n  callAppJavaScript('forceLogout', { reason: reasonCode, message }, false, () => {\r\n    document.location.href = '/login';\r\n  });\r\n}\r\n\r\n/**\r\n * 更新訊息通知設定綁定狀態\r\n * @param {}\r\n */\r\nasync function updatePushBind() {\r\n  await callAppJavaScript('updatePushBind', null, false);\r\n}\r\n\r\n/**\r\n * // DEBUG 取出 jwtToken payload 的內容。\r\n */\r\nconst getJwtTokenTestData = () => {\r\n  const jwtToken = sessionStorage.getItem('jwtToken');\r\n  if (jwtToken) {\r\n    const jwtClaimJson = Buffer.from(jwtToken.split('.')[1], 'base64');\r\n    const { webData } = JSON.parse(String.fromCharCode(...jwtClaimJson));\r\n    console.log('** JWT Token Test Data ：', webData);\r\n    return webData;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport {\r\n  getCallerFunc,\r\n  getOsType,\r\n  getPlatform,\r\n  goHome,\r\n  startFunc,\r\n  closeFunc,\r\n  loadFuncParams,\r\n  switchLoading,\r\n  doOCR,\r\n  showPopup,\r\n  showAlert,\r\n  getAesKey,\r\n  syncJwtToken,\r\n  getJwtToken,\r\n  transactionAuth,\r\n  shareMessage,\r\n  getQLStatus,\r\n  regQLfeature,\r\n  regQL,\r\n  delQL,\r\n  queryPushBind,\r\n  updatePushBind,\r\n  forceLogout,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}