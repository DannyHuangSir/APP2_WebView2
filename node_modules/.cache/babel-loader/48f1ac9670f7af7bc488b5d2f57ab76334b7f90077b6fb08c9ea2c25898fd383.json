{"ast":null,"code":"/* eslint-disable no-unused-vars */ /*\r\n * TWCA Crypto E2EE Lib\r\n */var TWCA_E2EE_SUCCESS=0;var TWCA_E2EE_INPUTPUBLIC_ERROR=0x1001;var TWCA_E2EE_ENCRYPT_ERROR=0x1002;var retSecret='';var version='2.0.0.1';module.exports={getVersion:function getVersion(){return version;},getSecret:function getSecret(s1){return retSecret;},EncryptSecret:function EncryptSecret(Secret,exponent,modulus){var ret=TWCA_E2EE_SUCCESS;// eslint-disable-next-line no-undef\nvar rsa=new RSAKey();do{try{if(window.is_hexadecimal(modulus)&&window.is_hexadecimal(exponent)){rsa.setPublic(modulus,exponent);}else{ret=TWCA_E2EE_INPUTPUBLIC_ERROR;}}catch(e){ret=TWCA_E2EE_INPUTPUBLIC_ERROR;break;}try{var encrypted=rsa.encrypt(Secret);if(encrypted){retSecret=encrypted;}else{ret=TWCA_E2EE_ENCRYPT_ERROR;}}catch(e){ret=TWCA_E2EE_ENCRYPT_ERROR;break;}// eslint-disable-next-line no-constant-condition\n}while(false);return ret;}};","map":{"version":3,"names":["TWCA_E2EE_SUCCESS","TWCA_E2EE_INPUTPUBLIC_ERROR","TWCA_E2EE_ENCRYPT_ERROR","retSecret","version","module","exports","getVersion","getSecret","s1","EncryptSecret","Secret","exponent","modulus","ret","rsa","RSAKey","window","is_hexadecimal","setPublic","e","encrypted","encrypt"],"sources":["C:/Users/allen/git/app2-webview/src/utilities/TWCA4E2EELib.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\n/*\r\n * TWCA Crypto E2EE Lib\r\n */\r\nconst TWCA_E2EE_SUCCESS = 0;\r\nconst TWCA_E2EE_INPUTPUBLIC_ERROR = 0x1001;\r\nconst TWCA_E2EE_ENCRYPT_ERROR = 0x1002;\r\nlet retSecret = '';\r\nconst version = '2.0.0.1';\r\n\r\nmodule.exports = {\r\n\r\n  getVersion() {\r\n    return version;\r\n  },\r\n  getSecret(s1) {\r\n    return retSecret;\r\n  },\r\n  EncryptSecret(Secret, exponent, modulus) {\r\n    let ret = TWCA_E2EE_SUCCESS;\r\n    // eslint-disable-next-line no-undef\r\n    const rsa = new RSAKey();\r\n    do {\r\n      try {\r\n        if (window.is_hexadecimal(modulus) && window.is_hexadecimal(exponent)) {\r\n          rsa.setPublic(modulus, exponent);\r\n        } else {\r\n          ret = TWCA_E2EE_INPUTPUBLIC_ERROR;\r\n        }\r\n      } catch (e) {\r\n        ret = TWCA_E2EE_INPUTPUBLIC_ERROR;\r\n        break;\r\n      }\r\n      try {\r\n        const encrypted = rsa.encrypt(Secret);\r\n        if (encrypted) {\r\n          retSecret = encrypted;\r\n        } else {\r\n          ret = TWCA_E2EE_ENCRYPT_ERROR;\r\n        }\r\n      } catch (e) {\r\n        ret = TWCA_E2EE_ENCRYPT_ERROR;\r\n        break;\r\n      }\r\n      // eslint-disable-next-line no-constant-condition\r\n    } while (false);\r\n    return ret;\r\n  },\r\n};\r\n"],"mappings":"AAAA,oCACA;AACA;AACA,GACA,GAAMA,kBAAiB,CAAG,CAAC,CAC3B,GAAMC,4BAA2B,CAAG,MAAM,CAC1C,GAAMC,wBAAuB,CAAG,MAAM,CACtC,GAAIC,UAAS,CAAG,EAAE,CAClB,GAAMC,QAAO,CAAG,SAAS,CAEzBC,MAAM,CAACC,OAAO,CAAG,CAEfC,UAAU,sBAAG,CACX,MAAOH,QAAO,CAChB,CAAC,CACDI,SAAS,oBAACC,EAAE,CAAE,CACZ,MAAON,UAAS,CAClB,CAAC,CACDO,aAAa,wBAACC,MAAM,CAAEC,QAAQ,CAAEC,OAAO,CAAE,CACvC,GAAIC,IAAG,CAAGd,iBAAiB,CAC3B;AACA,GAAMe,IAAG,CAAG,GAAIC,OAAM,EAAE,CACxB,EAAG,CACD,GAAI,CACF,GAAIC,MAAM,CAACC,cAAc,CAACL,OAAO,CAAC,EAAII,MAAM,CAACC,cAAc,CAACN,QAAQ,CAAC,CAAE,CACrEG,GAAG,CAACI,SAAS,CAACN,OAAO,CAAED,QAAQ,CAAC,CAClC,CAAC,IAAM,CACLE,GAAG,CAAGb,2BAA2B,CACnC,CACF,CAAE,MAAOmB,CAAC,CAAE,CACVN,GAAG,CAAGb,2BAA2B,CACjC,MACF,CACA,GAAI,CACF,GAAMoB,UAAS,CAAGN,GAAG,CAACO,OAAO,CAACX,MAAM,CAAC,CACrC,GAAIU,SAAS,CAAE,CACblB,SAAS,CAAGkB,SAAS,CACvB,CAAC,IAAM,CACLP,GAAG,CAAGZ,uBAAuB,CAC/B,CACF,CAAE,MAAOkB,CAAC,CAAE,CACVN,GAAG,CAAGZ,uBAAuB,CAC7B,MACF,CACA;AACF,CAAC,MAAQ,KAAK,EACd,MAAOY,IAAG,CACZ,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}