{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{callAPI}from'utilities/axios';import{getBankCode}from'utilities/CacheData';import{setAgreAccts}from'stores/reducers/CacheReducer';import store from'stores/store';/**\r\n * 查詢指定轉出帳號約定轉入帳號清單。\r\n * @param {String} accountNo 要查詢約定轉入帳號清單的帳號。\r\n * @returns {Promise<[{\r\n *   bankId: '約定轉入帳戶-銀行代碼'\r\n *   acctId: '約定轉入帳戶-帳號'\r\n *   bankName: '銀行名稱'\r\n *   nickName: '暱稱'\r\n *   email: '通知EMAIL'\r\n *   headshot: '代表圖檔的UUID，用來顯示大頭貼；若為 null 表示還沒有設定頭像。'\r\n * }]>} 約定轉入帳號清單。\r\n */export var getAgreedAccount=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(accountNo){var _store$getState;var _store$getState$Cache,agreAccts,_response$data,response,bankList;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_store$getState$Cache=(_store$getState=store.getState())===null||_store$getState===void 0?void 0:_store$getState.CacheReducer,agreAccts=_store$getState$Cache.agreAccts;if(!agreAccts)agreAccts=[];if(agreAccts[accountNo]){_context.next=11;break;}_context.next=5;return callAPI('/api/transfer/agreedAccount/v1/get',{accountNo:accountNo});case 5:response=_context.sent;_context.next=8;return getBankCode();case 8:bankList=_context.sent;agreAccts[accountNo]=(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.map(function(item){var _bankList$find$bankNa,_bankList$find;return _objectSpread(_objectSpread({},item),{},{bankName:(_bankList$find$bankNa=bankList===null||bankList===void 0?void 0:(_bankList$find=bankList.find(function(b){return b.bankNo===item.bankId;}))===null||_bankList$find===void 0?void 0:_bankList$find.bankName)!==null&&_bankList$find$bankNa!==void 0?_bankList$find$bankNa:item.bankId});});store.dispatch(setAgreAccts(agreAccts));case 11:return _context.abrupt(\"return\",agreAccts[accountNo]);case 12:case\"end\":return _context.stop();}}},_callee);}));return function getAgreedAccount(_x){return _ref.apply(this,arguments);};}();/**\r\n * 更新指定約定轉入帳號的暱稱或通知EMAIL。\r\n * @param {String} accountNo 要查詢約定轉入帳號清單的帳號。\r\n * @param {{\r\n *   bankId: '約定轉入帳戶-銀行代碼'\r\n *   acctId: '約定轉入帳戶-帳號'\r\n *   nickName: '新暱稱；若為空字串，則表示清除，若為null，則表示不變。'\r\n *   email: '新通知EMAIL；若為空字串，則表示清除，若為null，則表示不變。'\r\n *   headshot: '代表圖檔的內容，使用 Base64 格式；若為 null 表示還沒有設定頭像。'\r\n * }} request\r\n * @returns {Promise<String>} 代表圖檔的UUID，用來顯示大頭貼；若為 null 表示還沒有設定頭像。\r\n */export var updateAgreedAccount=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(accountNo,request){var _store$getState2;var response,headshotId,_store$getState$Cache2,agreAccts,accounts,index;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return callAPI('/api/transfer/agreedAccount/v1/update',request);case 2:response=_context2.sent;headshotId=response.data;// 更新約定轉入帳號快取。\n_store$getState$Cache2=(_store$getState2=store.getState())===null||_store$getState2===void 0?void 0:_store$getState2.CacheReducer,agreAccts=_store$getState$Cache2.agreAccts;accounts=agreAccts[accountNo];index=accounts.findIndex(function(account){return account.bankId===request.bankId&&account.acctId===request.acctId;});if(request.nickName)accounts[index].nickName=request.nickName;if(request.email)accounts[index].email=request.email;if(request.headshot)accounts[index].headshot=headshotId;store.dispatch(setAgreAccts(agreAccts));return _context2.abrupt(\"return\",accounts);case 12:case\"end\":return _context2.stop();}}},_callee2);}));return function updateAgreedAccount(_x2,_x3){return _ref2.apply(this,arguments);};}();","map":{"version":3,"names":["callAPI","getBankCode","setAgreAccts","store","getAgreedAccount","accountNo","getState","CacheReducer","agreAccts","response","bankList","data","map","item","bankName","find","b","bankNo","bankId","dispatch","updateAgreedAccount","request","headshotId","accounts","index","findIndex","account","acctId","nickName","email","headshot"],"sources":["C:/Users/allen/git/app2-webview/src/pages/D00600_RegisteredContacts/api.js"],"sourcesContent":["import { callAPI } from 'utilities/axios';\r\nimport { getBankCode } from 'utilities/CacheData';\r\nimport { setAgreAccts } from 'stores/reducers/CacheReducer';\r\nimport store from 'stores/store';\r\n\r\n/**\r\n * 查詢指定轉出帳號約定轉入帳號清單。\r\n * @param {String} accountNo 要查詢約定轉入帳號清單的帳號。\r\n * @returns {Promise<[{\r\n *   bankId: '約定轉入帳戶-銀行代碼'\r\n *   acctId: '約定轉入帳戶-帳號'\r\n *   bankName: '銀行名稱'\r\n *   nickName: '暱稱'\r\n *   email: '通知EMAIL'\r\n *   headshot: '代表圖檔的UUID，用來顯示大頭貼；若為 null 表示還沒有設定頭像。'\r\n * }]>} 約定轉入帳號清單。\r\n */\r\nexport const getAgreedAccount = async (accountNo) => {\r\n  let {agreAccts} = store.getState()?.CacheReducer;\r\n  if (!agreAccts) agreAccts = [];\r\n\r\n  if (!agreAccts[accountNo]) {\r\n    const response = await callAPI('/api/transfer/agreedAccount/v1/get', { accountNo });\r\n    const bankList = await getBankCode();\r\n    agreAccts[accountNo] = response.data?.map((item) => ({\r\n      ...item,\r\n      bankName: (bankList?.find((b) => b.bankNo === item.bankId)?.bankName ?? item.bankId),\r\n    }));\r\n    store.dispatch(setAgreAccts(agreAccts));\r\n  }\r\n  return agreAccts[accountNo];\r\n};\r\n\r\n/**\r\n * 更新指定約定轉入帳號的暱稱或通知EMAIL。\r\n * @param {String} accountNo 要查詢約定轉入帳號清單的帳號。\r\n * @param {{\r\n *   bankId: '約定轉入帳戶-銀行代碼'\r\n *   acctId: '約定轉入帳戶-帳號'\r\n *   nickName: '新暱稱；若為空字串，則表示清除，若為null，則表示不變。'\r\n *   email: '新通知EMAIL；若為空字串，則表示清除，若為null，則表示不變。'\r\n *   headshot: '代表圖檔的內容，使用 Base64 格式；若為 null 表示還沒有設定頭像。'\r\n * }} request\r\n * @returns {Promise<String>} 代表圖檔的UUID，用來顯示大頭貼；若為 null 表示還沒有設定頭像。\r\n */\r\nexport const updateAgreedAccount = async (accountNo, request) => {\r\n  const response = await callAPI('/api/transfer/agreedAccount/v1/update', request);\r\n  const headshotId = response.data;\r\n\r\n  // 更新約定轉入帳號快取。\r\n  const {agreAccts} = store.getState()?.CacheReducer;\r\n  const accounts = agreAccts[accountNo];\r\n\r\n  const index = accounts.findIndex((account) => account.bankId === request.bankId && account.acctId === request.acctId);\r\n  if (request.nickName) accounts[index].nickName = request.nickName;\r\n  if (request.email) accounts[index].email = request.email;\r\n  if (request.headshot) accounts[index].headshot = headshotId;\r\n  store.dispatch(setAgreAccts(agreAccts));\r\n\r\n  return accounts;\r\n};\r\n"],"mappings":"8WAAA,OAASA,OAAO,KAAQ,iBAAiB,CACzC,OAASC,WAAW,KAAQ,qBAAqB,CACjD,OAASC,YAAY,KAAQ,8BAA8B,CAC3D,MAAOC,MAAK,KAAM,cAAc,CAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,iBAAgB,4FAAG,iBAAOC,SAAS,oPAC5BF,KAAK,CAACG,QAAQ,EAAE,0CAAhB,gBAAkBC,YAAY,CAA3CC,SAAS,uBAATA,SAAS,CACd,GAAI,CAACA,SAAS,CAAEA,SAAS,CAAG,EAAE,CAAC,GAE1BA,SAAS,CAACH,SAAS,CAAC,gDACAL,QAAO,CAAC,oCAAoC,CAAE,CAAEK,SAAS,CAATA,SAAU,CAAC,CAAC,QAA7EI,QAAQ,qCACSR,YAAW,EAAE,QAA9BS,QAAQ,eACdF,SAAS,CAACH,SAAS,CAAC,iBAAGI,QAAQ,CAACE,IAAI,yCAAb,eAAeC,GAAG,CAAC,SAACC,IAAI,iFAC1CA,IAAI,MACPC,QAAQ,wBAAGJ,QAAQ,SAARA,QAAQ,iCAARA,QAAQ,CAAEK,IAAI,CAAC,SAACC,CAAC,QAAKA,EAAC,CAACC,MAAM,GAAKJ,IAAI,CAACK,MAAM,GAAC,yCAA/C,eAAiDJ,QAAQ,+DAAID,IAAI,CAACK,MAAO,IACpF,CAAC,CACHf,KAAK,CAACgB,QAAQ,CAACjB,YAAY,CAACM,SAAS,CAAC,CAAC,CAAC,wCAEnCA,SAAS,CAACH,SAAS,CAAC,yDAC5B,kBAdYD,iBAAgB,4CAc5B,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMgB,oBAAmB,6FAAG,kBAAOf,SAAS,CAAEgB,OAAO,4OACnCrB,QAAO,CAAC,uCAAuC,CAAEqB,OAAO,CAAC,QAA1EZ,QAAQ,gBACRa,UAAU,CAAGb,QAAQ,CAACE,IAAI,CAEhC;AAAA,yCACoBR,KAAK,CAACG,QAAQ,EAAE,2CAAhB,iBAAkBC,YAAY,CAA3CC,SAAS,wBAATA,SAAS,CACVe,QAAQ,CAAGf,SAAS,CAACH,SAAS,CAAC,CAE/BmB,KAAK,CAAGD,QAAQ,CAACE,SAAS,CAAC,SAACC,OAAO,QAAKA,QAAO,CAACR,MAAM,GAAKG,OAAO,CAACH,MAAM,EAAIQ,OAAO,CAACC,MAAM,GAAKN,OAAO,CAACM,MAAM,GAAC,CACrH,GAAIN,OAAO,CAACO,QAAQ,CAAEL,QAAQ,CAACC,KAAK,CAAC,CAACI,QAAQ,CAAGP,OAAO,CAACO,QAAQ,CACjE,GAAIP,OAAO,CAACQ,KAAK,CAAEN,QAAQ,CAACC,KAAK,CAAC,CAACK,KAAK,CAAGR,OAAO,CAACQ,KAAK,CACxD,GAAIR,OAAO,CAACS,QAAQ,CAAEP,QAAQ,CAACC,KAAK,CAAC,CAACM,QAAQ,CAAGR,UAAU,CAC3DnB,KAAK,CAACgB,QAAQ,CAACjB,YAAY,CAACM,SAAS,CAAC,CAAC,CAAC,iCAEjCe,QAAQ,2DAChB,kBAfYH,oBAAmB,kDAe/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}