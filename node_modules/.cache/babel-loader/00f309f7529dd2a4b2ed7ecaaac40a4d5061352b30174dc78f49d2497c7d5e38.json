{"ast":null,"code":"import _objectSpread from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{callAPI}from'utilities/axios';import{showCustomPrompt}from'utilities/MessageModal';import mockLoanRewards from'./mockData/mockRewards';/**\r\n * 可能回饋 - 取得回饋紀錄 DEBUG: mock\r\n   @param {\r\n     accountNo: 指定貸款帳號\r\n     month: 指定月份，或null、undefined為最近的六個月\r\n   }\r\n   @returns {\r\n     rewards: 可能回饋，未參加回饋挑戰可忽略\r\n     isJoinedRewardProgram: 是否參加回饋挑戰\r\n     currency: 幣別\r\n     transactions: [\r\n       {\r\n         isSuccess: 挑戰成功或失敗\r\n         txnDate: 交易日期\r\n         amount: 利息金額，挑戰失敗可忽略\r\n         rate: 利息（不含%），挑戰失敗可忽略\r\n         currency: 幣別，挑戰失敗可忽略\r\n       }, ...]\r\n   }\r\n */export var getLoanRewards=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(param){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(resolve){return resolve({data:mockLoanRewards(param)});});case 2:response=_context.sent;return _context.abrupt(\"return\",response.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getLoanRewards(_x){return _ref.apply(this,arguments);};}();/**\r\n * 下載合約 TODO: 未有API\r\n   @param {\r\n      accountNo: 貸款號\r\n      fileType: 1 = pdf 或 2 = excel\r\n   }\r\n   @returns {\r\n     url: 檔案URL。\r\n   }\r\n */export var getContract=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(param){var accountNo,format;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:/* TODO\r\n  if (fileType === 1) {\r\n    await downloadPDF('/api/deposit/v1/getDepositBook', request, `${filename}.pdf`);\r\n  } else if (fileType === 2) {\r\n    await downloadCSV('/api/deposit/v1/getDepositBook', request, `${filename}.csv`);\r\n  }\r\n  */accountNo=param.accountNo,format=param.format;// alert(`待串接API，下載合約貸款號：${accountNo}`, format === 1 ? '下載PDF' : '下載EXCEL');\n_context2.next=3;return showCustomPrompt({title:'待串接API',message:\"\\u4E0B\\u8F09\\u5408\\u7D04\\u8CB8\\u6B3E\\u865F\\uFF1A\".concat(accountNo,\"\\uFF1A\").concat(format===1?'下載PDF':'下載EXCEL')});case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function getContract(_x2){return _ref2.apply(this,arguments);};}();/**\r\n * 下載清償證明 TODO: 未有API\r\n   @param {\r\n      accountNo: 貸款號\r\n      fileType: 1 = pdf 或 2 = excel\r\n   }\r\n   @returns {\r\n     url: 檔案URL。\r\n   }\r\n */export var getStatment=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(param){var accountNo,format;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:/* TODO\r\n  if (fileType === 1) {\r\n    await downloadPDF('/api/deposit/v1/getDepositBook', request, `${filename}.pdf`);\r\n  } else if (fileType === 2) {\r\n    await downloadCSV('/api/deposit/v1/getDepositBook', request, `${filename}.csv`);\r\n  }\r\n  */accountNo=param.accountNo,format=param.format;// alert(`待串接API，下載證明貸款號：${accountNo}`, format === 1 ? '下載PDF' : '下載EXCEL');\n_context3.next=3;return showCustomPrompt({title:'待串接API',message:\"\\u4E0B\\u8F09\\u8B49\\u660E\\u8CB8\\u6B3E\\u865F\".concat(accountNo,\"\\uFF1A\").concat(format===1?'下載PDF':'下載EXCEL')});case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function getStatment(_x3){return _ref3.apply(this,arguments);};}();/**\r\n * 查詢分帳應繳摘要資訊 (用於子首頁)。\r\n *\r\n * @param token\r\n * @return [{\r\n *      account       放款帳號 (每人在遠銀只有一個)\r\n *      subNo         分帳序號 (每次貸款一個序號)    L0003.sqno\r\n *      balance       貸放餘額                      L0003.actbal\r\n *      dayToPay       應繳日期                      L0101.CNIRDT\r\n *      payAmount     應繳本息                      L0101.ISTPRT\r\n *      debitAccount  扣款帳號                      L0101.PAYACTNO\r\n *    }...\r\n * ]\r\n */export var getSubSummary=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request){var response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return callAPI('/api/loan/v1/getSubSummary',request);case 2:response=_context4.sent;return _context4.abrupt(\"return\",response.data);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function getSubSummary(_x4){return _ref4.apply(this,arguments);};}();/**\r\n * 查詢分帳還款紀錄\r\n *\r\n * @param token\r\n * @param {\r\n *    account:    放款帳號(每人一個)   ex: 02905000006466\r\n *    subNo:      分帳序號            ex: 0001\r\n *    startDate:  查詢起日            (西元年 20220131) 統一用西元年\r\n *    endDate:    查詢迄日            (西元年 20220228) 統一用西元年\r\n *  }\r\n * @return [{\r\n *    date:           交易日期                L0106.txDate\r\n *    amount:         繳款金額 (=應繳金額)    L0106.txAmt\r\n *    balance:        貸款餘額 (=本金餘額     L0106.actBal\r\n *    type:           交易種類  ex: 還本付息  L0106.txCd\r\n *    splitPrincipal: 攤還本金                L0106.priAmt\r\n *    interest:       利息                    L0106.intAmt\r\n *    overInterest:   逾期息                  L0106.dintAmt\r\n *    defaultAmount:  違約金                  L0106.dfAmt\r\n *    rate:           計息利率                L0106.fitIrt\r\n *   }...\r\n * ]\r\n *\r\n */export var getSubPaymentHistory=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(param){var response;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return callAPI('/api/loan/v1/getSubPaymentHistory',param);case 2:response=_context5.sent;return _context5.abrupt(\"return\",response);case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function getSubPaymentHistory(_x5){return _ref5.apply(this,arguments);};}();/**\r\n * 查詢分帳應繳資訊\r\n *\r\n * @param token\r\n * @param {\r\n *    account:  放款帳號(每人一個)   ex: 02905000006466\r\n *    subNo:    分號                ex: 0001\r\n *   }\r\n * @return [{\r\n *    amount          本期應繳金額    L0102.PRIAMT + L0102.INTAMT + L0102.DIAMT + L0102.DFAMT\r\n *    startDate       計息期間起      L0102.OSDATE\r\n *    endDate         計息期間迄      L0102.OEDATE\r\n *    rate            利率%           L0102.FITIRT\r\n *    principal       計息本金        L0102.INTPRT\r\n *    splitPrincipal  攤還本金        L0102.PRIAMT\r\n *    interest        利息            L0102.INTAMT\r\n *    overInterest    逾期息          L0102.DIAMT\r\n *    defaultAmount   違約金          L0102.DFAMT\r\n * }]\r\n *\r\n */export var getSubPayment=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(param){var response;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return callAPI('/api/loan/v1/getSubPayment',param);case 2:response=_context6.sent;return _context6.abrupt(\"return\",response.data);case 4:case\"end\":return _context6.stop();}}},_callee6);}));return function getSubPayment(_x6){return _ref6.apply(this,arguments);};}();/**\r\n * 貸款資訊查詢\r\n * @param {{\r\n * account: 放款帳號\r\n * subNo: 分號\r\n * }} param\r\n * @returns {{\r\n * startDate: 貸款起日\r\n * endDate: 貸款迄日\r\n * dayToPay: 每期還款(日期)\r\n * txAmt: 初貸金額\r\n * rate: 貸款利率\r\n * loanBalance: 貸款餘額\r\n * periodPaid: 已繳期數\r\n * periodRemaining: 剩餘期數\r\n * type: 貸款類別 //TODO 主機尚未提供\r\n * }}\r\n */export var getInfo=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(param){var response,loadDetail;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return callAPI('/api/loan/v1/getInfo',param);case 2:response=_context7.sent;loadDetail=_objectSpread({type:'信貸'},response.data);return _context7.abrupt(\"return\",loadDetail);case 5:case\"end\":return _context7.stop();}}},_callee7);}));return function getInfo(_x7){return _ref7.apply(this,arguments);};}();","map":{"version":3,"names":["callAPI","showCustomPrompt","mockLoanRewards","getLoanRewards","param","Promise","resolve","data","response","getContract","accountNo","format","title","message","getStatment","getSubSummary","request","getSubPaymentHistory","getSubPayment","getInfo","loadDetail","type"],"sources":["C:/Users/allen/git/app2-webview/src/pages/L00100_Loan/api.js"],"sourcesContent":["import { callAPI } from 'utilities/axios';\r\nimport { showCustomPrompt } from 'utilities/MessageModal';\r\nimport mockLoanRewards from './mockData/mockRewards';\r\n\r\n/**\r\n * 可能回饋 - 取得回饋紀錄 DEBUG: mock\r\n   @param {\r\n     accountNo: 指定貸款帳號\r\n     month: 指定月份，或null、undefined為最近的六個月\r\n   }\r\n   @returns {\r\n     rewards: 可能回饋，未參加回饋挑戰可忽略\r\n     isJoinedRewardProgram: 是否參加回饋挑戰\r\n     currency: 幣別\r\n     transactions: [\r\n       {\r\n         isSuccess: 挑戰成功或失敗\r\n         txnDate: 交易日期\r\n         amount: 利息金額，挑戰失敗可忽略\r\n         rate: 利息（不含%），挑戰失敗可忽略\r\n         currency: 幣別，挑戰失敗可忽略\r\n       }, ...]\r\n   }\r\n */\r\nexport const getLoanRewards = async (param) => {\r\n  // const response = await callAPI('/api/');\r\n  const response = await new Promise((resolve) => resolve({ data: mockLoanRewards(param) }));\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 下載合約 TODO: 未有API\r\n   @param {\r\n      accountNo: 貸款號\r\n      fileType: 1 = pdf 或 2 = excel\r\n   }\r\n   @returns {\r\n     url: 檔案URL。\r\n   }\r\n */\r\nexport const getContract = async (param) => {\r\n  /* TODO\r\n  if (fileType === 1) {\r\n    await downloadPDF('/api/deposit/v1/getDepositBook', request, `${filename}.pdf`);\r\n  } else if (fileType === 2) {\r\n    await downloadCSV('/api/deposit/v1/getDepositBook', request, `${filename}.csv`);\r\n  }\r\n  */\r\n  const { accountNo, format } = param;\r\n  // alert(`待串接API，下載合約貸款號：${accountNo}`, format === 1 ? '下載PDF' : '下載EXCEL');\r\n  await showCustomPrompt({title: '待串接API', message: `下載合約貸款號：${accountNo}：${format === 1 ? '下載PDF' : '下載EXCEL'}`});\r\n};\r\n\r\n/**\r\n * 下載清償證明 TODO: 未有API\r\n   @param {\r\n      accountNo: 貸款號\r\n      fileType: 1 = pdf 或 2 = excel\r\n   }\r\n   @returns {\r\n     url: 檔案URL。\r\n   }\r\n */\r\nexport const getStatment = async (param) => {\r\n  /* TODO\r\n  if (fileType === 1) {\r\n    await downloadPDF('/api/deposit/v1/getDepositBook', request, `${filename}.pdf`);\r\n  } else if (fileType === 2) {\r\n    await downloadCSV('/api/deposit/v1/getDepositBook', request, `${filename}.csv`);\r\n  }\r\n  */\r\n  const { accountNo, format } = param;\r\n  // alert(`待串接API，下載證明貸款號：${accountNo}`, format === 1 ? '下載PDF' : '下載EXCEL');\r\n  await showCustomPrompt({title: '待串接API', message: `下載證明貸款號${accountNo}：${format === 1 ? '下載PDF' : '下載EXCEL'}`});\r\n};\r\n\r\n/**\r\n * 查詢分帳應繳摘要資訊 (用於子首頁)。\r\n *\r\n * @param token\r\n * @return [{\r\n *      account       放款帳號 (每人在遠銀只有一個)\r\n *      subNo         分帳序號 (每次貸款一個序號)    L0003.sqno\r\n *      balance       貸放餘額                      L0003.actbal\r\n *      dayToPay       應繳日期                      L0101.CNIRDT\r\n *      payAmount     應繳本息                      L0101.ISTPRT\r\n *      debitAccount  扣款帳號                      L0101.PAYACTNO\r\n *    }...\r\n * ]\r\n */\r\nexport const getSubSummary = async (request) => {\r\n  const response = await callAPI('/api/loan/v1/getSubSummary', request);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 查詢分帳還款紀錄\r\n *\r\n * @param token\r\n * @param {\r\n *    account:    放款帳號(每人一個)   ex: 02905000006466\r\n *    subNo:      分帳序號            ex: 0001\r\n *    startDate:  查詢起日            (西元年 20220131) 統一用西元年\r\n *    endDate:    查詢迄日            (西元年 20220228) 統一用西元年\r\n *  }\r\n * @return [{\r\n *    date:           交易日期                L0106.txDate\r\n *    amount:         繳款金額 (=應繳金額)    L0106.txAmt\r\n *    balance:        貸款餘額 (=本金餘額     L0106.actBal\r\n *    type:           交易種類  ex: 還本付息  L0106.txCd\r\n *    splitPrincipal: 攤還本金                L0106.priAmt\r\n *    interest:       利息                    L0106.intAmt\r\n *    overInterest:   逾期息                  L0106.dintAmt\r\n *    defaultAmount:  違約金                  L0106.dfAmt\r\n *    rate:           計息利率                L0106.fitIrt\r\n *   }...\r\n * ]\r\n *\r\n */\r\nexport const getSubPaymentHistory = async (param) => {\r\n  const response = await callAPI('/api/loan/v1/getSubPaymentHistory', param);\r\n  return response;\r\n};\r\n\r\n/**\r\n * 查詢分帳應繳資訊\r\n *\r\n * @param token\r\n * @param {\r\n *    account:  放款帳號(每人一個)   ex: 02905000006466\r\n *    subNo:    分號                ex: 0001\r\n *   }\r\n * @return [{\r\n *    amount          本期應繳金額    L0102.PRIAMT + L0102.INTAMT + L0102.DIAMT + L0102.DFAMT\r\n *    startDate       計息期間起      L0102.OSDATE\r\n *    endDate         計息期間迄      L0102.OEDATE\r\n *    rate            利率%           L0102.FITIRT\r\n *    principal       計息本金        L0102.INTPRT\r\n *    splitPrincipal  攤還本金        L0102.PRIAMT\r\n *    interest        利息            L0102.INTAMT\r\n *    overInterest    逾期息          L0102.DIAMT\r\n *    defaultAmount   違約金          L0102.DFAMT\r\n * }]\r\n *\r\n */\r\nexport const getSubPayment = async (param) => {\r\n  const response = await callAPI('/api/loan/v1/getSubPayment', param);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 貸款資訊查詢\r\n * @param {{\r\n * account: 放款帳號\r\n * subNo: 分號\r\n * }} param\r\n * @returns {{\r\n * startDate: 貸款起日\r\n * endDate: 貸款迄日\r\n * dayToPay: 每期還款(日期)\r\n * txAmt: 初貸金額\r\n * rate: 貸款利率\r\n * loanBalance: 貸款餘額\r\n * periodPaid: 已繳期數\r\n * periodRemaining: 剩餘期數\r\n * type: 貸款類別 //TODO 主機尚未提供\r\n * }}\r\n */\r\nexport const getInfo = async (param) => {\r\n  const response = await callAPI('/api/loan/v1/getInfo', param);\r\n\r\n  const loadDetail = {\r\n    type: '信貸',\r\n    ...response.data,\r\n  };\r\n\r\n  return loadDetail;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}