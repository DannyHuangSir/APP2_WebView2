{"ast":null,"code":"/* eslint-disable no-unused-vars */import{createStore,applyMiddleware,combineReducers}from'redux';import thunk from'redux-thunk';import{persistStore,persistReducer}from'redux-persist';import hardSet from'redux-persist/lib/stateReconciler/hardSet';import sessionStorage from'redux-persist/es/storage/session';// sessionStorage\nimport createTransform from'redux-persist/es/createTransform';import CryptoJS from'crypto-js';import{composeWithDevTools}from'redux-devtools-extension/developmentOnly';import CipherUtil from'utilities/CipherUtil';import ModalReducer from'./reducers/ModalReducer';import CacheReducer from'./reducers/CacheReducer';// import { reducers as patternLockSettingReducer } from 'pages/PatternLockSetting/stores';\nvar reducer=combineReducers({ModalReducer:ModalReducer,CacheReducer:CacheReducer// patternLockSetting: patternLockSettingReducer, // NOTE 將來可能用的到，先不刪！\n});/**\r\n *- 創建store\r\n *- 將redux資料暫存在storageSession\r\n *- 引入thunk達到異步存取redux\r\n */var modulus=CipherUtil.generateKey(256);var encrypt=createTransform(function(data,key){// console.log(`==> Redux(${key}) 加密...`);\n// console.log(data);\nif(data){var cryptedText=CryptoJS.AES.encrypt(JSON.stringify(data),modulus);data=cryptedText.toString();}return data;},function(data,key){// console.log(`==> Redux(${key}) 解密...`);\n// console.log(data);\nif(data){var bytes=CryptoJS.AES.decrypt(data,modulus);var decrypted=bytes.toString(CryptoJS.enc.Utf8);data=JSON.parse(decrypted);}return data;});var storageConfig={key:'root',// 必须值\nstorage:sessionStorage,// 缓存機制\nstateReconciler:hardSet,// 查看 'Merge Process' 部分的具体情况\n// whitelist: ['menu','order'] // reducer 裡持久化的数据,除此外均为不持久化数据\ntransforms:[encrypt]};var myPersistReducer=persistReducer(storageConfig,reducer);var store=createStore(myPersistReducer,composeWithDevTools(applyMiddleware(thunk)));export var persistor=persistStore(store);export default store;","map":{"version":3,"names":["createStore","applyMiddleware","combineReducers","thunk","persistStore","persistReducer","hardSet","sessionStorage","createTransform","CryptoJS","composeWithDevTools","CipherUtil","ModalReducer","CacheReducer","reducer","modulus","generateKey","encrypt","data","key","cryptedText","AES","JSON","stringify","toString","bytes","decrypt","decrypted","enc","Utf8","parse","storageConfig","storage","stateReconciler","transforms","myPersistReducer","store","persistor"],"sources":["C:/Users/allen/git/app2-webview/src/stores/store.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\r\nimport sessionStorage from 'redux-persist/es/storage/session'; // sessionStorage\r\nimport createTransform from 'redux-persist/es/createTransform';\r\nimport CryptoJS from 'crypto-js';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport CipherUtil from 'utilities/CipherUtil';\r\n\r\nimport ModalReducer from './reducers/ModalReducer';\r\nimport CacheReducer from './reducers/CacheReducer';\r\n// import { reducers as patternLockSettingReducer } from 'pages/PatternLockSetting/stores';\r\n\r\nconst reducer = combineReducers({\r\n  ModalReducer,\r\n  CacheReducer,\r\n  // patternLockSetting: patternLockSettingReducer, // NOTE 將來可能用的到，先不刪！\r\n});\r\n\r\n/**\r\n *- 創建store\r\n *- 將redux資料暫存在storageSession\r\n *- 引入thunk達到異步存取redux\r\n */\r\nconst modulus = CipherUtil.generateKey(256);\r\n\r\nconst encrypt = createTransform(\r\n  (data, key) => {\r\n    // console.log(`==> Redux(${key}) 加密...`);\r\n    // console.log(data);\r\n    if (data) {\r\n      const cryptedText = CryptoJS.AES.encrypt(JSON.stringify(data), modulus);\r\n      data = cryptedText.toString();\r\n    }\r\n    return data;\r\n  },\r\n  (data, key) => {\r\n    // console.log(`==> Redux(${key}) 解密...`);\r\n    // console.log(data);\r\n    if (data) {\r\n      const bytes = CryptoJS.AES.decrypt(data, modulus);\r\n      const decrypted = bytes.toString(CryptoJS.enc.Utf8);\r\n      data = JSON.parse(decrypted);\r\n    }\r\n    return data;\r\n  },\r\n);\r\n\r\nconst storageConfig = {\r\n  key: 'root', // 必须值\r\n  storage: sessionStorage, // 缓存機制\r\n  stateReconciler: hardSet, // 查看 'Merge Process' 部分的具体情况\r\n  // whitelist: ['menu','order'] // reducer 裡持久化的数据,除此外均为不持久化数据\r\n  transforms: [encrypt],\r\n};\r\n\r\nconst myPersistReducer = persistReducer(storageConfig, reducer);\r\n\r\nconst store = createStore(myPersistReducer, composeWithDevTools(\r\n  applyMiddleware(thunk),\r\n));\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n"],"mappings":"AAAA,mCACA,OAASA,WAAW,CAAEC,eAAe,CAAEC,eAAe,KAAQ,OAAO,CACrE,MAAOC,MAAK,KAAM,aAAa,CAC/B,OAASC,YAAY,CAAEC,cAAc,KAAQ,eAAe,CAC5D,MAAOC,QAAO,KAAM,2CAA2C,CAC/D,MAAOC,eAAc,KAAM,kCAAkC,CAAE;AAC/D,MAAOC,gBAAe,KAAM,kCAAkC,CAC9D,MAAOC,SAAQ,KAAM,WAAW,CAChC,OAASC,mBAAmB,KAAQ,0CAA0C,CAC9E,MAAOC,WAAU,KAAM,sBAAsB,CAE7C,MAAOC,aAAY,KAAM,yBAAyB,CAClD,MAAOC,aAAY,KAAM,yBAAyB,CAClD;AAEA,GAAMC,QAAO,CAAGZ,eAAe,CAAC,CAC9BU,YAAY,CAAZA,YAAY,CACZC,YAAY,CAAZA,YACA;AACF,CAAC,CAAC,CAEF;AACA;AACA;AACA;AACA,GACA,GAAME,QAAO,CAAGJ,UAAU,CAACK,WAAW,CAAC,GAAG,CAAC,CAE3C,GAAMC,QAAO,CAAGT,eAAe,CAC7B,SAACU,IAAI,CAAEC,GAAG,CAAK,CACb;AACA;AACA,GAAID,IAAI,CAAE,CACR,GAAME,YAAW,CAAGX,QAAQ,CAACY,GAAG,CAACJ,OAAO,CAACK,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAEH,OAAO,CAAC,CACvEG,IAAI,CAAGE,WAAW,CAACI,QAAQ,EAAE,CAC/B,CACA,MAAON,KAAI,CACb,CAAC,CACD,SAACA,IAAI,CAAEC,GAAG,CAAK,CACb;AACA;AACA,GAAID,IAAI,CAAE,CACR,GAAMO,MAAK,CAAGhB,QAAQ,CAACY,GAAG,CAACK,OAAO,CAACR,IAAI,CAAEH,OAAO,CAAC,CACjD,GAAMY,UAAS,CAAGF,KAAK,CAACD,QAAQ,CAACf,QAAQ,CAACmB,GAAG,CAACC,IAAI,CAAC,CACnDX,IAAI,CAAGI,IAAI,CAACQ,KAAK,CAACH,SAAS,CAAC,CAC9B,CACA,MAAOT,KAAI,CACb,CAAC,CACF,CAED,GAAMa,cAAa,CAAG,CACpBZ,GAAG,CAAE,MAAM,CAAE;AACba,OAAO,CAAEzB,cAAc,CAAE;AACzB0B,eAAe,CAAE3B,OAAO,CAAE;AAC1B;AACA4B,UAAU,CAAE,CAACjB,OAAO,CACtB,CAAC,CAED,GAAMkB,iBAAgB,CAAG9B,cAAc,CAAC0B,aAAa,CAAEjB,OAAO,CAAC,CAE/D,GAAMsB,MAAK,CAAGpC,WAAW,CAACmC,gBAAgB,CAAEzB,mBAAmB,CAC7DT,eAAe,CAACE,KAAK,CAAC,CACvB,CAAC,CAEF,MAAO,IAAMkC,UAAS,CAAGjC,YAAY,CAACgC,KAAK,CAAC,CAC5C,cAAeA,MAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}