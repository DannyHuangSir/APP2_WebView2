{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{callAPI}from'utilities/axios';import mockCreditCardTerms from'./mockData/mockCreditCardTerms';/**\r\n * 取得信用卡注意事項\r\n * @returns\r\n */export var getCreditCardTerms=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(resolve){return resolve({data:decodeURI(mockCreditCardTerms)});});case 2:response=_context.sent;return _context.abrupt(\"return\",response.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getCreditCardTerms(){return _ref.apply(this,arguments);};}();/**\r\n * 取得超商繳費Barcode資料\r\n *\r\n * @param token\r\n * @param {\r\n *    amount: 預計繳費金額\r\n * }\r\n * @return {\r\n *    barcode1: Barcode 條碼 1\r\n *    barcode2: Barcode 條碼 2\r\n *    barcode3: Barcode 條碼 3\r\n * }\r\n * @throws Exception\r\n *\r\n */export var queryPayBarcode=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return callAPI('/api/card/v1/queryPayBarcode',request);case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function queryPayBarcode(_x){return _ref2.apply(this,arguments);};}();/**\r\n * 查詢客戶信用卡帳單資訊\r\n * (信用卡子首頁_信用卡資訊)\r\n *\r\n * @param token\r\n * @param cardNo bankee 卡號 或 空白表示不指定\r\n * @return {\r\n *    cardLimit:                   信用卡額度\r\n *    usedCardLimit:               已使用額度計算\r\n *    availCardLimit:              可使用額度\r\n *    cashAdvAvailLimitDomestic:   國內預借現金可用額度\r\n *    cashAdvAvailLimitOverseas:   國外預借現金可用額度\r\n *    billClosingDate:             帳單結帳日\r\n *    payDueDate:                  本期繳款截止日\r\n *    minDueAmount:                最低應繳金額\r\n *    newBalance:                  本期應繳總額\r\n *    lastPayDate:                 最近繳款日期\r\n *    paidAmount:                  本期累積已繳金額\r\n * }\r\n *\r\n */export var queryCardInfo=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request){var response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return callAPI('/api/card/v1/getCardSummary',request);case 2:response=_context3.sent;return _context3.abrupt(\"return\",response.data);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function queryCardInfo(_x2){return _ref3.apply(this,arguments);};}();/**\r\n * 信用卡繳費(自行帳戶繳卡費)\r\n *\r\n * @param token\r\n * @param {\r\n *    amount:  金額\r\n *    account: 轉出帳號\r\n *    cardNo:  Bankee 信用卡卡號 (後端API用來繳費歸戶用)\r\n * }\r\n * @return {\r\n *    code:     0000 表示成功\r\n *    message:  Success!!\r\n * }\r\n */export var payCardFee=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request){var response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return callAPI('/api/card/v1/payCardFee',request);case 2:response=_context4.sent;return _context4.abrupt(\"return\",response);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function payCardFee(_x3){return _ref4.apply(this,arguments);};}();/**\r\n * 查詢客戶信用卡自動扣繳資訊\r\n * (畫面_信用卡子首頁_自動扣繳 - 1)\r\n *\r\n * @param token\r\n * @return {\r\n *    bank      銀行別                                     IVR9019.DEDUCT-BANK\r\n *    account   扣繳帳號                                   IVR9019.DEDUCT-ACCOUNT-NO\r\n *    isFullPay 是否指定應繳總額 Y/N                        IVR9019.DEDUCT-AUTOPAY-RATE=100 ? \"Y\":\"N\"\r\n *    status    狀態 1 申請 2 生效 3 取消 4 退件 5 待生效   IVR9019.DEDUCT-STATUS\r\n * }\r\n *\r\n */export var getAutoDebits=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request){var response;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return callAPI('/api/card/v1/getAutoDebits',request);case 2:response=_context5.sent;return _context5.abrupt(\"return\",response.data);case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function getAutoDebits(_x4){return _ref5.apply(this,arguments);};}();/**\r\n * 查詢客戶的 Bankee 信用卡\r\n *\r\n * @param token\r\n * @return {\r\n * usedCardLimit, // 已使用額度\r\n * isBankeeCard, // true/false\r\n * cards [\r\n *      {\r\n *        cardNo, // 卡號\r\n *      },\r\n *    ]\r\n * }\r\n *\r\n */export var getBankeeCard=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(request){var _yield$callAPI,_yield$callAPI$data,cards,usedCardLimit,bankeeCard;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return callAPI('/api/card/v1/getCards',request);case 2:_yield$callAPI=_context6.sent;_yield$callAPI$data=_yield$callAPI.data;cards=_yield$callAPI$data.cards;usedCardLimit=_yield$callAPI$data.usedCardLimit;bankeeCard=cards.find(function(card){return card.isBankeeCard==='Y';});if(bankeeCard){_context6.next=9;break;}return _context6.abrupt(\"return\",null);case 9:return _context6.abrupt(\"return\",{cards:[{cardNo:bankeeCard.cardNo}],usedCardLimit:usedCardLimit,isBankeeCard:true});case 10:case\"end\":return _context6.stop();}}},_callee6);}));return function getBankeeCard(_x5){return _ref6.apply(this,arguments);};}();","map":{"version":3,"names":["callAPI","mockCreditCardTerms","getCreditCardTerms","Promise","resolve","data","decodeURI","response","queryPayBarcode","request","queryCardInfo","payCardFee","getAutoDebits","getBankeeCard","cards","usedCardLimit","bankeeCard","find","card","isBankeeCard","cardNo"],"sources":["C:/Users/allen/git/app2-webview/src/pages/R00400_CCPayment/api.js"],"sourcesContent":["import { callAPI } from 'utilities/axios';\r\nimport mockCreditCardTerms from './mockData/mockCreditCardTerms';\r\n\r\n/**\r\n * 取得信用卡注意事項\r\n * @returns\r\n */\r\nexport const getCreditCardTerms = async () => {\r\n  // Assume backend store Terms as escaped HTML...\r\n  const response = await new Promise((resolve) => resolve({ data: decodeURI(mockCreditCardTerms) }));\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 取得超商繳費Barcode資料\r\n *\r\n * @param token\r\n * @param {\r\n *    amount: 預計繳費金額\r\n * }\r\n * @return {\r\n *    barcode1: Barcode 條碼 1\r\n *    barcode2: Barcode 條碼 2\r\n *    barcode3: Barcode 條碼 3\r\n * }\r\n * @throws Exception\r\n *\r\n */\r\nexport const queryPayBarcode = async (request) => {\r\n  const response = await callAPI('/api/card/v1/queryPayBarcode', request);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 查詢客戶信用卡帳單資訊\r\n * (信用卡子首頁_信用卡資訊)\r\n *\r\n * @param token\r\n * @param cardNo bankee 卡號 或 空白表示不指定\r\n * @return {\r\n *    cardLimit:                   信用卡額度\r\n *    usedCardLimit:               已使用額度計算\r\n *    availCardLimit:              可使用額度\r\n *    cashAdvAvailLimitDomestic:   國內預借現金可用額度\r\n *    cashAdvAvailLimitOverseas:   國外預借現金可用額度\r\n *    billClosingDate:             帳單結帳日\r\n *    payDueDate:                  本期繳款截止日\r\n *    minDueAmount:                最低應繳金額\r\n *    newBalance:                  本期應繳總額\r\n *    lastPayDate:                 最近繳款日期\r\n *    paidAmount:                  本期累積已繳金額\r\n * }\r\n *\r\n */\r\nexport const queryCardInfo = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getCardSummary', request);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 信用卡繳費(自行帳戶繳卡費)\r\n *\r\n * @param token\r\n * @param {\r\n *    amount:  金額\r\n *    account: 轉出帳號\r\n *    cardNo:  Bankee 信用卡卡號 (後端API用來繳費歸戶用)\r\n * }\r\n * @return {\r\n *    code:     0000 表示成功\r\n *    message:  Success!!\r\n * }\r\n */\r\nexport const payCardFee = async (request) => {\r\n  const response = await callAPI('/api/card/v1/payCardFee', request);\r\n  return response;\r\n};\r\n\r\n/**\r\n * 查詢客戶信用卡自動扣繳資訊\r\n * (畫面_信用卡子首頁_自動扣繳 - 1)\r\n *\r\n * @param token\r\n * @return {\r\n *    bank      銀行別                                     IVR9019.DEDUCT-BANK\r\n *    account   扣繳帳號                                   IVR9019.DEDUCT-ACCOUNT-NO\r\n *    isFullPay 是否指定應繳總額 Y/N                        IVR9019.DEDUCT-AUTOPAY-RATE=100 ? \"Y\":\"N\"\r\n *    status    狀態 1 申請 2 生效 3 取消 4 退件 5 待生效   IVR9019.DEDUCT-STATUS\r\n * }\r\n *\r\n */\r\n\r\nexport const getAutoDebits = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getAutoDebits', request);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 查詢客戶的 Bankee 信用卡\r\n *\r\n * @param token\r\n * @return {\r\n * usedCardLimit, // 已使用額度\r\n * isBankeeCard, // true/false\r\n * cards [\r\n *      {\r\n *        cardNo, // 卡號\r\n *      },\r\n *    ]\r\n * }\r\n *\r\n */\r\n\r\nexport const getBankeeCard = async (request) => {\r\n  const {\r\n    data: { cards, usedCardLimit },\r\n  } = await callAPI('/api/card/v1/getCards', request);\r\n  const bankeeCard = cards.find((card) => card.isBankeeCard === 'Y');\r\n  if (!bankeeCard) return null;\r\n  return { cards: [{ cardNo: bankeeCard.cardNo }], usedCardLimit, isBankeeCard: true };\r\n};\r\n"],"mappings":"0PAAA,OAASA,OAAO,KAAQ,iBAAiB,CACzC,MAAOC,oBAAmB,KAAM,gCAAgC,CAEhE;AACA;AACA;AACA,GACA,MAAO,IAAMC,mBAAkB,4FAAG,wKAET,IAAIC,QAAO,CAAC,SAACC,OAAO,QAAKA,QAAO,CAAC,CAAEC,IAAI,CAAEC,SAAS,CAACL,mBAAmB,CAAE,CAAC,CAAC,GAAC,QAA5FM,QAAQ,+CACPA,QAAQ,CAACF,IAAI,wDACrB,kBAJYH,mBAAkB,0CAI9B,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMM,gBAAe,6FAAG,kBAAOC,OAAO,4JACpBT,QAAO,CAAC,8BAA8B,CAAES,OAAO,CAAC,QAAjEF,QAAQ,iDACPA,QAAQ,CAACF,IAAI,0DACrB,kBAHYG,gBAAe,6CAG3B,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAME,cAAa,6FAAG,kBAAOD,OAAO,4JAClBT,QAAO,CAAC,6BAA6B,CAAES,OAAO,CAAC,QAAhEF,QAAQ,iDACPA,QAAQ,CAACF,IAAI,0DACrB,kBAHYK,cAAa,8CAGzB,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,WAAU,6FAAG,kBAAOF,OAAO,4JACfT,QAAO,CAAC,yBAAyB,CAAES,OAAO,CAAC,QAA5DF,QAAQ,iDACPA,QAAQ,0DAChB,kBAHYI,WAAU,8CAGtB,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,IAAMC,cAAa,6FAAG,kBAAOH,OAAO,4JAClBT,QAAO,CAAC,4BAA4B,CAAES,OAAO,CAAC,QAA/DF,QAAQ,iDACPA,QAAQ,CAACF,IAAI,0DACrB,kBAHYO,cAAa,8CAGzB,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,IAAMC,cAAa,6FAAG,kBAAOJ,OAAO,qNAG/BT,QAAO,CAAC,uBAAuB,CAAES,OAAO,CAAC,yEADjDJ,IAAI,CAAIS,KAAK,qBAALA,KAAK,CAAEC,aAAa,qBAAbA,aAAa,CAExBC,UAAU,CAAGF,KAAK,CAACG,IAAI,CAAC,SAACC,IAAI,QAAKA,KAAI,CAACC,YAAY,GAAK,GAAG,GAAC,IAC7DH,UAAU,2DAAS,IAAI,0CACrB,CAAEF,KAAK,CAAE,CAAC,CAAEM,MAAM,CAAEJ,UAAU,CAACI,MAAO,CAAC,CAAC,CAAEL,aAAa,CAAbA,aAAa,CAAEI,YAAY,CAAE,IAAK,CAAC,2DACrF,kBAPYN,cAAa,8CAOzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}