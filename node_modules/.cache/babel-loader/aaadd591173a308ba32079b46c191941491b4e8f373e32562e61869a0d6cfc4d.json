{"ast":null,"code":"import _classCallCheck from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/createClass.js\";/* eslint-disable class-methods-use-this */import CipherUtil from'./CipherUtil';var forge=require('node-forge');var JWEUtil=/*#__PURE__*/function(){function JWEUtil(){_classCallCheck(this,JWEUtil);}_createClass(JWEUtil,[{key:\"getProtected\",value:/**\r\n   * Get protected\r\n   */function getProtected(){return forge.util.encode64(JSON.stringify({enc:'A128CBC-HS256'}));}/**\r\n   * Encrypt AES Key by Server RSA Public Key\r\n   * @param {*} aesKey\r\n   * @param {*} publicKey\r\n   */},{key:\"getEncryptedKey\",value:function getEncryptedKey(aesKey,publicKey){return CipherUtil.encryptRSA(publicKey,aesKey);}/**\r\n   * Get CipherText by ENC, IV and Message\r\n   * @param {*} enc\r\n   * @param {*} iv\r\n   * @param {*} message\r\n   */},{key:\"getCipherText\",value:function getCipherText(enc,iv,message){return CipherUtil.encryptAES(enc,iv,message);}/**\r\n   * Get AAD\r\n   * @param {*} _protected\r\n   */},{key:\"getAad\",value:function getAad(_protected){return Buffer.byteLength(_protected,'ascii');}/**\r\n   * Get Tag\r\n   * @param {*} aesKey\r\n   * @param {*} cipherText\r\n   */},{key:\"getTag\",value:function getTag(aesKey,cipherText){var hmac=CipherUtil.getHMAC(aesKey);var tag=CipherUtil.encryptHMAC(hmac,cipherText);var authTag=forge.util.decode64(tag).substring(0,16);return forge.util.encode64(authTag);}/**\r\n   * Encrypt JWE Message\r\n   * @param {*} publicKeyString\r\n   * @param {*} message\r\n   */},{key:\"encryptJWEMessage\",value:function encryptJWEMessage(publicKeyString,message){var publicKey=CipherUtil.getRSAPublicKeyFromPem(publicKeyString);var contextKey=CipherUtil.generateKey(256);// [本文加密金鑰]加密演算法採 A128CBC-HS256，亂數前 128 Bits 為 HMAC Key，後 128 Bits 為 ENC Key。\nvar iv=CipherUtil.generateKey(128);// iv 的長度固定為 128its\nvar encryptedKey=CipherUtil.encryptRSA(publicKey,forge.util.decode64(contextKey));var enc=CipherUtil.getEnc(contextKey);var ciphertext=CipherUtil.encryptAES(enc,iv,message);var tag=this.getTag(contextKey,message);return{tag:tag,ciphertext:ciphertext,protected:'eyJlbmMiOiJBMTI4Q0JDLUhTMjU2In0=',iv:iv,recipients:[{header:{alg:'RSA-OAEP-256'},encrypted_key:encryptedKey}],unprotected:null};}/**\r\n   * Decrypt JWE Message\r\n   * @param {*} privateKeyString\r\n   * @param {*} message\r\n   */},{key:\"decryptJWEMessage\",value:function decryptJWEMessage(privateKeyString,message){var privateKey=CipherUtil.getRSAPrivateKeyFromPem(privateKeyString);var ciphertext=message.ciphertext;var iv=message.iv;var encryptedKey=message.recipients[0].encrypted_key;var aesKey=CipherUtil.decryptRSA(privateKey,encryptedKey);var enc=CipherUtil.getEnc(forge.util.encode64(aesKey));var request=CipherUtil.decryptAES(enc,iv,ciphertext);return request;// String\n}}]);return JWEUtil;}();export default new JWEUtil();","map":{"version":3,"names":["CipherUtil","forge","require","JWEUtil","util","encode64","JSON","stringify","enc","aesKey","publicKey","encryptRSA","iv","message","encryptAES","_protected","Buffer","byteLength","cipherText","hmac","getHMAC","tag","encryptHMAC","authTag","decode64","substring","publicKeyString","getRSAPublicKeyFromPem","contextKey","generateKey","encryptedKey","getEnc","ciphertext","getTag","protected","recipients","header","alg","encrypted_key","unprotected","privateKeyString","privateKey","getRSAPrivateKeyFromPem","decryptRSA","request","decryptAES"],"sources":["C:/Users/allen/git/app2-webview/src/utilities/JWEUtil.js"],"sourcesContent":["/* eslint-disable class-methods-use-this */\r\nimport CipherUtil from './CipherUtil';\r\n\r\nconst forge = require('node-forge');\r\n\r\nclass JWEUtil {\r\n  /**\r\n   * Get protected\r\n   */\r\n  getProtected() {\r\n    return forge.util.encode64(JSON.stringify({ enc: 'A128CBC-HS256' }));\r\n  }\r\n\r\n  /**\r\n   * Encrypt AES Key by Server RSA Public Key\r\n   * @param {*} aesKey\r\n   * @param {*} publicKey\r\n   */\r\n  getEncryptedKey(aesKey, publicKey) {\r\n    return CipherUtil.encryptRSA(publicKey, aesKey);\r\n  }\r\n\r\n  /**\r\n   * Get CipherText by ENC, IV and Message\r\n   * @param {*} enc\r\n   * @param {*} iv\r\n   * @param {*} message\r\n   */\r\n  getCipherText(enc, iv, message) {\r\n    return CipherUtil.encryptAES(enc, iv, message);\r\n  }\r\n\r\n  /**\r\n   * Get AAD\r\n   * @param {*} _protected\r\n   */\r\n  getAad(_protected) {\r\n    return Buffer.byteLength(_protected, 'ascii');\r\n  }\r\n\r\n  /**\r\n   * Get Tag\r\n   * @param {*} aesKey\r\n   * @param {*} cipherText\r\n   */\r\n  getTag(aesKey, cipherText) {\r\n    const hmac = CipherUtil.getHMAC(aesKey);\r\n    const tag = CipherUtil.encryptHMAC(hmac, cipherText);\r\n    const authTag = forge.util.decode64(tag).substring(0, 16);\r\n    return forge.util.encode64(authTag);\r\n  }\r\n\r\n  /**\r\n   * Encrypt JWE Message\r\n   * @param {*} publicKeyString\r\n   * @param {*} message\r\n   */\r\n  encryptJWEMessage(publicKeyString, message) {\r\n    const publicKey = CipherUtil.getRSAPublicKeyFromPem(publicKeyString);\r\n    const contextKey = CipherUtil.generateKey(256); // [本文加密金鑰]加密演算法採 A128CBC-HS256，亂數前 128 Bits 為 HMAC Key，後 128 Bits 為 ENC Key。\r\n    const iv = CipherUtil.generateKey(128); // iv 的長度固定為 128its\r\n    const encryptedKey = CipherUtil.encryptRSA(publicKey, forge.util.decode64(contextKey));\r\n    const enc = CipherUtil.getEnc(contextKey);\r\n    const ciphertext = CipherUtil.encryptAES(enc, iv, message);\r\n    const tag = this.getTag(contextKey, message);\r\n\r\n    return {\r\n      tag,\r\n      ciphertext,\r\n      protected: 'eyJlbmMiOiJBMTI4Q0JDLUhTMjU2In0=',\r\n      iv,\r\n      recipients: [\r\n        {\r\n          header: {\r\n            alg: 'RSA-OAEP-256',\r\n          },\r\n          encrypted_key: encryptedKey,\r\n        },\r\n      ],\r\n      unprotected: null,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Decrypt JWE Message\r\n   * @param {*} privateKeyString\r\n   * @param {*} message\r\n   */\r\n  decryptJWEMessage(privateKeyString, message) {\r\n    const privateKey = CipherUtil.getRSAPrivateKeyFromPem(privateKeyString);\r\n    const {ciphertext} = message;\r\n    const {iv} = message;\r\n    const encryptedKey = message.recipients[0].encrypted_key;\r\n    const aesKey = CipherUtil.decryptRSA(privateKey, encryptedKey);\r\n    const enc = CipherUtil.getEnc(forge.util.encode64(aesKey));\r\n    const request = CipherUtil.decryptAES(enc, iv, ciphertext);\r\n\r\n    return request; // String\r\n  }\r\n}\r\nexport default new JWEUtil();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}