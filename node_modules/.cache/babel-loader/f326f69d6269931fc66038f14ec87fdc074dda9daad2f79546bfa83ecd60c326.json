{"ast":null,"code":"/* eslint-disable radix,no-restricted-globals */import*as yup from'yup';/* ====================== 錯誤訊息 ====================== */var errorMessage={// 密碼\npasswordRequired:'請輸入您的網銀密碼',passwordIncludeEnglishAndNumber:'密碼需包含英文與數字',passwordCannotBeTheSameAsId:'「密碼」不可與「身分證號碼」相同',passwordWrongLength:'您輸入的網銀密碼長度有誤，請重新輸入',passwordCannotSameCharacter:'「密碼」同一個字母或數字不可超過4次',passwordCannotConsecutive:'「密碼」連續字母或數字不可超過4位',passwordCannotIncludesROCID:'「密碼」不能包含身分證號碼',passwordCannotSameBetweenOld:'新密碼不可與原密碼相同',// 二次確認密碼\nconfirmPasswordRequired:'請再輸入一次新網銀密碼',confirmPasswordNotMatching:'必須與新網銀密碼相同',// 身份證字號\nidentityRequired:'身分證字號尚未輸入，請重新檢查',identityWrongFormat:'輸入錯誤，請重新填寫',// 使用者代號\nuserAccountRequired:'使用者代號尚未輸入，請重新檢查',userAccountWrongFormat:'輸入的使用者代號格式有誤，請重新檢查',userAccountCannotSameCharacter:'使用者代號相同字母或數字不可超過4次',userAccountCannotConsecutive:'使用者代號連續字母或數字不可超過4位',userAccountCannotIncludesROCID:'輸入的使用者代號不能包含身分證號碼',userAccountCannotSameBetweenOld:'新使用者代號不可與原使用者代號相同',// 二次確認使用者代號\nconfirmUserAccountRequired:'請再輸入一次新的使用者代號',confirmUserAccountNotMatching:'必須與新使用者代號相同',// Email 信箱\nemailRequired:'電子信箱尚未填寫，請重新檢查',emailWrongFormat:'電子信箱格式有誤，請重新檢查',// 金額\nmoneyRequired:'輸入金額欄位尚未填寫，請重新檢查',moneyWrongFormat:'輸入金額欄位格式有誤，請重新檢查',// 轉出金額\ntransferAmountRequired:'請輸入轉帳金額',transferAmountCannotExceedLimit:'您輸入金額超過單筆轉帳限額',transferAmountCannotExceedDepositAmount:'您輸入金額超過轉出帳號餘額',transferAmountCannotBeZero:'您輸入金額有誤，請重新輸入',// 轉出行庫\nbankCodeRequired:'您輸入的銀行代碼有誤，請重新輸入',// 銀行帳號\nbankAccountRequired:'請輸入銀行帳號',bankAccountWrongFormat:'轉入帳號格式有誤，請重新檢查',// 轉出帳號\ntransferAccountRequired:'輸入轉出帳號尚未填寫，請重新檢查',transferAccountWrongFormat:'輸入轉出帳號格式有誤，請重新檢查',// 轉入帳號\nreceivingAccountRequired:'請輸入轉入帳號',receivingAccountWrongFormat:'轉入帳號格式有誤，請重新檢查',// 暱稱\nnicknameRequired:'請輸入暱稱',// OTP 驗證碼\notpCodeRequired:'請輸入 OTP 驗證碼',// 無卡提款密碼\nwithdrawPasswordRequired:'請輸入無卡提款密碼',withdrawPasswordLength:'您輸入的無卡提款密碼長度有誤，請重新輸入',withdrawPasswordNumberOnly:'提款密碼僅能使用數字',// 二次確認無卡提款密碼\nconfirmWithdrawPasswordRequired:'請再輸入一次新無卡提款密碼',confirmWithdrawPasswordNotMatching:'必須與新無卡提款密碼相同',// 地址\naddressRequired:'請輸入完整地址',addressWrongFormat:'通訊地址資料格式為中、英文、數字'};/* ====================== 驗證規則 ====================== */ /**\r\n *- 驗證不為0\r\n * @param value\r\n * @returns {boolean}\r\n */var payAmountValidationNotZero=function payAmountValidationNotZero(value){return parseFloat(value)>parseFloat('0');};/**\r\n *-驗證身分證格式\r\n * @param id\r\n * @returns {boolean}\r\n */var checkID=function checkID(id){var tab='ABCDEFGHJKLMNPQRSTUVXYWZIO';var A1=[1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3];var A2=[0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5];var Mx=[9,8,7,6,5,4,3,2,1,1];if(id.length!==10)return false;var i=tab.indexOf(id.charAt(0));if(i===-1)return false;var sum=A1[i]+A2[i]*9;for(i=1;i<10;i+=1){var v=parseInt(id.charAt(i));if(isNaN(v))return false;sum+=v*Mx[i];}if(sum%10!==0)return false;return true;};/**\r\n * 檢核字串是否有重複的英文或數字\r\n * 初始值為超過4次就擋，例如：a11a11a1 (X) bb1bb1b1(X) a11a11aaA (O) bb1bb111(O)\r\n *\r\n * @param value\r\n *            驗證的參數\r\n * @return 檢核結果\r\n */var validateTextRepeat=function validateTextRepeat(value){var repeatCount=0;var maxRepeatCount=5;var charArray=value.split('');for(var i=0;i<value.length;i+=1){repeatCount=0;for(var j=0;j<value.length;j+=1){if(charArray[i]===charArray[j]){repeatCount+=1;}if(repeatCount===maxRepeatCount){return false;}}}return true;};/**\r\n * 檢核字串是否有連續順序的字串\r\n * 初始值為超過4次就擋，例如：12345 (X) 1234(O) ABCDE (X) ABCDA(O)\r\n *\r\n * @param value\r\n *            驗證的參數\r\n * @return 檢核結果\r\n */var validateTextContinuous=function validateTextContinuous(password){var isRepeat=false;var repeat={};for(var index=0;index<password.length;index++){var preIndex=index-1<0?0:index-1;var preStr=repeat[preIndex]||'';var preStrLastLetter=preStr[preStr.length-1]||'';var currentLetter=password[index];var preStrLastLetterCharCode=preStrLastLetter.charCodeAt();var curCharCode=currentLetter.charCodeAt();if(curCharCode-preStrLastLetterCharCode===1// 数字或字母递增\n){if(preStr.length<=1){repeat[index]=\"\".concat(preStr).concat(currentLetter);}else{var start=0;for(var j=preStr.length-2;j>0;j--){if(preStr[j+1].charCodeAt()-preStr[j].charCodeAt()!==1){start=j+1;break;}}var result=\"\".concat(preStr.substring(start)).concat(currentLetter);repeat[index]=result;if(result.length>=5){isRepeat=true;}}}else if(currentLetter===preStrLastLetter){// 数字或者字母重复\nvar repeatStart=0;for(var _j=preStr.length-1;_j>0;_j--){if(preStr[_j]!==currentLetter){repeatStart=_j+1;break;}}var _result=\"\".concat(preStr.substring(repeatStart)).concat(currentLetter);repeat[index]=_result;if(_result.length>=5){isRepeat=true;}}else if(preStrLastLetterCharCode-curCharCode===1){// 数字或字母递减\nif(preStr.length<=1){repeat[index]=\"\".concat(preStr).concat(currentLetter);}else{var _start=0;for(var _j2=preStr.length-2;_j2>0;_j2--){if(preStr[_j2].charCodeAt()-preStr[_j2+1].charCodeAt()!==1){_start=_j2+1;break;}}var _result2=\"\".concat(preStr.substring(_start)).concat(currentLetter);repeat[index]=_result2;if(_result2.length>=5){isRepeat=true;}}}else{repeat[index]=currentLetter;}}return!isRepeat;};/**\r\n * 檢核字串是否包含身分證字號字串\r\n *\r\n * @param value\r\n *            驗證的參數\r\n * @return 檢核結果\r\n */var validateIncludesROCID=function validateIncludesROCID(value){return!/[a-zA-Z][12]\\d{8}/.test(value);};/* ==================== 頁面驗證項目 ==================== */ /**\r\n *- 共通驗證\r\n */ // 密碼驗證\nexport var passwordValidation=function passwordValidation(){return yup.string().matches(/^(?=.*[a-zA-Z]+)(?=.*[0-9]+)[a-zA-Z0-9]+$/,errorMessage.passwordIncludeEnglishAndNumber).required(errorMessage.passwordRequired).min(8,errorMessage.passwordWrongLength).max(20,errorMessage.passwordWrongLength).test('check-password-text-repeat',errorMessage.passwordCannotSameCharacter,function(value){return validateTextRepeat(value);}).test('check-password-text-continuous',errorMessage.passwordCannotConsecutive,function(value){return validateTextContinuous(value);}).test('check-password-includes-ROCID',errorMessage.passwordCannotIncludesROCID,function(value){return validateIncludesROCID(value);});};// 新密碼驗證\nexport var newPasswordValidation=function newPasswordValidation(passwordKeyName){return yup.string().matches(/^(?=.*[a-zA-Z]+)(?=.*[0-9]+)[a-zA-Z0-9]+$/,errorMessage.passwordIncludeEnglishAndNumber).required(errorMessage.passwordRequired).min(8,errorMessage.passwordWrongLength).max(20,errorMessage.passwordWrongLength).test('check-password-text-repeat',errorMessage.passwordCannotSameCharacter,function(value){return validateTextRepeat(value);}).test('check-password-text-continuous',errorMessage.passwordCannotConsecutive,function(value){return validateTextContinuous(value);}).test('check-password-includes-ROCID',errorMessage.passwordCannotIncludesROCID,function(value){return validateIncludesROCID(value);}).notOneOf([yup.ref(passwordKeyName),null],errorMessage.passwordCannotSameBetweenOld);};// 二次確認網銀密碼\nexport var confirmPasswordValidation=function confirmPasswordValidation(passwordKeyName){return yup.string().required(errorMessage.confirmPasswordRequired).oneOf([yup.ref(passwordKeyName),null],errorMessage.confirmPasswordNotMatching);};// 身分證\nexport var identityValidation=function identityValidation(){return yup.string().required(errorMessage.identityRequired).test('check-custID',errorMessage.identityWrongFormat,function(value){return checkID(value);});};// 使用者代號\nexport var accountValidation=function accountValidation(){return yup.string().required(errorMessage.userAccountRequired).matches(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){6,20}$/,errorMessage.userAccountWrongFormat).test('check-user-account-text-repeat',errorMessage.userAccountCannotSameCharacter,function(value){return validateTextRepeat(value);}).test('check-user-account-text-continuous',errorMessage.userAccountCannotConsecutive,function(value){return validateTextContinuous(value);}).test('check-user-account-includes-ROCID',errorMessage.userAccountCannotIncludesROCID,function(value){return validateIncludesROCID(value);})// .min(6, errorMessage.userAccountWrongLength).max(20, errorMessage.userAccountWrongLength),\n;};// 新使用者代號\nexport var newAccountValidation=function newAccountValidation(accountKeyName){return yup.string().required(errorMessage.userAccountRequired).matches(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){6,20}$/,errorMessage.userAccountWrongFormat).test('check-user-account-text-repeat',errorMessage.userAccountCannotSameCharacter,function(value){return validateTextRepeat(value);}).test('check-user-account-text-continuous',errorMessage.userAccountCannotConsecutive,function(value){return validateTextContinuous(value);}).test('check-user-account-includes-ROCID',errorMessage.userAccountCannotIncludesROCID,function(value){return validateIncludesROCID(value);}).notOneOf([yup.ref(accountKeyName),null],errorMessage.userAccountCannotSameBetweenOld)// .min(6, errorMessage.userAccountWrongLength).max(20, errorMessage.userAccountWrongLength),\n;};// 二次確認使用者代號\nexport var confirmAccountValidation=function confirmAccountValidation(accountKeyName){return yup.string().required(errorMessage.confirmUserAccountRequired).oneOf([yup.ref(accountKeyName),null],errorMessage.confirmUserAccountNotMatching);};// 銀行帳號\nexport var bankAccountValidation=function bankAccountValidation(){return yup.string().required(errorMessage.bankAccountRequired).min(10,errorMessage.bankAccountWrongFormat).max(16,errorMessage.bankAccountWrongFormat);};// 轉入帳號\nexport var receivingAccountValidation=function receivingAccountValidation(){return yup.string().required(errorMessage.receivingAccountRequired).min(10,errorMessage.receivingAccountWrongFormat).max(16,errorMessage.receivingAccountWrongFormat);};// 轉出金額 (參數 - depositAmount: 帳戶餘額, perTxnLimit: 單筆轉帳限額)\nexport var transferAmountValidation=function transferAmountValidation(depositAmount,perTxnLimit){return yup.string().required(errorMessage.transferAmountRequired).test('test',errorMessage.transferAmountCannotBeZero,function(value){return!(parseInt(value,10)<=0);}).test('test',errorMessage.transferAmountCannotExceedLimit,function(value){return!(parseInt(value,10)>(perTxnLimit!==null&&perTxnLimit!==void 0?perTxnLimit:50000));}).test('test',errorMessage.transferAmountCannotExceedDepositAmount,function(value){return!(parseInt(value,10)>depositAmount);});};// 銀行代碼\nexport var bankCodeValidation=function bankCodeValidation(){return yup.object({bankNo:yup.string().required(errorMessage.bankCodeRequired),bankName:yup.string().required(errorMessage.bankCodeRequired)}).nullable(true).required(errorMessage.bankCodeRequired);};// 暱稱\nexport var nicknameValidation=function nicknameValidation(){return yup.string().required(errorMessage.nicknameRequired);};// OTP 驗證碼\nexport var otpCodeValidation=function otpCodeValidation(){return yup.string().required(errorMessage.otpCodeRequired);};// 地址\nexport var addressValidation=function addressValidation(){return yup.string().required(errorMessage.addressRequired).matches(/^[a-zA-Z0-9_\\u4e00-\\u9fa5]+$/,errorMessage.addressWrongFormat);};// 無卡提款密碼驗證\nexport var cardlessWithdrawPasswordValidation=function cardlessWithdrawPasswordValidation(){return yup.string().required(errorMessage.withdrawPasswordRequired).min(4,errorMessage.withdrawPasswordLength).max(12,errorMessage.withdrawPasswordLength).matches(/^[0-9]*$/,errorMessage.withdrawPasswordNumberOnly);};// 二次確認無卡提款密碼\nexport var confirmCardlessWithdrawPasswordValidation=function confirmCardlessWithdrawPasswordValidation(passwordKeyName){return yup.string().required(errorMessage.confirmWithdrawPasswordRequired).oneOf([yup.ref(passwordKeyName),null],errorMessage.confirmWithdrawPasswordNotMatching);};/**\r\n *- 信用卡繳款驗證\r\n */ // 繳款金額驗證\nexport var payAmountValidation=function payAmountValidation(){return yup.number().when('payMoney',{is:3,then:yup.number(errorMessage.moneyWrongFormat).required(errorMessage.moneyRequired).test('payAmount-notzero',errorMessage.moneyWrongFormat,function(value){return payAmountValidationNotZero(value);})});};// 轉出帳號行庫驗證\nexport var billPayBankCodeValidation=function billPayBankCodeValidation(){return yup.object().when('payType',{is:2,then:bankCodeValidation()// then: yup.object({\n//   bankCode: yup.string().required(errorMessage.bankCodeRequired),\n//   bankName: yup.string().required(errorMessage.bankCodeRequired),\n// }).nullable(true).required(errorMessage.bankCodeRequired),\n// then: yup.string().test('otherBankCode-notspace', errorMessage.bankCodeRequired, (value) => value !== ''),\n});};// 轉出帳號驗證\nexport var transferAccountValidation=function transferAccountValidation(){return yup.string().when('payType',{is:2,then:yup.string(errorMessage.transferAccountRequired).required(errorMessage.transferAccountRequired).max(16,errorMessage.transferAccountWrongFormat)});};// Email 驗證\nexport var emailValidation=function emailValidation(){return yup.string().when('sendEmail',{is:true,then:yup.string().email(errorMessage.emailWrongFormat).required(errorMessage.emailRequired)});};","map":{"version":3,"names":["yup","errorMessage","passwordRequired","passwordIncludeEnglishAndNumber","passwordCannotBeTheSameAsId","passwordWrongLength","passwordCannotSameCharacter","passwordCannotConsecutive","passwordCannotIncludesROCID","passwordCannotSameBetweenOld","confirmPasswordRequired","confirmPasswordNotMatching","identityRequired","identityWrongFormat","userAccountRequired","userAccountWrongFormat","userAccountCannotSameCharacter","userAccountCannotConsecutive","userAccountCannotIncludesROCID","userAccountCannotSameBetweenOld","confirmUserAccountRequired","confirmUserAccountNotMatching","emailRequired","emailWrongFormat","moneyRequired","moneyWrongFormat","transferAmountRequired","transferAmountCannotExceedLimit","transferAmountCannotExceedDepositAmount","transferAmountCannotBeZero","bankCodeRequired","bankAccountRequired","bankAccountWrongFormat","transferAccountRequired","transferAccountWrongFormat","receivingAccountRequired","receivingAccountWrongFormat","nicknameRequired","otpCodeRequired","withdrawPasswordRequired","withdrawPasswordLength","withdrawPasswordNumberOnly","confirmWithdrawPasswordRequired","confirmWithdrawPasswordNotMatching","addressRequired","addressWrongFormat","payAmountValidationNotZero","value","parseFloat","checkID","id","tab","A1","A2","Mx","length","i","indexOf","charAt","sum","v","parseInt","isNaN","validateTextRepeat","repeatCount","maxRepeatCount","charArray","split","j","validateTextContinuous","password","isRepeat","repeat","index","preIndex","preStr","preStrLastLetter","currentLetter","preStrLastLetterCharCode","charCodeAt","curCharCode","start","result","substring","repeatStart","validateIncludesROCID","test","passwordValidation","string","matches","required","min","max","newPasswordValidation","passwordKeyName","notOneOf","ref","confirmPasswordValidation","oneOf","identityValidation","accountValidation","newAccountValidation","accountKeyName","confirmAccountValidation","bankAccountValidation","receivingAccountValidation","transferAmountValidation","depositAmount","perTxnLimit","bankCodeValidation","object","bankNo","bankName","nullable","nicknameValidation","otpCodeValidation","addressValidation","cardlessWithdrawPasswordValidation","confirmCardlessWithdrawPasswordValidation","payAmountValidation","number","when","is","then","billPayBankCodeValidation","transferAccountValidation","emailValidation","email"],"sources":["C:/Users/allen/git/app2-webview/src/utilities/validation.js"],"sourcesContent":["/* eslint-disable radix,no-restricted-globals */\r\nimport * as yup from 'yup';\r\n\r\n/* ====================== 錯誤訊息 ====================== */\r\nconst errorMessage = {\r\n  // 密碼\r\n  passwordRequired: '請輸入您的網銀密碼',\r\n  passwordIncludeEnglishAndNumber: '密碼需包含英文與數字',\r\n  passwordCannotBeTheSameAsId: '「密碼」不可與「身分證號碼」相同',\r\n  passwordWrongLength: '您輸入的網銀密碼長度有誤，請重新輸入',\r\n  passwordCannotSameCharacter: '「密碼」同一個字母或數字不可超過4次',\r\n  passwordCannotConsecutive: '「密碼」連續字母或數字不可超過4位',\r\n  passwordCannotIncludesROCID: '「密碼」不能包含身分證號碼',\r\n  passwordCannotSameBetweenOld: '新密碼不可與原密碼相同',\r\n\r\n  // 二次確認密碼\r\n  confirmPasswordRequired: '請再輸入一次新網銀密碼',\r\n  confirmPasswordNotMatching: '必須與新網銀密碼相同',\r\n\r\n  // 身份證字號\r\n  identityRequired: '身分證字號尚未輸入，請重新檢查',\r\n  identityWrongFormat: '輸入錯誤，請重新填寫',\r\n\r\n  // 使用者代號\r\n  userAccountRequired: '使用者代號尚未輸入，請重新檢查',\r\n  userAccountWrongFormat: '輸入的使用者代號格式有誤，請重新檢查',\r\n  userAccountCannotSameCharacter: '使用者代號相同字母或數字不可超過4次',\r\n  userAccountCannotConsecutive: '使用者代號連續字母或數字不可超過4位',\r\n  userAccountCannotIncludesROCID: '輸入的使用者代號不能包含身分證號碼',\r\n  userAccountCannotSameBetweenOld: '新使用者代號不可與原使用者代號相同',\r\n\r\n  // 二次確認使用者代號\r\n  confirmUserAccountRequired: '請再輸入一次新的使用者代號',\r\n  confirmUserAccountNotMatching: '必須與新使用者代號相同',\r\n\r\n  // Email 信箱\r\n  emailRequired: '電子信箱尚未填寫，請重新檢查',\r\n  emailWrongFormat: '電子信箱格式有誤，請重新檢查',\r\n\r\n  // 金額\r\n  moneyRequired: '輸入金額欄位尚未填寫，請重新檢查',\r\n  moneyWrongFormat: '輸入金額欄位格式有誤，請重新檢查',\r\n\r\n  // 轉出金額\r\n  transferAmountRequired: '請輸入轉帳金額',\r\n  transferAmountCannotExceedLimit: '您輸入金額超過單筆轉帳限額',\r\n  transferAmountCannotExceedDepositAmount: '您輸入金額超過轉出帳號餘額',\r\n  transferAmountCannotBeZero: '您輸入金額有誤，請重新輸入',\r\n\r\n  // 轉出行庫\r\n  bankCodeRequired: '您輸入的銀行代碼有誤，請重新輸入',\r\n\r\n  // 銀行帳號\r\n  bankAccountRequired: '請輸入銀行帳號',\r\n  bankAccountWrongFormat: '轉入帳號格式有誤，請重新檢查',\r\n\r\n  // 轉出帳號\r\n  transferAccountRequired: '輸入轉出帳號尚未填寫，請重新檢查',\r\n  transferAccountWrongFormat: '輸入轉出帳號格式有誤，請重新檢查',\r\n\r\n  // 轉入帳號\r\n  receivingAccountRequired: '請輸入轉入帳號',\r\n  receivingAccountWrongFormat: '轉入帳號格式有誤，請重新檢查',\r\n\r\n  // 暱稱\r\n  nicknameRequired: '請輸入暱稱',\r\n\r\n  // OTP 驗證碼\r\n  otpCodeRequired: '請輸入 OTP 驗證碼',\r\n\r\n  // 無卡提款密碼\r\n  withdrawPasswordRequired: '請輸入無卡提款密碼',\r\n  withdrawPasswordLength: '您輸入的無卡提款密碼長度有誤，請重新輸入',\r\n  withdrawPasswordNumberOnly: '提款密碼僅能使用數字',\r\n\r\n  // 二次確認無卡提款密碼\r\n  confirmWithdrawPasswordRequired: '請再輸入一次新無卡提款密碼',\r\n  confirmWithdrawPasswordNotMatching: '必須與新無卡提款密碼相同',\r\n\r\n  // 地址\r\n  addressRequired: '請輸入完整地址',\r\n  addressWrongFormat: '通訊地址資料格式為中、英文、數字',\r\n};\r\n\r\n/* ====================== 驗證規則 ====================== */\r\n/**\r\n *- 驗證不為0\r\n * @param value\r\n * @returns {boolean}\r\n */\r\nconst payAmountValidationNotZero = (value) => (parseFloat(value) > parseFloat('0'));\r\n\r\n/**\r\n *-驗證身分證格式\r\n * @param id\r\n * @returns {boolean}\r\n */\r\nconst checkID = (id) => {\r\n  const tab = 'ABCDEFGHJKLMNPQRSTUVXYWZIO';\r\n  const A1 = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3];\r\n  const A2 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5];\r\n  const Mx = [9, 8, 7, 6, 5, 4, 3, 2, 1, 1];\r\n\r\n  if (id.length !== 10) return false;\r\n  let i = tab.indexOf(id.charAt(0));\r\n  if (i === -1) return false;\r\n  let sum = A1[i] + A2[i] * 9;\r\n\r\n  for (i = 1; i < 10; i += 1) {\r\n    const v = parseInt(id.charAt(i));\r\n    if (isNaN(v)) return false;\r\n    sum += v * Mx[i];\r\n  }\r\n  if (sum % 10 !== 0) return false;\r\n  return true;\r\n};\r\n\r\n/**\r\n * 檢核字串是否有重複的英文或數字\r\n * 初始值為超過4次就擋，例如：a11a11a1 (X) bb1bb1b1(X) a11a11aaA (O) bb1bb111(O)\r\n *\r\n * @param value\r\n *            驗證的參數\r\n * @return 檢核結果\r\n */\r\nconst validateTextRepeat = (value) => {\r\n  let repeatCount = 0;\r\n  const maxRepeatCount = 5;\r\n  const charArray = value.split('');\r\n  for (let i = 0; i < value.length; i += 1) {\r\n    repeatCount = 0;\r\n    for (let j = 0; j < value.length; j += 1) {\r\n      if (charArray[i] === charArray[j]) {\r\n        repeatCount += 1;\r\n      }\r\n      if (repeatCount === maxRepeatCount) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * 檢核字串是否有連續順序的字串\r\n * 初始值為超過4次就擋，例如：12345 (X) 1234(O) ABCDE (X) ABCDA(O)\r\n *\r\n * @param value\r\n *            驗證的參數\r\n * @return 檢核結果\r\n */\r\nconst validateTextContinuous = (password) => {\r\n  let isRepeat = false;\r\n  const repeat = {};\r\n  for (let index = 0; index < password.length; index++) {\r\n    const preIndex = index - 1 < 0 ? 0 : index - 1;\r\n    const preStr = repeat[preIndex] || '';\r\n    const preStrLastLetter = preStr[preStr.length - 1] || '';\r\n    const currentLetter = password[index];\r\n    const preStrLastLetterCharCode = preStrLastLetter.charCodeAt();\r\n    const curCharCode = currentLetter.charCodeAt();\r\n    if (\r\n      curCharCode - preStrLastLetterCharCode === 1 // 数字或字母递增\r\n    ) {\r\n      if (preStr.length <= 1) {\r\n        repeat[index] = `${preStr}${currentLetter}`;\r\n      } else {\r\n        let start = 0;\r\n        for (let j = preStr.length - 2; j > 0; j--) {\r\n          if (preStr[j + 1].charCodeAt() - preStr[j].charCodeAt() !== 1) {\r\n            start = j + 1;\r\n            break;\r\n          }\r\n        }\r\n        const result = `${preStr.substring(start)}${currentLetter}`;\r\n        repeat[index] = result;\r\n        if (result.length >= 5) {\r\n          isRepeat = true;\r\n        }\r\n      }\r\n    } else if (currentLetter === preStrLastLetter) { // 数字或者字母重复\r\n      let repeatStart = 0;\r\n      for (let j = preStr.length - 1; j > 0; j--) {\r\n        if (preStr[j] !== currentLetter) {\r\n          repeatStart = j + 1;\r\n          break;\r\n        }\r\n      }\r\n      const result = `${preStr.substring(repeatStart)}${currentLetter}`;\r\n      repeat[index] = result;\r\n      if (result.length >= 5) {\r\n        isRepeat = true;\r\n      }\r\n    } else if (preStrLastLetterCharCode - curCharCode === 1) { // 数字或字母递减\r\n      if (preStr.length <= 1) {\r\n        repeat[index] = `${preStr}${currentLetter}`;\r\n      } else {\r\n        let start = 0;\r\n        for (let j = preStr.length - 2; j > 0; j--) {\r\n          if (preStr[j].charCodeAt() - preStr[j + 1].charCodeAt() !== 1) {\r\n            start = j + 1;\r\n            break;\r\n          }\r\n        }\r\n        const result = `${preStr.substring(start)}${currentLetter}`;\r\n        repeat[index] = result;\r\n        if (result.length >= 5) {\r\n          isRepeat = true;\r\n        }\r\n      }\r\n    } else {\r\n      repeat[index] = currentLetter;\r\n    }\r\n  }\r\n  return !isRepeat;\r\n};\r\n\r\n/**\r\n * 檢核字串是否包含身分證字號字串\r\n *\r\n * @param value\r\n *            驗證的參數\r\n * @return 檢核結果\r\n */\r\nconst validateIncludesROCID = (value) => !/[a-zA-Z][12]\\d{8}/.test(value);\r\n\r\n/* ==================== 頁面驗證項目 ==================== */\r\n/**\r\n *- 共通驗證\r\n */\r\n// 密碼驗證\r\nexport const passwordValidation = () => (\r\n  yup.string().matches(/^(?=.*[a-zA-Z]+)(?=.*[0-9]+)[a-zA-Z0-9]+$/, errorMessage.passwordIncludeEnglishAndNumber)\r\n    .required(errorMessage.passwordRequired).min(8, errorMessage.passwordWrongLength)\r\n    .max(20, errorMessage.passwordWrongLength)\r\n    .test(\r\n      'check-password-text-repeat',\r\n      errorMessage.passwordCannotSameCharacter,\r\n      (value) => validateTextRepeat(value),\r\n    )\r\n    .test(\r\n      'check-password-text-continuous',\r\n      errorMessage.passwordCannotConsecutive,\r\n      (value) => validateTextContinuous(value),\r\n    )\r\n    .test(\r\n      'check-password-includes-ROCID',\r\n      errorMessage.passwordCannotIncludesROCID,\r\n      (value) => validateIncludesROCID(value),\r\n    )\r\n);\r\n\r\n// 新密碼驗證\r\nexport const newPasswordValidation = (passwordKeyName) => (\r\n  yup.string().matches(/^(?=.*[a-zA-Z]+)(?=.*[0-9]+)[a-zA-Z0-9]+$/, errorMessage.passwordIncludeEnglishAndNumber)\r\n    .required(errorMessage.passwordRequired).min(8, errorMessage.passwordWrongLength)\r\n    .max(20, errorMessage.passwordWrongLength)\r\n    .test(\r\n      'check-password-text-repeat',\r\n      errorMessage.passwordCannotSameCharacter,\r\n      (value) => validateTextRepeat(value),\r\n    )\r\n    .test(\r\n      'check-password-text-continuous',\r\n      errorMessage.passwordCannotConsecutive,\r\n      (value) => validateTextContinuous(value),\r\n    )\r\n    .test(\r\n      'check-password-includes-ROCID',\r\n      errorMessage.passwordCannotIncludesROCID,\r\n      (value) => validateIncludesROCID(value),\r\n    )\r\n    .notOneOf([yup.ref(passwordKeyName), null], errorMessage.passwordCannotSameBetweenOld)\r\n);\r\n\r\n// 二次確認網銀密碼\r\nexport const confirmPasswordValidation = (passwordKeyName) => (\r\n  yup.string()\r\n    .required(errorMessage.confirmPasswordRequired)\r\n    .oneOf([yup.ref(passwordKeyName), null], errorMessage.confirmPasswordNotMatching)\r\n);\r\n\r\n// 身分證\r\nexport const identityValidation = () => (\r\n  yup.string().required(errorMessage.identityRequired)\r\n    .test(\r\n      'check-custID',\r\n      errorMessage.identityWrongFormat,\r\n      (value) => checkID(value),\r\n    )\r\n);\r\n\r\n// 使用者代號\r\nexport const accountValidation = () => (\r\n  yup.string()\r\n    .required(errorMessage.userAccountRequired)\r\n    .matches(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){6,20}$/, errorMessage.userAccountWrongFormat)\r\n    .test(\r\n      'check-user-account-text-repeat',\r\n      errorMessage.userAccountCannotSameCharacter,\r\n      (value) => validateTextRepeat(value),\r\n    )\r\n    .test(\r\n      'check-user-account-text-continuous',\r\n      errorMessage.userAccountCannotConsecutive,\r\n      (value) => validateTextContinuous(value),\r\n    )\r\n    .test(\r\n      'check-user-account-includes-ROCID',\r\n      errorMessage.userAccountCannotIncludesROCID,\r\n      (value) => validateIncludesROCID(value),\r\n    )\r\n  // .min(6, errorMessage.userAccountWrongLength).max(20, errorMessage.userAccountWrongLength),\r\n);\r\n\r\n// 新使用者代號\r\nexport const newAccountValidation = (accountKeyName) => (\r\n  yup.string()\r\n    .required(errorMessage.userAccountRequired)\r\n    .matches(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){6,20}$/, errorMessage.userAccountWrongFormat)\r\n    .test(\r\n      'check-user-account-text-repeat',\r\n      errorMessage.userAccountCannotSameCharacter,\r\n      (value) => validateTextRepeat(value),\r\n    )\r\n    .test(\r\n      'check-user-account-text-continuous',\r\n      errorMessage.userAccountCannotConsecutive,\r\n      (value) => validateTextContinuous(value),\r\n    )\r\n    .test(\r\n      'check-user-account-includes-ROCID',\r\n      errorMessage.userAccountCannotIncludesROCID,\r\n      (value) => validateIncludesROCID(value),\r\n    )\r\n    .notOneOf([yup.ref(accountKeyName), null], errorMessage.userAccountCannotSameBetweenOld)\r\n// .min(6, errorMessage.userAccountWrongLength).max(20, errorMessage.userAccountWrongLength),\r\n);\r\n\r\n// 二次確認使用者代號\r\nexport const confirmAccountValidation = (accountKeyName) => (\r\n  yup.string()\r\n    .required(errorMessage.confirmUserAccountRequired)\r\n    .oneOf([yup.ref(accountKeyName), null], errorMessage.confirmUserAccountNotMatching)\r\n);\r\n\r\n// 銀行帳號\r\nexport const bankAccountValidation = () => (\r\n  yup.string()\r\n    .required(errorMessage.bankAccountRequired)\r\n    .min(10, errorMessage.bankAccountWrongFormat).max(16, errorMessage.bankAccountWrongFormat)\r\n);\r\n\r\n// 轉入帳號\r\nexport const receivingAccountValidation = () => (\r\n  yup.string()\r\n    .required(errorMessage.receivingAccountRequired)\r\n    .min(10, errorMessage.receivingAccountWrongFormat).max(16, errorMessage.receivingAccountWrongFormat)\r\n);\r\n\r\n// 轉出金額 (參數 - depositAmount: 帳戶餘額, perTxnLimit: 單筆轉帳限額)\r\nexport const transferAmountValidation = (depositAmount, perTxnLimit) => (\r\n  yup.string()\r\n    .required(errorMessage.transferAmountRequired)\r\n    .test('test', errorMessage.transferAmountCannotBeZero, (value) => !(parseInt(value, 10) <= 0))\r\n    .test('test', errorMessage.transferAmountCannotExceedLimit, (value) => !(parseInt(value, 10) > (perTxnLimit ?? 50000)))\r\n    .test('test', errorMessage.transferAmountCannotExceedDepositAmount, (value) => !(parseInt(value, 10) > depositAmount))\r\n);\r\n\r\n// 銀行代碼\r\nexport const bankCodeValidation = () => (\r\n  yup.object({\r\n    bankNo: yup.string().required(errorMessage.bankCodeRequired),\r\n    bankName: yup.string().required(errorMessage.bankCodeRequired),\r\n  }).nullable(true).required(errorMessage.bankCodeRequired)\r\n);\r\n\r\n// 暱稱\r\nexport const nicknameValidation = () => (\r\n  yup.string()\r\n    .required(errorMessage.nicknameRequired)\r\n);\r\n\r\n// OTP 驗證碼\r\nexport const otpCodeValidation = () => (\r\n  yup.string()\r\n    .required(errorMessage.otpCodeRequired)\r\n);\r\n\r\n// 地址\r\nexport const addressValidation = () => (\r\n  yup.string()\r\n    .required(errorMessage.addressRequired)\r\n    .matches(/^[a-zA-Z0-9_\\u4e00-\\u9fa5]+$/, errorMessage.addressWrongFormat)\r\n);\r\n\r\n// 無卡提款密碼驗證\r\nexport const cardlessWithdrawPasswordValidation = () => (\r\n  yup.string()\r\n    .required(errorMessage.withdrawPasswordRequired)\r\n    .min(4, errorMessage.withdrawPasswordLength)\r\n    .max(12, errorMessage.withdrawPasswordLength)\r\n    .matches(/^[0-9]*$/, errorMessage.withdrawPasswordNumberOnly)\r\n);\r\n\r\n// 二次確認無卡提款密碼\r\nexport const confirmCardlessWithdrawPasswordValidation = (passwordKeyName) => (\r\n  yup.string()\r\n    .required(errorMessage.confirmWithdrawPasswordRequired)\r\n    .oneOf([yup.ref(passwordKeyName), null], errorMessage.confirmWithdrawPasswordNotMatching)\r\n);\r\n\r\n/**\r\n *- 信用卡繳款驗證\r\n */\r\n// 繳款金額驗證\r\nexport const payAmountValidation = () => (\r\n  yup.number()\r\n    .when('payMoney', {\r\n      is: 3,\r\n      then: yup.number(errorMessage.moneyWrongFormat)\r\n        .required(errorMessage.moneyRequired)\r\n        .test('payAmount-notzero', errorMessage.moneyWrongFormat, (value) => payAmountValidationNotZero(value)),\r\n    })\r\n);\r\n\r\n// 轉出帳號行庫驗證\r\nexport const billPayBankCodeValidation = () => (\r\n  yup.object()\r\n    .when('payType', {\r\n      is: 2,\r\n      then: bankCodeValidation(),\r\n      // then: yup.object({\r\n      //   bankCode: yup.string().required(errorMessage.bankCodeRequired),\r\n      //   bankName: yup.string().required(errorMessage.bankCodeRequired),\r\n      // }).nullable(true).required(errorMessage.bankCodeRequired),\r\n      // then: yup.string().test('otherBankCode-notspace', errorMessage.bankCodeRequired, (value) => value !== ''),\r\n    })\r\n);\r\n\r\n// 轉出帳號驗證\r\nexport const transferAccountValidation = () => (\r\n  yup.string()\r\n    .when('payType', {\r\n      is: 2,\r\n      then: yup.string(errorMessage.transferAccountRequired)\r\n        .required(errorMessage.transferAccountRequired).max(16, errorMessage.transferAccountWrongFormat),\r\n    })\r\n);\r\n\r\n// Email 驗證\r\nexport const emailValidation = () => (\r\n  yup.string()\r\n    .when('sendEmail', {\r\n      is: true,\r\n      then: yup.string().email(errorMessage.emailWrongFormat).required(errorMessage.emailRequired),\r\n    })\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}