{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import{EditIcon,PersonalIcon}from'assets/images/icons';import{toHalfWidth}from'utilities/Generator';import AvatarWrapper from'./avatar.style';/**\r\n * Avatar 組件封裝用戶頭像\r\n * @param {{\r\n *   memberId: String,\r\n *   name: String,\r\n *   small: Boolean,\r\n *   editable: Boolean,\r\n *   onNewPhotoLoaded: Function\r\n *   defaultImage: *\r\n * }}\r\n * - memberId: 會員UUID。\r\n * - name: 若無圖片時，可傳入用戶名稱，預設取首字為底。\r\n * - small: 表示顯示小圖。此模示不會出現變更圖示的按鈕。\r\n * - editable: 當此變數非 null 時，表示強制控制變更按鈕出現與否。\r\n * - onNewPhotoLoaded: 當使用者更換圖片時觸發的事件。當 small 為 true 時，不會出現變更圖示的按鈕。\r\n * - defaultImage: 預設大頭貼\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Avatar=function Avatar(_ref){var memberId=_ref.memberId,name=_ref.name,small=_ref.small,editable=_ref.editable,onNewPhotoLoaded=_ref.onNewPhotoLoaded,defaultImage=_ref.defaultImage;var _useState=useState(),_useState2=_slicedToArray(_useState,2),src=_useState2[0],setSrc=_useState2[1];// 會員頭像的圖片路徑。\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),preview=_useState4[0],setPreview=_useState4[1];// 上傳的照片轉成 base64 格式\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showDefault=_useState6[0],setShowDefault=_useState6[1];var renderPhoto=function renderPhoto(){return/*#__PURE__*/_jsx(\"img\",{src:preview||src,alt:name||'avatar',onError:function onError(){return defaultImage?setPreview(defaultImage):setShowDefault(true);}});};var renderDefaultBackground=function renderDefaultBackground(){return/*#__PURE__*/_jsx(\"div\",{className:\"default\",children:name?/*#__PURE__*/_jsx(\"span\",{children:toHalfWidth(name.substring(0,1))}):/*#__PURE__*/_jsx(PersonalIcon,{})});};var onImgChangeHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event){var photo,reader;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:photo=event.target.files[0];reader=new FileReader();reader.readAsDataURL(photo);reader.onloadend=function(e){// TODO 一律轉為 jpg 格式。\nvar imgData=e.currentTarget.result;setPreview(imgData);setShowDefault(false);// 將使用者指定的新圖片回傳給使用此元件的程式。\nif(onNewPhotoLoaded)onNewPhotoLoaded(imgData);if(memberId)sessionStorage.setItem(\"Avator_\".concat(memberId),imgData);};case 4:case\"end\":return _context.stop();}}},_callee);}));return function onImgChangeHandler(_x){return _ref2.apply(this,arguments);};}();var renderEditButton=function renderEditButton(){return/*#__PURE__*/_jsxs(\"label\",{className:\"editButton\",htmlFor:\"imageInput\",children:[/*#__PURE__*/_jsx(EditIcon,{}),/*#__PURE__*/_jsx(\"input\",{id:\"imageInput\",type:\"file\",accept:\"image/*\",onChange:onImgChangeHandler})]});};useEffect(function(){// 從本地 Cache 取出圖像。\nif(memberId){var imgData=sessionStorage.getItem(\"Avator_\".concat(memberId));if(imgData)setPreview(imgData);if(memberId){var defaultSrc=\"\".concat(process.env.REACT_APP_AVATAR_URL,\"/\").concat(memberId,\".jpg\");setSrc(defaultSrc);}}setShowDefault(!memberId);},[memberId]);return/*#__PURE__*/_jsxs(AvatarWrapper,{$small:small,children:[/*#__PURE__*/_jsx(\"div\",{className:\"photo\",children:(preview||src)&&!showDefault?renderPhoto():renderDefaultBackground()}),editable!==false&&!small&&renderEditButton()]});};export default Avatar;","map":{"version":3,"names":["useEffect","useState","EditIcon","PersonalIcon","toHalfWidth","AvatarWrapper","Avatar","memberId","name","small","editable","onNewPhotoLoaded","defaultImage","src","setSrc","preview","setPreview","showDefault","setShowDefault","renderPhoto","renderDefaultBackground","substring","onImgChangeHandler","event","photo","target","files","reader","FileReader","readAsDataURL","onloadend","e","imgData","currentTarget","result","sessionStorage","setItem","renderEditButton","getItem","defaultSrc","process","env","REACT_APP_AVATAR_URL"],"sources":["C:/Users/allen/git/app2-webview/src/components/Avatar/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { EditIcon, PersonalIcon } from 'assets/images/icons';\r\nimport { toHalfWidth } from 'utilities/Generator';\r\nimport AvatarWrapper from './avatar.style';\r\n\r\n/**\r\n * Avatar 組件封裝用戶頭像\r\n * @param {{\r\n *   memberId: String,\r\n *   name: String,\r\n *   small: Boolean,\r\n *   editable: Boolean,\r\n *   onNewPhotoLoaded: Function\r\n *   defaultImage: *\r\n * }}\r\n * - memberId: 會員UUID。\r\n * - name: 若無圖片時，可傳入用戶名稱，預設取首字為底。\r\n * - small: 表示顯示小圖。此模示不會出現變更圖示的按鈕。\r\n * - editable: 當此變數非 null 時，表示強制控制變更按鈕出現與否。\r\n * - onNewPhotoLoaded: 當使用者更換圖片時觸發的事件。當 small 為 true 時，不會出現變更圖示的按鈕。\r\n * - defaultImage: 預設大頭貼\r\n */\r\nconst Avatar = ({\r\n  memberId, name, small, editable, onNewPhotoLoaded, defaultImage,\r\n}) => {\r\n  const [src, setSrc] = useState(); // 會員頭像的圖片路徑。\r\n  const [preview, setPreview] = useState(null); // 上傳的照片轉成 base64 格式\r\n  const [showDefault, setShowDefault] = useState(false);\r\n\r\n  const renderPhoto = () => (\r\n    <img\r\n      src={preview || src}\r\n      alt={name || 'avatar'}\r\n      onError={() => (defaultImage ? setPreview(defaultImage) : setShowDefault(true))}\r\n    />\r\n  );\r\n\r\n  const renderDefaultBackground = () => (\r\n    <div className=\"default\">\r\n      { name ? <span>{toHalfWidth(name.substring(0, 1))}</span> : <PersonalIcon /> }\r\n    </div>\r\n  );\r\n\r\n  const onImgChangeHandler = async (event) => {\r\n    const photo = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(photo);\r\n    reader.onloadend = (e) => {\r\n      // TODO 一律轉為 jpg 格式。\r\n      const imgData = e.currentTarget.result;\r\n\r\n      setPreview(imgData);\r\n      setShowDefault(false);\r\n\r\n      // 將使用者指定的新圖片回傳給使用此元件的程式。\r\n      if (onNewPhotoLoaded) onNewPhotoLoaded(imgData);\r\n\r\n      if (memberId) sessionStorage.setItem(`Avator_${memberId}`, imgData);\r\n    };\r\n  };\r\n\r\n  const renderEditButton = () => (\r\n    <label className=\"editButton\" htmlFor=\"imageInput\">\r\n      <EditIcon />\r\n      <input\r\n        id=\"imageInput\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onImgChangeHandler}\r\n      />\r\n    </label>\r\n  );\r\n\r\n  useEffect(() => {\r\n    // 從本地 Cache 取出圖像。\r\n    if (memberId) {\r\n      const imgData = sessionStorage.getItem(`Avator_${memberId}`);\r\n      if (imgData) setPreview(imgData);\r\n      if (memberId) {\r\n        const defaultSrc = `${process.env.REACT_APP_AVATAR_URL}/${memberId}.jpg`;\r\n        setSrc(defaultSrc);\r\n      }\r\n    }\r\n    setShowDefault(!memberId);\r\n  }, [memberId]);\r\n\r\n  return (\r\n    <AvatarWrapper $small={small}>\r\n      <div className=\"photo\">\r\n        { ((preview || src) && !showDefault) ? renderPhoto() : renderDefaultBackground() }\r\n      </div>\r\n      { editable !== false && !small && renderEditButton() }\r\n    </AvatarWrapper>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}