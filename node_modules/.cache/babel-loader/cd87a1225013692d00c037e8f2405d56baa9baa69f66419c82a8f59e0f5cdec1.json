{"ast":null,"code":"import _objectSpread from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{callAPI}from'utilities/axios';import{dateToYMD}from'utilities/Generator';import mockCreditCardTerms from'./mockData/mockCreditCardTerms';/**\r\n * 取得信用卡注意事項\r\n * @returns\r\n */export var getCreditCardTerms=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(resolve){return resolve({data:decodeURI(mockCreditCardTerms)});});case 2:response=_context.sent;return _context.abrupt(\"return\",response.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getCreditCardTerms(){return _ref.apply(this,arguments);};}();/**\r\n * 查詢客戶的信用卡清單\r\n * (信用卡子首頁 - 1)\r\n * (信用卡子首頁_即時消費明細 - 1)\r\n *\r\n * @param token\r\n * @return {\r\n * usedCardLimit, // 已使用額度\r\n * memberLevel, // 會員等級\r\n * rewardsRateDomestic, // 國內回饋\r\n * rewardsRateOverseas, // 國外回饋\r\n * rewardsAmount, // 回饋試算\r\n * cards [\r\n *      {\r\n *        cardNo, // 卡號\r\n *        isBankeeCard, // 專案代號\r\n *      },\r\n *      ...\r\n *    ]\r\n * }\r\n *\r\n * TODO: 尚未有完整的測資，所以個電文先帶有測資的 id/帳號\r\n */export var getCards=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return callAPI('/api/card/v1/getCards',request);case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function getCards(_x){return _ref2.apply(this,arguments);};}();/**\r\n * 查詢即時消費明細\r\n * (信用卡子首頁 - 2)\r\n * (信用卡子首頁_即時消費明細 - 2)\r\n *\r\n * @param token\r\n * @param rq {\r\n *    cardNo,   卡號\r\n *    dateBeg,  查詢起日 (西元YYYYMMDD)\r\n *    dateEnd,  查詢迄日 (西元YYYYMMDD)\r\n * }\r\n * @return [\r\n *    {\r\n *      txDate, 交易日期時間 (yyyymmddhhmmss)\r\n *      amount, 消費金額\r\n *      txName,\r\n *      txKey,  交易鍵值\r\n *      note,   備註\r\n *    },\r\n *    ...\r\n * ]\r\n */export var getTransactions=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request){var response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return callAPI('/api/card/v1/getTransactions',request);case 2:response=_context3.sent;return _context3.abrupt(\"return\",response.data);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function getTransactions(_x2){return _ref3.apply(this,arguments);};}();/**\r\n * 編輯信用卡即時消費明細備註\r\n * (信用卡子首頁 - 3)\r\n * (信用卡子首頁_即時消費明細 - 3)\r\n *\r\n * @param token\r\n * @param {\r\n *    cardNo:   卡號\r\n *    txDate:   消費日期\r\n *    txKey:    消費明細唯一Key值\r\n *    note:     備註內容\r\n * }\r\n * @return {\r\n *    result:   true/false\r\n *    message:  回傳結果\r\n * }\r\n *\r\n */export var updateTxnNotes=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(param){var response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return callAPI('/api/card/v1/updateTxnNotes',param);case 2:response=_context4.sent;return _context4.abrupt(\"return\",response.data);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function updateTxnNotes(_x3){return _ref4.apply(this,arguments);};}();/**\r\n * 查詢客戶信用卡帳單資訊\r\n * (信用卡子首頁_信用卡資訊)\r\n *\r\n * @param token\r\n * @param cardNo bankee 卡號 或 空白表示不指定\r\n * @return {\r\n *    cardLimit:                   信用卡額度\r\n *    usedCardLimit:               已使用額度計算\r\n *    availCardLimit:              可使用額度\r\n *    cashAdvAvailLimitDomestic:   國內預借現金可用額度\r\n *    cashAdvAvailLimitOverseas:   國外預借現金可用額度\r\n *    billClosingDate:             帳單結帳日\r\n *    payDueDate:                  本期繳款截止日\r\n *    minDueAmount:                最低應繳金額\r\n *    newBalance:                  本期應繳總額\r\n *    lastPayDate:                 最近繳款日期\r\n *    paidAmount:                  本期累積已繳金額\r\n * }\r\n *\r\n */export var queryCardInfo=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request){var response;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return callAPI('/api/card/v1/getCardSummary',request);case 2:response=_context5.sent;return _context5.abrupt(\"return\",response.data);case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function queryCardInfo(_x4){return _ref5.apply(this,arguments);};}();/**\r\n * 查詢客戶信用卡每月現金回饋 (只顯示已結算月份，一次撈六個月份資料)\r\n * (信用卡子首頁_每月現金回饋)\r\n *\r\n * @author danny\r\n * @Date 2022/09/30\r\n * @param token\r\n * @return [\r\n *    {\r\n *        period // 期別\r\n *        amount // 刷卡回饋\r\n *        communityAmount // 社群圈回饋\r\n *    },\r\n *    ...\r\n * ]\r\n */export var getRewards=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(request){var response;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return callAPI('/api/card/v1/getRewards',request);case 2:response=_context6.sent;return _context6.abrupt(\"return\",response);case 4:case\"end\":return _context6.stop();}}},_callee6);}));return function getRewards(_x5){return _ref6.apply(this,arguments);};}();/**\r\n * 查詢客戶信用卡帳單資訊\r\n *\r\n * @author danny\r\n * @Date 2022/09/27\r\n * @param token\r\n * @param period 期別 (ex: 202212)\r\n * }\r\n * @return {\r\n *    NewBalance,\r\n *    Details [\r\n *      {\r\n *        txDate,   交易日期時間 (yyyymmddhhmmss)\r\n *        cardNo,   卡號\r\n *        desc,     消費項目說明\r\n *        amount,   消費金額\r\n *      },\r\n *      ...\r\n *    ]\r\n * }\r\n */export var queryCardBill=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(request){var response;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return callAPI('/api/card/v1/getBillSummary',request);case 2:response=_context7.sent;return _context7.abrupt(\"return\",response);case 4:case\"end\":return _context7.stop();}}},_callee7);}));return function queryCardBill(_x6){return _ref7.apply(this,arguments);};}();/**\r\n * 查詢會員自扣狀態，決定帳單提示內容與下方Button種類\r\n * 透過 queryCardInfo 查詢本期繳款截止日\r\n *\r\n * @param token\r\n * @return {\r\n *    autoDeductStatus:       0:尚未設定自扣，1:已設定自扣\r\n *    hintToPay:              繳費提醒\r\n * }\r\n * @throws ParseException\r\n *\r\n * TODO: 尚未有完整的測資，所以個電文先帶有測資的 id/帳號\r\n */export var checkCardBillStatus=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(request){var response;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return callAPI('/api/card/v1/getBillDeducStatus',request);case 2:response=_context8.sent;return _context8.abrupt(\"return\",response);case 4:case\"end\":return _context8.stop();}}},_callee8);}));return function checkCardBillStatus(_x7){return _ref8.apply(this,arguments);};}();/**\r\n * 信用卡帳單交易資訊\r\n * (信用卡子首頁_帳單_更多)\r\n *\r\n * @param token\r\n * @param period 期別 (ex: 202212)\r\n * }\r\n * @return {\r\n *    newBalance              本期應繳總額      ORDS.stmt_amt\r\n *    minDueAmount            最低應繳總額      ORDS.min_amt\r\n *    billClosingDate         帳單結帳日        ORDS.stmt_date\r\n *    payDueDate              繳款截止日        ORDS.pymt_due_date\r\n *    prevBalance             上期應繳金額      ORDS.pre_pymt_due_amt\r\n *    paidRefundAmount        已繳款/退款金額    ORDS.paid_amt\r\n *    newPurchaseAmount       本期新增款項      ORDS.new_stmt_amt\r\n *    interestFee             利息              ORDS.interest\r\n *    cardPenalty             違約金            ORDS.fine\r\n *    revCreditLimit          循環信用額度       ORDS.cycle_credit_limit\r\n *    revgCreditPrinBalance   循環信用本金餘額    ORDS.revolving_principal\r\n *    autoPayAccount          自動扣繳帳號       ORDS.autopay_account\r\n *    paidAmountOnDueDate     繳款截止日扣繳金額  ORDS.autopay_amt\r\n * }\r\n */export var getBillDetail=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(request){var response;return _regeneratorRuntime().wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return callAPI('/api/card/v1/getBillDetail',request);case 2:response=_context9.sent;return _context9.abrupt(\"return\",response);case 4:case\"end\":return _context9.stop();}}},_callee9);}));return function getBillDetail(_x8){return _ref9.apply(this,arguments);};}();/**\r\n * 查詢客戶信用卡自動扣繳資訊\r\n * (畫面_信用卡子首頁_自動扣繳 - 1)\r\n *\r\n * @param token\r\n * @return {\r\n *    bank      銀行別                                     IVR9019.DEDUCT-BANK\r\n *    account   扣繳帳號                                   IVR9019.DEDUCT-ACCOUNT-NO\r\n *    isFullPay 是否指定應繳總額 Y/N                        IVR9019.DEDUCT-AUTOPAY-RATE=100 ? \"Y\":\"N\"\r\n *    status    狀態 1 申請 2 生效 3 取消 4 退件 5 待生效   IVR9019.DEDUCT-STATUS\r\n * }\r\n *\r\n * TODO: 尚未有完整的測資，accountId 先固定帶 A123014281\r\n */export var getAutoDebits=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(request){var response;return _regeneratorRuntime().wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.next=2;return callAPI('/api/card/v1/getAutoDebits',request);case 2:response=_context10.sent;return _context10.abrupt(\"return\",response);case 4:case\"end\":return _context10.stop();}}},_callee10);}));return function getAutoDebits(_x9){return _ref10.apply(this,arguments);};}();/**\r\n * 申請信用卡自動扣繳\r\n *\r\n * @param token\r\n * @param {\r\n *    bank:       指定銀行代碼\r\n *    account:    扣繳帳號\r\n *    isFullPay:  是否指定應繳總額 Y/N\r\n * }\r\n * @return {\r\n *    result:     true/false\r\n *    message:    回傳結果\r\n * }\r\n *\r\n */export var setAutoDebit=/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(request){var response;return _regeneratorRuntime().wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.next=2;return callAPI('/api/card/v1/setAutoDebit',request);case 2:response=_context11.sent;return _context11.abrupt(\"return\",response);case 4:case\"end\":return _context11.stop();}}},_callee11);}));return function setAutoDebit(_x10){return _ref11.apply(this,arguments);};}();export var getTransactionPromise=function getTransactionPromise(cardNo){return new Promise(function(resolve){var today=new Date();var dateBeg=dateToYMD(new Date(today.setMonth(today.getMonth()-2)));// 查詢當天至60天前的資料\nvar dateEnd=dateToYMD();var payload={cardNo:cardNo,dateBeg:dateBeg,dateEnd:dateEnd};getTransactions(payload).then(function(transactions){if(!transactions.length)resolve([]);else{// 將回傳的資料加入 cardNo 以利後續畫面渲染與編輯\nvar newTransactions=transactions.map(function(transaction){return _objectSpread(_objectSpread({},transaction),{},{cardNo:cardNo});});resolve(newTransactions);}});});};","map":{"version":3,"names":["callAPI","dateToYMD","mockCreditCardTerms","getCreditCardTerms","Promise","resolve","data","decodeURI","response","getCards","request","getTransactions","updateTxnNotes","param","queryCardInfo","getRewards","queryCardBill","checkCardBillStatus","getBillDetail","getAutoDebits","setAutoDebit","getTransactionPromise","cardNo","today","Date","dateBeg","setMonth","getMonth","dateEnd","payload","then","transactions","length","newTransactions","map","transaction"],"sources":["C:/Users/allen/git/app2-webview/src/pages/C00700_CreditCard/api.js"],"sourcesContent":["import { callAPI } from 'utilities/axios';\r\nimport { dateToYMD } from 'utilities/Generator';\r\n\r\nimport mockCreditCardTerms from './mockData/mockCreditCardTerms';\r\n\r\n/**\r\n * 取得信用卡注意事項\r\n * @returns\r\n */\r\nexport const getCreditCardTerms = async () => {\r\n  // Assume backend store Terms as escaped HTML...\r\n  const response = await new Promise((resolve) => resolve({ data: decodeURI(mockCreditCardTerms) }));\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 查詢客戶的信用卡清單\r\n * (信用卡子首頁 - 1)\r\n * (信用卡子首頁_即時消費明細 - 1)\r\n *\r\n * @param token\r\n * @return {\r\n * usedCardLimit, // 已使用額度\r\n * memberLevel, // 會員等級\r\n * rewardsRateDomestic, // 國內回饋\r\n * rewardsRateOverseas, // 國外回饋\r\n * rewardsAmount, // 回饋試算\r\n * cards [\r\n *      {\r\n *        cardNo, // 卡號\r\n *        isBankeeCard, // 專案代號\r\n *      },\r\n *      ...\r\n *    ]\r\n * }\r\n *\r\n * TODO: 尚未有完整的測資，所以個電文先帶有測資的 id/帳號\r\n */\r\nexport const getCards = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getCards', request);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 查詢即時消費明細\r\n * (信用卡子首頁 - 2)\r\n * (信用卡子首頁_即時消費明細 - 2)\r\n *\r\n * @param token\r\n * @param rq {\r\n *    cardNo,   卡號\r\n *    dateBeg,  查詢起日 (西元YYYYMMDD)\r\n *    dateEnd,  查詢迄日 (西元YYYYMMDD)\r\n * }\r\n * @return [\r\n *    {\r\n *      txDate, 交易日期時間 (yyyymmddhhmmss)\r\n *      amount, 消費金額\r\n *      txName,\r\n *      txKey,  交易鍵值\r\n *      note,   備註\r\n *    },\r\n *    ...\r\n * ]\r\n */\r\nexport const getTransactions = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getTransactions', request);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 編輯信用卡即時消費明細備註\r\n * (信用卡子首頁 - 3)\r\n * (信用卡子首頁_即時消費明細 - 3)\r\n *\r\n * @param token\r\n * @param {\r\n *    cardNo:   卡號\r\n *    txDate:   消費日期\r\n *    txKey:    消費明細唯一Key值\r\n *    note:     備註內容\r\n * }\r\n * @return {\r\n *    result:   true/false\r\n *    message:  回傳結果\r\n * }\r\n *\r\n */\r\nexport const updateTxnNotes = async (param) => {\r\n  const response = await callAPI('/api/card/v1/updateTxnNotes', param);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 查詢客戶信用卡帳單資訊\r\n * (信用卡子首頁_信用卡資訊)\r\n *\r\n * @param token\r\n * @param cardNo bankee 卡號 或 空白表示不指定\r\n * @return {\r\n *    cardLimit:                   信用卡額度\r\n *    usedCardLimit:               已使用額度計算\r\n *    availCardLimit:              可使用額度\r\n *    cashAdvAvailLimitDomestic:   國內預借現金可用額度\r\n *    cashAdvAvailLimitOverseas:   國外預借現金可用額度\r\n *    billClosingDate:             帳單結帳日\r\n *    payDueDate:                  本期繳款截止日\r\n *    minDueAmount:                最低應繳金額\r\n *    newBalance:                  本期應繳總額\r\n *    lastPayDate:                 最近繳款日期\r\n *    paidAmount:                  本期累積已繳金額\r\n * }\r\n *\r\n */\r\nexport const queryCardInfo = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getCardSummary', request);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * 查詢客戶信用卡每月現金回饋 (只顯示已結算月份，一次撈六個月份資料)\r\n * (信用卡子首頁_每月現金回饋)\r\n *\r\n * @author danny\r\n * @Date 2022/09/30\r\n * @param token\r\n * @return [\r\n *    {\r\n *        period // 期別\r\n *        amount // 刷卡回饋\r\n *        communityAmount // 社群圈回饋\r\n *    },\r\n *    ...\r\n * ]\r\n */\r\nexport const getRewards = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getRewards', request);\r\n  return response;\r\n};\r\n\r\n/**\r\n * 查詢客戶信用卡帳單資訊\r\n *\r\n * @author danny\r\n * @Date 2022/09/27\r\n * @param token\r\n * @param period 期別 (ex: 202212)\r\n * }\r\n * @return {\r\n *    NewBalance,\r\n *    Details [\r\n *      {\r\n *        txDate,   交易日期時間 (yyyymmddhhmmss)\r\n *        cardNo,   卡號\r\n *        desc,     消費項目說明\r\n *        amount,   消費金額\r\n *      },\r\n *      ...\r\n *    ]\r\n * }\r\n */\r\nexport const queryCardBill = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getBillSummary', request);\r\n  return response;\r\n};\r\n\r\n/**\r\n * 查詢會員自扣狀態，決定帳單提示內容與下方Button種類\r\n * 透過 queryCardInfo 查詢本期繳款截止日\r\n *\r\n * @param token\r\n * @return {\r\n *    autoDeductStatus:       0:尚未設定自扣，1:已設定自扣\r\n *    hintToPay:              繳費提醒\r\n * }\r\n * @throws ParseException\r\n *\r\n * TODO: 尚未有完整的測資，所以個電文先帶有測資的 id/帳號\r\n */\r\nexport const checkCardBillStatus = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getBillDeducStatus', request);\r\n  return response;\r\n};\r\n\r\n/**\r\n * 信用卡帳單交易資訊\r\n * (信用卡子首頁_帳單_更多)\r\n *\r\n * @param token\r\n * @param period 期別 (ex: 202212)\r\n * }\r\n * @return {\r\n *    newBalance              本期應繳總額      ORDS.stmt_amt\r\n *    minDueAmount            最低應繳總額      ORDS.min_amt\r\n *    billClosingDate         帳單結帳日        ORDS.stmt_date\r\n *    payDueDate              繳款截止日        ORDS.pymt_due_date\r\n *    prevBalance             上期應繳金額      ORDS.pre_pymt_due_amt\r\n *    paidRefundAmount        已繳款/退款金額    ORDS.paid_amt\r\n *    newPurchaseAmount       本期新增款項      ORDS.new_stmt_amt\r\n *    interestFee             利息              ORDS.interest\r\n *    cardPenalty             違約金            ORDS.fine\r\n *    revCreditLimit          循環信用額度       ORDS.cycle_credit_limit\r\n *    revgCreditPrinBalance   循環信用本金餘額    ORDS.revolving_principal\r\n *    autoPayAccount          自動扣繳帳號       ORDS.autopay_account\r\n *    paidAmountOnDueDate     繳款截止日扣繳金額  ORDS.autopay_amt\r\n * }\r\n */\r\nexport const getBillDetail = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getBillDetail', request);\r\n  return response;\r\n};\r\n\r\n/**\r\n * 查詢客戶信用卡自動扣繳資訊\r\n * (畫面_信用卡子首頁_自動扣繳 - 1)\r\n *\r\n * @param token\r\n * @return {\r\n *    bank      銀行別                                     IVR9019.DEDUCT-BANK\r\n *    account   扣繳帳號                                   IVR9019.DEDUCT-ACCOUNT-NO\r\n *    isFullPay 是否指定應繳總額 Y/N                        IVR9019.DEDUCT-AUTOPAY-RATE=100 ? \"Y\":\"N\"\r\n *    status    狀態 1 申請 2 生效 3 取消 4 退件 5 待生效   IVR9019.DEDUCT-STATUS\r\n * }\r\n *\r\n * TODO: 尚未有完整的測資，accountId 先固定帶 A123014281\r\n */\r\nexport const getAutoDebits = async (request) => {\r\n  const response = await callAPI('/api/card/v1/getAutoDebits', request);\r\n  return response;\r\n};\r\n\r\n/**\r\n * 申請信用卡自動扣繳\r\n *\r\n * @param token\r\n * @param {\r\n *    bank:       指定銀行代碼\r\n *    account:    扣繳帳號\r\n *    isFullPay:  是否指定應繳總額 Y/N\r\n * }\r\n * @return {\r\n *    result:     true/false\r\n *    message:    回傳結果\r\n * }\r\n *\r\n */\r\nexport const setAutoDebit = async (request) => {\r\n  const response = await callAPI('/api/card/v1/setAutoDebit', request);\r\n  return response;\r\n};\r\n\r\nexport const getTransactionPromise = (cardNo) => new Promise((resolve) => {\r\n  const today = new Date();\r\n  const dateBeg = dateToYMD(new Date(today.setMonth(today.getMonth() - 2))); // 查詢當天至60天前的資料\r\n  const dateEnd = dateToYMD();\r\n  const payload = { cardNo, dateBeg, dateEnd };\r\n  getTransactions(payload).then((transactions) => {\r\n    if (!transactions.length) resolve([]);\r\n    else {\r\n      // 將回傳的資料加入 cardNo 以利後續畫面渲染與編輯\r\n      const newTransactions = transactions.map((transaction) => ({\r\n        ...transaction,\r\n        cardNo,\r\n      }));\r\n      resolve(newTransactions);\r\n    }\r\n  });\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}