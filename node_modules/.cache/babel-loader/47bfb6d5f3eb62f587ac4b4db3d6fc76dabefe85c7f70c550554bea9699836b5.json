{"ast":null,"code":"import _wrapRegExp from\"C:/Users/allen/git/app2-webview/node_modules/@babel/runtime/helpers/esm/wrapRegExp.js\";/* eslint-disable object-curly-newline */ /* eslint-disable import/prefer-default-export */import{PaymentType}from'./LoanPaymentType';/* ========= 通用函式 ========= */ // 將帳號轉為指定字數間帶有分隔符 (-) 之顯示方式\nexport var accountFormatter=function accountFormatter(account){var acct=account!==null&&account!==void 0?account:'00000000000000';return\"\".concat(acct.slice(0,3),\"-\").concat(acct.slice(3,6),\"-\").concat(acct.slice(6));};var dateRule=/*#__PURE__*/_wrapRegExp(/^((1\\d\\d|[789]\\d)|(19\\d\\d|20\\d\\d))([1-9]|0[1-9]|1[012])([1-9]|0[1-9]|[12]\\d|3[01])$/,{yTW:2,yyyy:3,mm:4,dd:5});/**\r\n * 將日期字串轉為 Date 物件。\r\n * @param {String} stringDate YYYYMMDD 或 YYYY/MM/DD 格式的日期字串。\r\n * @param {String?} splitter 輸出日期字串的間隔字元。例：'/'\r\n * @returns {Date} 若傳入空值，則傳回 null\r\n */export var stringToDate=function stringToDate(stringDate,splitter){if(stringDate){if(splitter){var parts=stringDate.split(splitter);return new Date(parts[0],parts[1]-1,parts[2]);}var matchs=stringDate.replace(/[^\\d]/g,'').match(dateRule);if(matchs){// yTWD = 民國年(7x~199)\nvar _matchs$groups=matchs.groups,yTW=_matchs$groups.yTW,yyyy=_matchs$groups.yyyy,mm=_matchs$groups.mm,dd=_matchs$groups.dd;var year=yyyy!==null&&yyyy!==void 0?yyyy:parseInt(yTW,10)+1911;var date=new Date(year,mm-1,dd);return new Date(date);}console.error('日期字串無法轉換為 Date 物件 : ',stringDate);}return null;};/**\r\n * 將日期格式轉為字串，預設格式為 yyyy/MM/dd。\r\n * @param {Date|String} date 要轉換的日期物件或 yyyyMMdd格式字串。\r\n * @param {String?} splitter 輸出日期字串的間隔字元，預設值為'/'。若要轉換為 yyyyMMdd 則將此參數設為空字串。\r\n * @param {Boolean?} mmddOnly 表示不需要年的部份。\r\n * @returns {String} 傳為以 splitter 為分隔字元的日期字串，例：2022/10/01\r\n */export var dateToString=function dateToString(date,splitter,mmddOnly){if(!date)return null;// TODO 若呼叫端直接顯示，可能會出現 'null' 的情況！\nif(!(date instanceof Date)){date=stringToDate(date);if(!date)return'';}var parts=[date.getFullYear(),(date.getMonth()+1).toString().padStart(2,'0'),date.getDate().toString().padStart(2,'0')];if(mmddOnly)parts.splice(0,1);// 移除年。\nreturn parts.join(splitter!==null&&splitter!==void 0?splitter:'/');};/**\r\n * 將日期轉為 YYYYMMDD 字串\r\n * @param {Date} date 要轉換的日期；若為 null 則以 Today 為預設值。\r\n * @returns {String}\r\n */export var dateToYMD=function dateToYMD(date){return dateToString(date!==null&&date!==void 0?date:new Date(),'');};/**\r\n * 將全數字的時間字串，轉為 HH:mm:ss 字串\r\n * @param {Date|String} time 全數字的時間字串，例：'235959'\r\n */export var timeToString=function timeToString(time){if(!time)return'';// 將 Date 轉為日期字串。\nif(time instanceof Date){time=time.toTimeString();// 輸出：'17:20:15 GMT+0800 (台北標準時間)'\n}time=time.substring(0,8).replace(/[^0-9]/g,'');// 去掉非數字的部份。\nvar hour=time.substring(0,2);var min=time.substring(2,4);var sec=time.substring(4,6);return\"\".concat(hour,\":\").concat(min,\":\").concat(sec);};/**\r\n * 將 Date 轉為 yyyy/MM/dd HH:mm:ss 字串.\r\n * @param {Date} date\r\n */export var datetimeToString=function datetimeToString(date){return\"\".concat(dateToString(date),\" \").concat(timeToString(date));};// 將秒數轉為 MM:SS 字串\nexport var countdownTimerFormatter=function countdownTimerFormatter(count){var min=Math.floor(count/60);var sec=count%60;return\"\".concat(min<10?\"0\".concat(min):min,\":\").concat(sec<10?\"0\".concat(sec):sec);};// 將數字 1-7 轉為中文大寫\nexport var weekNumberToChinese=function weekNumberToChinese(value){switch(parseInt(value,10)){case 1:return'一';case 2:return'二';case 3:return'三';case 4:return'四';case 5:return'五';case 6:return'六';case 7:return'日';default:return'';}};// 將拉阿伯數字轉換為中文大寫\n/* eslint-disable eqeqeq */export var numberToChinese=function numberToChinese(num){if(Number.isNaN(Number(num))){return'(非數字)';}var number=String(num).split('.')[0];var digtalNum=String(num).split('.')[1];var chineseNumber='零壹貳參肆伍陸柒捌玖'.split('');var amountSmallUnit=['','拾','佰','千'];var amountBigUnit=['','萬','億','兆','京','垓','秭','穰','溝','澗','正','載'];var arabicNumeralsSplitSplit=[];var arabicNumeralsSplitSplitCount=parseInt(number.length/4,10);for(var i=0;i<=arabicNumeralsSplitSplitCount;i++){if(i==0&&number.length%4!=0){arabicNumeralsSplitSplit[i]=number.substr(0,number.length%4);number=number.slice(number.length%4);}else if(number!=''){arabicNumeralsSplitSplit[i]=number.substr(0,4);number=number.slice(4);}}var chineseBigNumber='';for(var _i=0;_i<arabicNumeralsSplitSplit.length;_i++){for(var j=0;j<arabicNumeralsSplitSplit[_i].length;j++){if(arabicNumeralsSplitSplit[_i][0]!=0&&j==1&&arabicNumeralsSplitSplit[_i][j]==0&&arabicNumeralsSplitSplit[_i].length==4&&arabicNumeralsSplitSplit[_i][2]!=0){chineseBigNumber+=chineseNumber[arabicNumeralsSplitSplit[_i][j]];}else if(arabicNumeralsSplitSplit[_i][j]!=0){chineseBigNumber+=chineseNumber[arabicNumeralsSplitSplit[_i][j]];chineseBigNumber+=amountSmallUnit[arabicNumeralsSplitSplit[_i].length-1-j];}else if(arabicNumeralsSplitSplit[_i][j]==0&&arabicNumeralsSplitSplit[_i][j-1]!=0){if(arabicNumeralsSplitSplit[_i][arabicNumeralsSplitSplit[_i].length-1]!=0){chineseBigNumber+=chineseNumber[arabicNumeralsSplitSplit[_i][j]];}}}if(parseInt(arabicNumeralsSplitSplit[_i],10)!=0){chineseBigNumber+=amountBigUnit[arabicNumeralsSplitSplit.length-1-_i];}}if(chineseBigNumber!=''){/* chineseBigNumber += '元整'; */if(!digtalNum){chineseBigNumber=\"(\".concat(chineseBigNumber,\"\\u5143)\");}else{var chineseDigtalNumber='';for(var _i2=0;_i2<digtalNum.length;_i2++){chineseDigtalNumber+=chineseNumber[Number(digtalNum[_i2])];}chineseBigNumber=\"(\".concat(chineseBigNumber,\"\\u9EDE\").concat(chineseDigtalNumber,\"\\u5143)\");}}return chineseBigNumber;};// 帳戶科目別對應的存款卡顏色\nexport var accountTypeColorGenerator=function accountTypeColorGenerator(type){switch(type){case'001':// 活期存款\nreturn'';case'003':// 行員存款\nreturn'';case'004':// 活期儲蓄存款\nreturn'purple';case'007':// 外幣存款\nreturn'blue';case'010':// 定存 (010 科目別包含台外幣定存)\nreturn'';case'031':// 支存\nreturn'';case'041':// 信託\nreturn'';case'050':// 放款\ndefault:return null;}};// 帳務總覽對應名稱和卡色\n// 卡牌顏色:\n// 1. 母帳戶(深紫)\n// 2. 社群圈(粉)\n// 3. 存錢計劃(黃)\n// 4. 證卷交割帳戶(藍)\n// 5. 外幣帳戶(橘)\n// 6. 信用卡(綠)\n// 7. 貸款卡(淺紫)\n// 8. 社群帳本卡(粉)\nexport var accountOverviewCardVarient=function accountOverviewCardVarient(type){switch(type){case'M':return{name:'母帳戶',color:'purple'};case'S':return{name:'證券戶',color:'blue'};case'F':return{name:'外幣帳戶',color:'orange'};case'C':return{name:'子帳戶',color:'yellow'};case'CC':return{name:'信用卡',color:'green'};case'L':return{name:'貸款',color:'lightPurple'};default:return{name:'',color:''};}};export var CurrencyInfo=[// TODO NTD ? TWD ? 應統一才對！\n// #884 卡片上金額前方顯示幣別\"符號\"，不需顯示英文\n{code:'NTD',name:'新台幣',symbol:'$',float:0},{code:'TWD',name:'新台幣',symbol:'$',float:0},{code:'USD',name:'美元',symbol:'$',float:2},{code:'GBP',name:'英鎊',symbol:'£',float:2},{code:'HKD',name:'港幣',symbol:'$',float:2},{code:'CHF',name:'瑞士法郎',symbol:'Fr',float:2},{code:'AUD',name:'澳幣',symbol:'$',float:2},{code:'SGD',name:'新加坡幣',symbol:'$',float:2},{code:'JPY',name:'日幣',symbol:'¥',float:0},{code:'CAD',name:'加幣',symbol:'$',float:2},{code:'THB',name:'泰幣',symbol:'฿',float:0},{code:'ZAR',name:'南非幣',symbol:'R',float:2},{code:'PLN',name:'波蘭幣',symbol:'zł',float:2},{code:'CNY',name:'人民幣',symbol:'¥',float:0},{code:'EUR',name:'歐元',symbol:'€',float:2},{code:'NZD',name:'紐西蘭幣',symbol:'$',float:2}];/**\r\n * 取得指定幣別的（代碼、名稱、符號、小數位數）資訊。\r\n * @param {String} ccyCode 貨幣代碼；可為空值，表示所有貨幣。\r\n * @return {{\r\n *   code: '幣別代碼',\r\n *   name: '幣別名稱',\r\n *   symbol: '代表符號',\r\n *   float: '小數位數',\r\n * }} 指定幣別資訊；若未指定則傳回所有幣別資訊。\r\n */export var getCurrenyInfo=function getCurrenyInfo(ccyCode){var ccyInfo=CurrencyInfo.find(function(ccy){return ccy.code===ccyCode;});return ccyInfo;};/**\r\n * 取得指定幣別的名稱。\r\n * @param {String} currency 幣別代碼。\r\n * @returns {String} 幣別的名稱, 當找不到指定幣別名稱時，以原代碼傳回。\r\n */export var getCurrenyName=function getCurrenyName(currency){var ccyInfo=getCurrenyInfo(currency);return ccyInfo?ccyInfo.name:currency;};/**\r\n * 將數字轉為加上千分位符號的字串\r\n * @param {Number} amount 金額，可以有小數\r\n * @param {Number?} float 小數位數，會捨位或補零\r\n * @param {Boolean?} showFloat 強制顯示小數部份，不受 float 的小數位數限制。\r\n */export var toCurrency=function toCurrency(number){var _number$toString$spli;var float=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var showFloat=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(number===null||number===undefined)return'';if(number==='*')return'＊＊＊＊＊';// 不顯示餘額。\nvar parts=(_number$toString$spli=number.toString().split('.'))!==null&&_number$toString$spli!==void 0?_number$toString$spli:['0'];// 預設為'0'\nparts[0]=parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g,',');// 取出整數加上千分位','\n/* 如台幣帳戶需顯示小數點，傳入isShowDecimal: true */if(showFloat&&parts[1])float=parts[1].length;if(float>0){var _parts$;parts[1]=\"\".concat((_parts$=parts[1])!==null&&_parts$!==void 0?_parts$:'',\"000000\").substring(0,float);// 小數位數補齊\n}else parts.splice(1,1);// 不要顯示小數時，就把小數的數值刪掉。\nreturn parts.join('.');};/**\r\n * 貨幣單位文字轉為符號\r\n * @param {String} currency 幣別代碼，例：TWD\r\n * @param {Number} amount 金額，可以有小數\r\n * @param {Boolean?} showFloat 強制顯示小數部份，不受各幣別內定的小數位數限制。\r\n */export var currencySymbolGenerator=function currencySymbolGenerator(currency,amount){var _toCurrency;var showFloat=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var ccyInfo=CurrencyInfo.find(function(ccy){return ccy.code===currency;});var amtStr=(_toCurrency=toCurrency(amount,ccyInfo===null||ccyInfo===void 0?void 0:ccyInfo.float,showFloat))!==null&&_toCurrency!==void 0?_toCurrency:'';if(ccyInfo){return ccyInfo.symbol+amtStr;}return amtStr;};/**\r\n * 將全形文字轉為半形\r\n * @param {*} str\r\n */export var toHalfWidth=function toHalfWidth(str){return str===null||str===void 0?void 0:str.replace(/[\\uff01-\\uff5e]/g,function(ch){return String.fromCharCode(ch.charCodeAt(0)-0xfee0);});};// 將數字中的0轉換為中文\nexport var switchZhNumber=function switchZhNumber(numIndication,isPlus){// 計算位數\n// eslint-disable-next-line no-bitwise\nvar logedNum=Math.log(numIndication)*Math.LOG10E+1|0;// 依據位數判斷回傳數字級單位\nswitch(logedNum){case 4:// 千\nreturn\"\".concat(numIndication/1000,\"\\u5343\");case 5:// 萬\n// eslint-disable-next-line no-case-declarations\nvar thousand=numIndication%10000/1000;// eslint-disable-next-line no-case-declarations\nvar tenThousand=Math.floor(numIndication/10000);return\"\".concat(tenThousand,\"\\u842C\").concat(thousand!==0?\"\".concat(thousand,\"\\u5343\"):'');case 6:// 十萬\nreturn\"\".concat(numIndication/10000,\"\\u842C\");case 7:// 百萬\nreturn isPlus?\"\".concat(numIndication/10000,\"\\u842C\"):\"\".concat(numIndication/1000000,\"\\u767E\\u842C\");case 8:// 千萬\nreturn\"\".concat(numIndication/10000000,\"\\u5343\\u842C\");case 9:// 億\nreturn\"\".concat(numIndication/100000000,\"\\u5104\");default:return'0';}};export var handleLoanTypeToTitle=function handleLoanTypeToTitle(type){var isCorrect=type.match('更正-')!==null;var typeCode=type;if(isCorrect){typeCode=type.substring(3);}return isCorrect?\"\".concat(PaymentType[typeCode],\"(\\u66F4\\u6B63\\u4EA4\\u6613)\"):\"\".concat(PaymentType[typeCode]);};","map":{"version":3,"names":["PaymentType","accountFormatter","account","acct","slice","dateRule","stringToDate","stringDate","splitter","parts","split","Date","matchs","replace","match","groups","yTW","yyyy","mm","dd","year","parseInt","date","console","error","dateToString","mmddOnly","getFullYear","getMonth","toString","padStart","getDate","splice","join","dateToYMD","timeToString","time","toTimeString","substring","hour","min","sec","datetimeToString","countdownTimerFormatter","count","Math","floor","weekNumberToChinese","value","numberToChinese","num","Number","isNaN","number","String","digtalNum","chineseNumber","amountSmallUnit","amountBigUnit","arabicNumeralsSplitSplit","arabicNumeralsSplitSplitCount","length","i","substr","chineseBigNumber","j","chineseDigtalNumber","accountTypeColorGenerator","type","accountOverviewCardVarient","name","color","CurrencyInfo","code","symbol","float","getCurrenyInfo","ccyCode","ccyInfo","find","ccy","getCurrenyName","currency","toCurrency","showFloat","undefined","currencySymbolGenerator","amount","amtStr","toHalfWidth","str","ch","fromCharCode","charCodeAt","switchZhNumber","numIndication","isPlus","logedNum","log","LOG10E","thousand","tenThousand","handleLoanTypeToTitle","isCorrect","typeCode"],"sources":["C:/Users/allen/git/app2-webview/src/utilities/Generator.js"],"sourcesContent":["/* eslint-disable object-curly-newline */\r\n/* eslint-disable import/prefer-default-export */\r\n\r\nimport { PaymentType } from './LoanPaymentType';\r\n\r\n/* ========= 通用函式 ========= */\r\n\r\n// 將帳號轉為指定字數間帶有分隔符 (-) 之顯示方式\r\nexport const accountFormatter = (account) => {\r\n  const acct = account ?? '00000000000000';\r\n  return `${acct.slice(0, 3)}-${acct.slice(3, 6)}-${acct.slice(6)}`;\r\n};\r\n\r\nconst dateRule = /^((?<yTW>1\\d\\d|[789]\\d)|(?<yyyy>19\\d\\d|20\\d\\d))(?<mm>[1-9]|0[1-9]|1[012])(?<dd>[1-9]|0[1-9]|[12]\\d|3[01])$/;\r\n/**\r\n * 將日期字串轉為 Date 物件。\r\n * @param {String} stringDate YYYYMMDD 或 YYYY/MM/DD 格式的日期字串。\r\n * @param {String?} splitter 輸出日期字串的間隔字元。例：'/'\r\n * @returns {Date} 若傳入空值，則傳回 null\r\n */\r\nexport const stringToDate = (stringDate, splitter) => {\r\n  if (stringDate) {\r\n    if (splitter) {\r\n      const parts = stringDate.split(splitter);\r\n      return new Date(parts[0], parts[1] - 1, parts[2]);\r\n    }\r\n\r\n    const matchs = stringDate.replace(/[^\\d]/g, '').match(dateRule);\r\n    if (matchs) {\r\n      // yTWD = 民國年(7x~199)\r\n      const { yTW, yyyy, mm, dd } = matchs.groups;\r\n      const year = yyyy ?? (parseInt(yTW, 10) + 1911);\r\n\r\n      const date = new Date(year, (mm - 1), dd);\r\n      return new Date(date);\r\n    }\r\n\r\n    console.error('日期字串無法轉換為 Date 物件 : ', stringDate);\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * 將日期格式轉為字串，預設格式為 yyyy/MM/dd。\r\n * @param {Date|String} date 要轉換的日期物件或 yyyyMMdd格式字串。\r\n * @param {String?} splitter 輸出日期字串的間隔字元，預設值為'/'。若要轉換為 yyyyMMdd 則將此參數設為空字串。\r\n * @param {Boolean?} mmddOnly 表示不需要年的部份。\r\n * @returns {String} 傳為以 splitter 為分隔字元的日期字串，例：2022/10/01\r\n */\r\nexport const dateToString = (date, splitter, mmddOnly) => {\r\n  if (!date) return null; // TODO 若呼叫端直接顯示，可能會出現 'null' 的情況！\r\n\r\n  if (!(date instanceof Date)) {\r\n    date = stringToDate(date);\r\n    if (!date) return '';\r\n  }\r\n\r\n  const parts = [\r\n    date.getFullYear(),\r\n    (date.getMonth() + 1).toString().padStart(2, '0'),\r\n    date.getDate().toString().padStart(2, '0'),\r\n  ];\r\n  if (mmddOnly) parts.splice(0, 1); // 移除年。\r\n\r\n  return parts.join(splitter ?? '/');\r\n};\r\n\r\n/**\r\n * 將日期轉為 YYYYMMDD 字串\r\n * @param {Date} date 要轉換的日期；若為 null 則以 Today 為預設值。\r\n * @returns {String}\r\n */\r\nexport const dateToYMD = (date) => dateToString(date ?? new Date(), '');\r\n\r\n/**\r\n * 將全數字的時間字串，轉為 HH:mm:ss 字串\r\n * @param {Date|String} time 全數字的時間字串，例：'235959'\r\n */\r\nexport const timeToString = (time) => {\r\n  if (!time) return '';\r\n\r\n  // 將 Date 轉為日期字串。\r\n  if (time instanceof Date) {\r\n    time = time.toTimeString(); // 輸出：'17:20:15 GMT+0800 (台北標準時間)'\r\n  }\r\n\r\n  time = time.substring(0, 8).replace(/[^0-9]/g, ''); // 去掉非數字的部份。\r\n  const hour = time.substring(0, 2);\r\n  const min = time.substring(2, 4);\r\n  const sec = time.substring(4, 6);\r\n\r\n  return `${hour}:${min}:${sec}`;\r\n};\r\n\r\n/**\r\n * 將 Date 轉為 yyyy/MM/dd HH:mm:ss 字串.\r\n * @param {Date} date\r\n */\r\nexport const datetimeToString = (date) => `${dateToString(date)} ${timeToString(date)}`;\r\n\r\n// 將秒數轉為 MM:SS 字串\r\nexport const countdownTimerFormatter = (count) => {\r\n  const min = Math.floor(count / 60);\r\n  const sec = count % 60;\r\n  return `${min < 10 ? `0${min}` : min}:${sec < 10 ? `0${sec}` : sec}`;\r\n};\r\n\r\n// 將數字 1-7 轉為中文大寫\r\nexport const weekNumberToChinese = (value) => {\r\n  switch (parseInt(value, 10)) {\r\n    case 1:\r\n      return '一';\r\n    case 2:\r\n      return '二';\r\n    case 3:\r\n      return '三';\r\n    case 4:\r\n      return '四';\r\n    case 5:\r\n      return '五';\r\n    case 6:\r\n      return '六';\r\n    case 7:\r\n      return '日';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\n// 將拉阿伯數字轉換為中文大寫\r\n/* eslint-disable eqeqeq */\r\nexport const numberToChinese = (num) => {\r\n  if (Number.isNaN(Number(num))) {\r\n    return '(非數字)';\r\n  }\r\n  let number = String(num).split('.')[0];\r\n  const digtalNum = String(num).split('.')[1];\r\n  const chineseNumber = ('零壹貳參肆伍陸柒捌玖').split('');\r\n  const amountSmallUnit = ['', '拾', '佰', '千'];\r\n  const amountBigUnit = ['', '萬', '億', '兆', '京', '垓', '秭', '穰', '溝', '澗', '正', '載'];\r\n  const arabicNumeralsSplitSplit = [];\r\n  const arabicNumeralsSplitSplitCount = parseInt(number.length / 4, 10);\r\n\r\n  for (let i = 0; i <= arabicNumeralsSplitSplitCount; i++) {\r\n    if (i == 0 && number.length % 4 != 0) {\r\n      arabicNumeralsSplitSplit[i] = number.substr(0, number.length % 4);\r\n      number = number.slice(number.length % 4);\r\n    } else if (number != '') {\r\n      arabicNumeralsSplitSplit[i] = number.substr(0, 4);\r\n      number = number.slice(4);\r\n    }\r\n  }\r\n\r\n  let chineseBigNumber = '';\r\n\r\n  for (let i = 0; i < arabicNumeralsSplitSplit.length; i++) {\r\n    for (let j = 0; j < arabicNumeralsSplitSplit[i].length; j++) {\r\n      if (arabicNumeralsSplitSplit[i][0] != 0 && j == 1\r\n        && arabicNumeralsSplitSplit[i][j] == 0\r\n        && arabicNumeralsSplitSplit[i].length == 4\r\n        && arabicNumeralsSplitSplit[i][2] != 0) {\r\n        chineseBigNumber += chineseNumber[arabicNumeralsSplitSplit[i][j]];\r\n      } else if (arabicNumeralsSplitSplit[i][j] != 0) {\r\n        chineseBigNumber += chineseNumber[arabicNumeralsSplitSplit[i][j]];\r\n        chineseBigNumber += amountSmallUnit[arabicNumeralsSplitSplit[i].length - 1 - j];\r\n      } else if (arabicNumeralsSplitSplit[i][j] == 0 && arabicNumeralsSplitSplit[i][j - 1] != 0) {\r\n        if (arabicNumeralsSplitSplit[i][arabicNumeralsSplitSplit[i].length - 1] != 0) {\r\n          chineseBigNumber += chineseNumber[arabicNumeralsSplitSplit[i][j]];\r\n        }\r\n      }\r\n    }\r\n    if (parseInt(arabicNumeralsSplitSplit[i], 10) != 0) {\r\n      chineseBigNumber += amountBigUnit[arabicNumeralsSplitSplit.length - 1 - i];\r\n    }\r\n  }\r\n\r\n  if (chineseBigNumber != '') {\r\n    /* chineseBigNumber += '元整'; */\r\n    if (!digtalNum) {\r\n      chineseBigNumber = `(${chineseBigNumber}元)`;\r\n    } else {\r\n      let chineseDigtalNumber = '';\r\n      for (let i = 0; i < digtalNum.length; i++) {\r\n        chineseDigtalNumber += chineseNumber[Number(digtalNum[i])];\r\n      }\r\n      chineseBigNumber = `(${chineseBigNumber}點${chineseDigtalNumber}元)`;\r\n    }\r\n  }\r\n  return chineseBigNumber;\r\n};\r\n\r\n// 帳戶科目別對應的存款卡顏色\r\nexport const accountTypeColorGenerator = (type) => {\r\n  switch (type) {\r\n    case '001': // 活期存款\r\n      return '';\r\n    case '003': // 行員存款\r\n      return '';\r\n    case '004': // 活期儲蓄存款\r\n      return 'purple';\r\n    case '007': // 外幣存款\r\n      return 'blue';\r\n    case '010': // 定存 (010 科目別包含台外幣定存)\r\n      return '';\r\n    case '031': // 支存\r\n      return '';\r\n    case '041': // 信託\r\n      return '';\r\n    case '050': // 放款\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\n// 帳務總覽對應名稱和卡色\r\n// 卡牌顏色:\r\n// 1. 母帳戶(深紫)\r\n// 2. 社群圈(粉)\r\n// 3. 存錢計劃(黃)\r\n// 4. 證卷交割帳戶(藍)\r\n// 5. 外幣帳戶(橘)\r\n// 6. 信用卡(綠)\r\n// 7. 貸款卡(淺紫)\r\n// 8. 社群帳本卡(粉)\r\nexport const accountOverviewCardVarient = (type) => {\r\n  switch (type) {\r\n    case 'M':\r\n      return { name: '母帳戶', color: 'purple' };\r\n    case 'S':\r\n      return { name: '證券戶', color: 'blue' };\r\n    case 'F':\r\n      return { name: '外幣帳戶', color: 'orange' };\r\n    case 'C':\r\n      return { name: '子帳戶', color: 'yellow' };\r\n    case 'CC':\r\n      return { name: '信用卡', color: 'green' };\r\n    case 'L':\r\n      return { name: '貸款', color: 'lightPurple' };\r\n    default:\r\n      return { name: '', color: '' };\r\n  }\r\n};\r\n\r\nexport const CurrencyInfo = [\r\n  // TODO NTD ? TWD ? 應統一才對！\r\n  // #884 卡片上金額前方顯示幣別\"符號\"，不需顯示英文\r\n  { code: 'NTD', name: '新台幣', symbol: '$', float: 0 },\r\n  { code: 'TWD', name: '新台幣', symbol: '$', float: 0 },\r\n  { code: 'USD', name: '美元', symbol: '$', float: 2 },\r\n  { code: 'GBP', name: '英鎊', symbol: '£', float: 2 },\r\n  { code: 'HKD', name: '港幣', symbol: '$', float: 2 },\r\n  { code: 'CHF', name: '瑞士法郎', symbol: 'Fr', float: 2 },\r\n  { code: 'AUD', name: '澳幣', symbol: '$', float: 2 },\r\n  { code: 'SGD', name: '新加坡幣', symbol: '$', float: 2 },\r\n  { code: 'JPY', name: '日幣', symbol: '¥', float: 0 },\r\n  { code: 'CAD', name: '加幣', symbol: '$', float: 2 },\r\n  { code: 'THB', name: '泰幣', symbol: '฿', float: 0 },\r\n  { code: 'ZAR', name: '南非幣', symbol: 'R', float: 2 },\r\n  { code: 'PLN', name: '波蘭幣', symbol: 'zł', float: 2 },\r\n  { code: 'CNY', name: '人民幣', symbol: '¥', float: 0 },\r\n  { code: 'EUR', name: '歐元', symbol: '€', float: 2 },\r\n  { code: 'NZD', name: '紐西蘭幣', symbol: '$', float: 2 },\r\n];\r\n\r\n/**\r\n * 取得指定幣別的（代碼、名稱、符號、小數位數）資訊。\r\n * @param {String} ccyCode 貨幣代碼；可為空值，表示所有貨幣。\r\n * @return {{\r\n *   code: '幣別代碼',\r\n *   name: '幣別名稱',\r\n *   symbol: '代表符號',\r\n *   float: '小數位數',\r\n * }} 指定幣別資訊；若未指定則傳回所有幣別資訊。\r\n */\r\nexport const getCurrenyInfo = (ccyCode) => {\r\n  const ccyInfo = CurrencyInfo.find((ccy) => ccy.code === ccyCode);\r\n  return ccyInfo;\r\n};\r\n\r\n/**\r\n * 取得指定幣別的名稱。\r\n * @param {String} currency 幣別代碼。\r\n * @returns {String} 幣別的名稱, 當找不到指定幣別名稱時，以原代碼傳回。\r\n */\r\nexport const getCurrenyName = (currency) => {\r\n  const ccyInfo = getCurrenyInfo(currency);\r\n  return ccyInfo ? ccyInfo.name : currency;\r\n};\r\n\r\n/**\r\n * 將數字轉為加上千分位符號的字串\r\n * @param {Number} amount 金額，可以有小數\r\n * @param {Number?} float 小數位數，會捨位或補零\r\n * @param {Boolean?} showFloat 強制顯示小數部份，不受 float 的小數位數限制。\r\n */\r\nexport const toCurrency = (number, float = 0, showFloat = false) => {\r\n  if (number === null || number === undefined) return '';\r\n  if (number === '*') return '＊＊＊＊＊'; // 不顯示餘額。\r\n\r\n  const parts = number.toString().split('.') ?? ['0']; // 預設為'0'\r\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','); // 取出整數加上千分位','\r\n\r\n  /* 如台幣帳戶需顯示小數點，傳入isShowDecimal: true */\r\n  if (showFloat && parts[1]) float = parts[1].length;\r\n\r\n  if (float > 0) {\r\n    parts[1] = `${parts[1] ?? ''}000000`.substring(0, float); // 小數位數補齊\r\n  } else parts.splice(1, 1); // 不要顯示小數時，就把小數的數值刪掉。\r\n\r\n  return parts.join('.');\r\n};\r\n\r\n/**\r\n * 貨幣單位文字轉為符號\r\n * @param {String} currency 幣別代碼，例：TWD\r\n * @param {Number} amount 金額，可以有小數\r\n * @param {Boolean?} showFloat 強制顯示小數部份，不受各幣別內定的小數位數限制。\r\n */\r\nexport const currencySymbolGenerator = (currency, amount, showFloat = false) => {\r\n  const ccyInfo = CurrencyInfo.find((ccy) => ccy.code === currency);\r\n  const amtStr = toCurrency(amount, ccyInfo?.float, showFloat) ?? '';\r\n  if (ccyInfo) {\r\n    return ccyInfo.symbol + amtStr;\r\n  }\r\n  return amtStr;\r\n};\r\n\r\n/**\r\n * 將全形文字轉為半形\r\n * @param {*} str\r\n */\r\nexport const toHalfWidth = (str) => str?.replace(\r\n  /[\\uff01-\\uff5e]/g,\r\n  (ch) => String.fromCharCode(ch.charCodeAt(0) - 0xfee0),\r\n);\r\n\r\n// 將數字中的0轉換為中文\r\nexport const switchZhNumber = (numIndication, isPlus) => {\r\n  // 計算位數\r\n  // eslint-disable-next-line no-bitwise\r\n  const logedNum = (Math.log(numIndication) * Math.LOG10E + 1) | 0;\r\n\r\n  // 依據位數判斷回傳數字級單位\r\n  switch (logedNum) {\r\n    case 4: // 千\r\n      return `${numIndication / 1000}千`;\r\n    case 5: // 萬\r\n      // eslint-disable-next-line no-case-declarations\r\n      const thousand = (numIndication % 10000) / 1000;\r\n      // eslint-disable-next-line no-case-declarations\r\n      const tenThousand = Math.floor(numIndication / 10000);\r\n      return `${tenThousand}萬${thousand !== 0 ? `${thousand}千` : ''}`;\r\n    case 6: // 十萬\r\n      return `${numIndication / 10000}萬`;\r\n    case 7: // 百萬\r\n      return isPlus\r\n        ? `${numIndication / 10000}萬`\r\n        : `${numIndication / 1000000}百萬`;\r\n    case 8: // 千萬\r\n      return `${numIndication / 10000000}千萬`;\r\n    case 9: // 億\r\n      return `${numIndication / 100000000}億`;\r\n    default:\r\n      return '0';\r\n  }\r\n};\r\n\r\nexport const handleLoanTypeToTitle = (type) => {\r\n  const isCorrect = type.match('更正-') !== null;\r\n  let typeCode = type;\r\n\r\n  if (isCorrect) {\r\n    typeCode = type.substring(3);\r\n  }\r\n\r\n  return isCorrect ? `${PaymentType[typeCode]}(更正交易)` : `${PaymentType[typeCode]}`;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}